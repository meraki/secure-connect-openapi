{
  "openapi": "3.0.0",
  "info": {
    "title": "Meraki Integrated API for Secure Connect",
    "description": "The Cisco Meraki Integrated API for Secure Connect is a modern REST API based on the OpenAPI specification.\n  ---\n\n  [API Documentation](https://meraki.io/api)\n\n  [Meraki Homepage](https://www.meraki.com)\n",
    "version": "1.2.0",
    "contact": {
      "name": "Meraki Developer Community",
      "url": "https://meraki.io/community"
    }
  },
  "paths": {
    "/organizations/{organizationId}/reports/activity": {
      "get": {
        "tags": [
          "Reports",
          "Activity"
        ],
        "summary": "Get Activities (all)",
        "description": "List all activities (dns/proxy/firewall/intrusion) within the timeframe.\nNote: The IP activity report is not available.",
        "operationId": "getActivities",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "A number that represents an index into the collection.",
            "schema": {
              "type": "number",
              "default": 0
            },
            "example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return from the collection.",
            "required": true,
            "schema": {
              "type": "number",
              "default": 100
            },
            "example": 100
          },
          {
            "name": "domains",
            "in": "query",
            "description": "A domain name or comma-delimited list of domain name.",
            "schema": {
              "type": "string"
            },
            "example": "cisco.com,nasa.gov"
          },
          {
            "name": "urls",
            "in": "query",
            "description": "A URL or comma-delimited list of URL.",
            "schema": {
              "type": "string"
            },
            "example": "https://google.com,facebook.com/help"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.",
            "schema": {
              "type": "string"
            },
            "example": "148,151,66"
          },
          {
            "name": "policycategories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.\nFilter request by the categories that trigger a policy.",
            "schema": {
              "type": "string"
            },
            "example": "67,69"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "ports",
            "in": "query",
            "description": "A port number or comma-delimited list of port number.",
            "schema": {
              "type": "string"
            },
            "example": "7351,80"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "An application ID.",
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "verdict",
            "in": "query",
            "description": "A verdict string or comma-delimited list of verdict string.",
            "schema": {
              "type": "string"
            },
            "example": "allowed,blocked,proxied"
          },
          {
            "name": "ruleid",
            "in": "query",
            "description": "A firewall policy rule ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "filename",
            "in": "query",
            "description": "A string that identifies a filename. Filter request by the filename.\nSupports globbing or use of the wildcard character ('*'). The asterisk (*) matches\nzero or more occurrences of any character.",
            "schema": {
              "type": "string"
            },
            "example": "myfilename_*"
          },
          {
            "name": "securityoverridden",
            "in": "query",
            "description": "Specify whether to filter on requests that override security.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "A proxy bundle ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "threats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threattypes",
            "in": "query",
            "description": "A threat type or comma-delimited list of threat type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ampdisposition",
            "in": "query",
            "description": "An AMP disposition string or a comma-delimited list of AMP disposition string.",
            "schema": {
              "type": "string"
            },
            "example": "clean,malicious,unknown"
          },
          {
            "name": "antivirusthreats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            },
            "example": "Trojan.Linux.Generic.144075"
          },
          {
            "name": "x-traffic-type",
            "in": "header",
            "description": "A string or comma-delimited list of string that describes the type of traffic. Valid values are:\ndns, proxy, firewall, or ip. If the header is not set, the default value is 'all'.",
            "schema": {
              "type": "string"
            },
            "example": "dns,proxy,firewall,ip"
          },
          {
            "name": "isolatedstate",
            "in": "query",
            "description": "A string that describes the remote browser isolation\n(RBI) isolation type (for example: 'isolated' or 'not-isolated').",
            "schema": {
              "type": "string",
              "enum": [
                "isolated",
                "not-isolated"
              ]
            },
            "example": "isolated"
          },
          {
            "name": "isolatedFileAction",
            "in": "query",
            "description": "A string that describes the remote browser isolation (RBI) file action type\n(for example: 'viewed', 'downloaded-original-file', or 'downloaded-safe-pdf').",
            "schema": {
              "type": "string",
              "enum": [
                "viewed",
                "downloaded-original-file",
                "downloaded-safe-pdf"
              ]
            },
            "example": "downloaded-safe-pdf"
          },
          {
            "name": "datalosspreventionstate",
            "in": "query",
            "description": "A string that describes the status of a destination (for example: 'blocked').\nFilter data for requests that were blocked to protect data.",
            "schema": {
              "type": "string"
            },
            "example": "blocked"
          },
          {
            "name": "filternoisydomains",
            "in": "query",
            "description": "filter out domains that generate a lot of insignificant traffic (noise).",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "httperrors",
            "in": "query",
            "description": "Filter data for requests that resulted in a TLS error or a certificate error.\nValid values: `certificateerror` or `tlserror`.",
            "schema": {
              "type": "string",
              "enum": [
                "certificateerror",
                "tlserror"
              ]
            },
            "example": "certificateerror"
          },
          {
            "name": "exists",
            "in": "query",
            "description": "Specify a comma-separated list of attributes to filter the data. Valid values are: categories, policycategories, applicationid,\nnbarapplicationid, nbarapplicationtypeids, privateapplicationid, applicationgroupids, sha256, filename, threats, threattypes,\nantivirusthreats, destinationlistids, httperrors.",
            "schema": {
              "type": "string"
            },
            "example": "destinationlistids,threattypes"
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "Display the timestamp of the traffic events in the specified timezone.\nFor the timezone, provide a continent and city separated by an url-encoded forward slash ('/'), for example: timezone='ASIA%2fCALCUTTA'.",
            "schema": {
              "type": "string"
            },
            "example": "ASIA%2fCALCUTTA"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "description": "The information about the DNS activity.",
                            "properties": {
                              "externalip": {
                                "type": "string",
                                "description": "external IP for entry"
                              },
                              "internalip": {
                                "type": "string",
                                "description": "internal IP for entry"
                              },
                              "policycategories": {
                                "type": "array",
                                "description": "array of policy categories",
                                "items": {
                                  "type": "object",
                                  "description": "The category object",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the category"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "the human readable label of the category"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "the type of category"
                                    },
                                    "integration": {
                                      "type": "boolean",
                                      "description": "if the category is an integration"
                                    },
                                    "deprecated": {
                                      "type": "boolean",
                                      "description": "if the category is a legacy category"
                                    }
                                  }
                                }
                              },
                              "categories": {
                                "type": "array",
                                "description": "array of categories",
                                "items": {
                                  "type": "object",
                                  "description": "The category object",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the category"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "the human readable label of the category"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "the type of category"
                                    },
                                    "integration": {
                                      "type": "boolean",
                                      "description": "if the category is an integration"
                                    },
                                    "deprecated": {
                                      "type": "boolean",
                                      "description": "if the category is a legacy category"
                                    }
                                  }
                                }
                              },
                              "verdict": {
                                "type": "string",
                                "description": "verdict for entry"
                              },
                              "domain": {
                                "type": "string",
                                "description": "domain for entry"
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "The timestamp represented in millseconds",
                                "example": 1594557263000
                              },
                              "identities": {
                                "type": "array",
                                "description": "array of identities for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the identity",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the identity"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label for the identity"
                                    },
                                    "type": {
                                      "type": "object",
                                      "description": "The information about the identity including the type",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "The ID of the origin type for the identity"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label of the origin type for the identity"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The name of the origin type for the identity"
                                        }
                                      }
                                    },
                                    "deleted": {
                                      "type": "boolean",
                                      "description": "Indicates whether the identity was deleted or not"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "label",
                                    "type",
                                    "deleted"
                                  ],
                                  "example": {
                                    "id": 1,
                                    "label": "Catch Rate Testing System",
                                    "type": {
                                      "id": 21,
                                      "label": "Sites",
                                      "type": "site"
                                    },
                                    "deleted": false
                                  }
                                }
                              },
                              "allapplications": {
                                "type": "array",
                                "description": "array of applications for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the application",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "id of the application"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "label of the application"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "type of the application, NBAR or AVC"
                                    },
                                    "category": {
                                      "type": "object",
                                      "description": "the category of the application",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "id of the application category"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "label of the application category"
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "id": 1,
                                    "label": "malware",
                                    "type": "avc",
                                    "category": {
                                      "id": 2,
                                      "label": "Education"
                                    }
                                  }
                                }
                              },
                              "threats": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the threat",
                                  "properties": {
                                    "label": {
                                      "type": "string",
                                      "description": "the threat name or label"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "the type of threat"
                                    }
                                  }
                                },
                                "description": "array of threats for entry"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the request. A DNS request always has the type dns."
                              },
                              "querytype": {
                                "type": "string",
                                "description": "The type of DNS request that was made. For more information,\nsee Common DNS Request Types."
                              },
                              "date": {
                                "type": "string",
                                "description": "The date from the timestamp based on the timezone parameter",
                                "example": "2020-07-12"
                              },
                              "time": {
                                "type": "string",
                                "description": "The time in 24 hour format based on the timezone parameter",
                                "example": "12:34"
                              },
                              "returncode": {
                                "type": "number",
                                "description": "The DNS return code for this request.\nFor more information, see Common DNS return codes for any\nDNS service (and Umbrella)."
                              },
                              "allowedapplications": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the application",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "id of the application"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "label of the application"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "type of the application, NBAR or AVC"
                                    },
                                    "category": {
                                      "type": "object",
                                      "description": "the category of the application",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "id of the application category"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "label of the application category"
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "id": 1,
                                    "label": "malware",
                                    "type": "avc",
                                    "category": {
                                      "id": 2,
                                      "label": "Education"
                                    }
                                  }
                                }
                              },
                              "blockedapplications": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the application",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "id of the application"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "label of the application"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "type of the application, NBAR or AVC"
                                    },
                                    "category": {
                                      "type": "object",
                                      "description": "the category of the application",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "id of the application category"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "label of the application category"
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "id": 1,
                                    "label": "malware",
                                    "type": "avc",
                                    "category": {
                                      "id": 2,
                                      "label": "Education"
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "allapplications",
                              "allowedapplications",
                              "blockedapplications",
                              "categories",
                              "date",
                              "domain",
                              "externalip",
                              "identities",
                              "internalip",
                              "policycategories",
                              "querytype",
                              "returncode",
                              "threats",
                              "time",
                              "timestamp",
                              "type",
                              "verdict"
                            ],
                            "example": {
                              "externalip": "52.8.160.247",
                              "internalip": "52.8.160.247",
                              "policycategories": [
                                {
                                  "id": 66,
                                  "label": "Malware",
                                  "type": "security",
                                  "integration": true
                                }
                              ],
                              "categories": [
                                {
                                  "id": 66,
                                  "label": "Malware",
                                  "type": "security",
                                  "integration": true
                                }
                              ],
                              "verdict": "allowed",
                              "domain": "google.com",
                              "timestamp": 1548311506,
                              "time": "06:31:46",
                              "date": "2019-01-24",
                              "identities": [
                                {
                                  "id": 1,
                                  "label": "Catch Rate Testing System",
                                  "type": {
                                    "id": 21,
                                    "label": "Sites",
                                    "type": "site"
                                  },
                                  "deleted": true
                                }
                              ],
                              "threats": [
                                {
                                  "label": "Wannacry",
                                  "type": "Ransomware"
                                }
                              ],
                              "allapplications": [
                                {
                                  "id": 1,
                                  "label": "label",
                                  "type": "NBAR",
                                  "category": {
                                    "id": 1,
                                    "label": "category"
                                  }
                                }
                              ],
                              "allowedapplications": [
                                {
                                  "id": 1,
                                  "label": "label",
                                  "type": "NBAR",
                                  "category": {
                                    "id": 1,
                                    "label": "category"
                                  }
                                }
                              ],
                              "querytype": "MX",
                              "returncode": 2,
                              "blockedapplications": [

                              ],
                              "type": "dns"
                            }
                          },
                          {
                            "type": "object",
                            "description": "The information about the firewall activity",
                            "properties": {
                              "date": {
                                "type": "string",
                                "description": "The date from the timestamp based on the timezone parameter",
                                "example": "2020-07-12"
                              },
                              "destinationip": {
                                "type": "string",
                                "description": "destination IP for entry",
                                "example": "12.10.10.10"
                              },
                              "sourceip": {
                                "type": "string",
                                "description": "source IP for entry",
                                "example": "10.11.10.10"
                              },
                              "sourceport": {
                                "type": "number",
                                "description": "source port for entry",
                                "example": 3000
                              },
                              "destinationport": {
                                "type": "number",
                                "description": "destination port for entry",
                                "example": 89
                              },
                              "verdict": {
                                "type": "string",
                                "description": "verdict for entry"
                              },
                              "time": {
                                "type": "string",
                                "description": "The time in 24 hour format based on the timezone parameter",
                                "example": "12:34"
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "The timestamp represented in millseconds",
                                "example": 1594557263000
                              },
                              "identities": {
                                "type": "array",
                                "description": "array of identities for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the identity",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the identity"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label for the identity"
                                    },
                                    "type": {
                                      "type": "object",
                                      "description": "The information about the identity including the type",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "The ID of the origin type for the identity"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label of the origin type for the identity"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The name of the origin type for the identity"
                                        }
                                      }
                                    },
                                    "deleted": {
                                      "type": "boolean",
                                      "description": "Indicates whether the identity was deleted or not"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "label",
                                    "type",
                                    "deleted"
                                  ],
                                  "example": {
                                    "id": 1,
                                    "label": "Catch Rate Testing System",
                                    "type": {
                                      "id": 21,
                                      "label": "Sites",
                                      "type": "site"
                                    },
                                    "deleted": false
                                  }
                                }
                              },
                              "protocol": {
                                "type": "object",
                                "description": "IP protocol",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "description": "The ID of protocol"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The name of the protocol"
                                  }
                                },
                                "required": [
                                  "id",
                                  "label"
                                ]
                              },
                              "rule": {
                                "type": "object",
                                "description": "The firewall rule",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "description": "The ID of the rule"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The name of the rule"
                                  },
                                  "privateapplicationgroup": {
                                    "type": "object",
                                    "description": "The private application group",
                                    "properties": {
                                      "id": {
                                        "nullable": true,
                                        "type": "number",
                                        "description": "The ID of application group"
                                      },
                                      "label": {
                                        "nullable": true,
                                        "type": "string",
                                        "description": "The name of the application group"
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "id",
                                  "label"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the request. A firewall request always has type firewall."
                              },
                              "allapplications": {
                                "type": "array",
                                "description": "A list of firewall applications",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the applications managed by the firewall",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "application/protocol id"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "application/protocol label"
                                    },
                                    "app": {
                                      "type": "string",
                                      "description": "type: \"IT Service Management\" (string) - application/protocol type"
                                    }
                                  }
                                }
                              },
                              "applicationprotocols": {
                                "type": "array",
                                "description": "A list of firewall application protocols.",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the applications managed by the firewall",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "application/protocol id"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "application/protocol label"
                                    },
                                    "app": {
                                      "type": "string",
                                      "description": "type: \"IT Service Management\" (string) - application/protocol type"
                                    }
                                  }
                                }
                              },
                              "direction": {
                                "type": "string",
                                "description": "The direction of the packet. It is destined either towards the internet or to the customer's network."
                              },
                              "packetsize": {
                                "type": "number",
                                "description": "The size of the packet that Umbrella CDFW received."
                              }
                            },
                            "required": [
                              "allapplications",
                              "applicationprotocols",
                              "date",
                              "destinationip",
                              "destinationport",
                              "direction",
                              "identities",
                              "packetsize",
                              "protocol",
                              "rule",
                              "sourceip",
                              "sourceport",
                              "time",
                              "timestamp",
                              "type",
                              "verdict"
                            ],
                            "example": {
                              "date": "",
                              "destinationip": "52.8.160.247",
                              "sourceip": "192.168.0.1",
                              "sourceport": 0,
                              "destinationport": 0,
                              "direction": "toward",
                              "verdict": "allowed",
                              "time": "12:34",
                              "timestamp": 1548311506,
                              "packetsize": 32,
                              "identities": [
                                {
                                  "id": 1,
                                  "label": "Catch Rate Testing System",
                                  "type": {
                                    "id": 21,
                                    "label": "Sites",
                                    "type": "site"
                                  },
                                  "deleted": false
                                }
                              ],
                              "protocol": {
                                "id": 17,
                                "label": "UDP"
                              },
                              "rule": {
                                "id": 1,
                                "label": "Default Rule"
                              },
                              "type": "firewall",
                              "allapplications": [
                                {
                                  "id": 72,
                                  "label": "dns IT Service Management",
                                  "app": ""
                                }
                              ],
                              "applicationprotocols": [
                                {
                                  "id": 72,
                                  "label": "dns IT Service Management",
                                  "app": ""
                                }
                              ]
                            }
                          },
                          {
                            "type": "object",
                            "description": "The information about the intrusion activity",
                            "properties": {
                              "classification": {
                                "type": "string",
                                "description": "The category of attack detected by a rule that is part of a more general type of attack class, such as trojan-activity, attempted-user, and unknown.",
                                "example": "trojan-activity"
                              },
                              "date": {
                                "type": "string",
                                "description": "The date from the timestamp based on the timezone parameter",
                                "example": "2020-07-12"
                              },
                              "destinationip": {
                                "type": "string",
                                "description": "destination IP for entry",
                                "example": "12.10.10.10"
                              },
                              "destinationport": {
                                "type": "number",
                                "description": "destination port for entry",
                                "example": 89
                              },
                              "identities": {
                                "type": "array",
                                "description": "array of identities for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the identity",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the identity"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label for the identity"
                                    },
                                    "type": {
                                      "type": "object",
                                      "description": "The information about the identity including the type",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "The ID of the origin type for the identity"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label of the origin type for the identity"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The name of the origin type for the identity"
                                        }
                                      }
                                    },
                                    "deleted": {
                                      "type": "boolean",
                                      "description": "Indicates whether the identity was deleted or not"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "label",
                                    "type",
                                    "deleted"
                                  ],
                                  "example": {
                                    "id": 1,
                                    "label": "Catch Rate Testing System",
                                    "type": {
                                      "id": 21,
                                      "label": "Sites",
                                      "type": "site"
                                    },
                                    "deleted": false
                                  }
                                }
                              },
                              "protocol": {
                                "type": "object",
                                "description": "IP protocol",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "description": "The ID of protocol"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The name of the protocol"
                                  }
                                },
                                "required": [
                                  "id",
                                  "label"
                                ]
                              },
                              "sessionid": {
                                "type": "number",
                                "description": "The unique identifier of a session, which is used to group the correlated events between various services.",
                                "example": 7878797
                              },
                              "severity": {
                                "type": "string",
                                "description": "The severity level of the rule, such as High, Medium, Low, and Very Low.",
                                "example": "High"
                              },
                              "signature": {
                                "type": "object",
                                "properties": {
                                  "generatorid": {
                                    "type": "number",
                                    "description": "Unique id assigned to the part of the IPS which generated the event."
                                  },
                                  "id": {
                                    "type": "number",
                                    "description": "Used to uniquely identify signatures."
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "A brief description of the signature."
                                  },
                                  "cves": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": "An identifier for a known security vulnerability/exposure",
                                      "example": "cve-2015-0279"
                                    }
                                  }
                                },
                                "required": [
                                  "generatorid",
                                  "id",
                                  "label",
                                  "cves"
                                ],
                                "example": {
                                  "generatorid": 148,
                                  "id": 2,
                                  "label": "(cip) CIP data is non-conforming to ODVA standard",
                                  "cves": [
                                    "cve-2015-0279"
                                  ]
                                }
                              },
                              "signaturelist": {
                                "type": "object",
                                "description": "A list of signature ID",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "description": "Unique id assigned to a Default or Custom Signature List."
                                  }
                                },
                                "required": [
                                  "id"
                                ],
                                "example": {
                                  "id": 1112
                                }
                              },
                              "sourceip": {
                                "type": "string",
                                "description": "source IP for entry",
                                "example": "10.11.10.10"
                              },
                              "sourceport": {
                                "type": "number",
                                "description": "source port for entry",
                                "example": 3000
                              },
                              "time": {
                                "type": "string",
                                "description": "The time in 24 hour format based on the timezone parameter",
                                "example": "12:34"
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "The timestamp represented in millseconds",
                                "example": 1594557263000
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the request. An intrusion request always has type intrusion."
                              },
                              "verdict": {
                                "type": "string",
                                "description": "verdict for entry"
                              }
                            },
                            "required": [
                              "classification",
                              "date",
                              "destinationip",
                              "destinationport",
                              "identities",
                              "protocol",
                              "sessionid",
                              "severity",
                              "signature",
                              "signaturelist",
                              "sourceip",
                              "sourceport",
                              "time",
                              "timestamp",
                              "type",
                              "verdict"
                            ],
                            "example": {
                              "type": "intrusion",
                              "date": "12-02-22",
                              "destinationip": "10.10.10.10",
                              "protocol": {
                                "id": 17,
                                "label": "UDP"
                              },
                              "sourceip": "10.10.10.10",
                              "signaturelist": {
                                "id": 1111
                              },
                              "classification": "malicious",
                              "sourceport": 22,
                              "sessionid": 190898098,
                              "verdict": "detected",
                              "destinationport": 33,
                              "timestamp": 1594557262000,
                              "time": "09:30",
                              "identities": [
                                {
                                  "id": 211034846,
                                  "type": {
                                    "id": 34,
                                    "type": "anyconnect",
                                    "label": "Anyconnect Roaming Client"
                                  },
                                  "label": "omerta",
                                  "deleted": false
                                }
                              ],
                              "severity": "HIGH",
                              "signature": {
                                "generatorid": 1,
                                "id": 47829,
                                "label": "SERVER-OTHER JBoss Richfaces expression language injection attempt",
                                "cves": [
                                  "cve-2015-0279",
                                  "cve-2018-12532"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "The activity of the proxy",
                            "properties": {
                              "externalip": {
                                "type": "string",
                                "description": "external IP for entry"
                              },
                              "internalip": {
                                "type": "string",
                                "description": "internal IP for entry"
                              },
                              "policycategories": {
                                "type": "array",
                                "description": "array of policy categories",
                                "items": {
                                  "type": "object",
                                  "description": "The category object",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the category"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "the human readable label of the category"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "the type of category"
                                    },
                                    "integration": {
                                      "type": "boolean",
                                      "description": "if the category is an integration"
                                    },
                                    "deprecated": {
                                      "type": "boolean",
                                      "description": "if the category is a legacy category"
                                    }
                                  }
                                }
                              },
                              "categories": {
                                "type": "array",
                                "description": "array of categories",
                                "items": {
                                  "type": "object",
                                  "description": "The category object",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the category"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "the human readable label of the category"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "the type of category"
                                    },
                                    "integration": {
                                      "type": "boolean",
                                      "description": "if the category is an integration"
                                    },
                                    "deprecated": {
                                      "type": "boolean",
                                      "description": "if the category is a legacy category"
                                    }
                                  }
                                }
                              },
                              "verdict": {
                                "type": "string",
                                "description": "verdict for entry"
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "The timestamp represented in millseconds",
                                "example": 1594557263000
                              },
                              "identities": {
                                "type": "array",
                                "description": "array of identities for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the identity",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the identity"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label for the identity"
                                    },
                                    "type": {
                                      "type": "object",
                                      "description": "The information about the identity including the type",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "The ID of the origin type for the identity"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label of the origin type for the identity"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The name of the origin type for the identity"
                                        }
                                      }
                                    },
                                    "deleted": {
                                      "type": "boolean",
                                      "description": "Indicates whether the identity was deleted or not"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "label",
                                    "type",
                                    "deleted"
                                  ],
                                  "example": {
                                    "id": 1,
                                    "label": "Catch Rate Testing System",
                                    "type": {
                                      "id": 21,
                                      "label": "Sites",
                                      "type": "site"
                                    },
                                    "deleted": false
                                  }
                                }
                              },
                              "allapplications": {
                                "type": "array",
                                "description": "array of applications for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the application",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "id of the application"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "label of the application"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "type of the application, NBAR or AVC"
                                    },
                                    "category": {
                                      "type": "object",
                                      "description": "the category of the application",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "id of the application category"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "label of the application category"
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "id": 1,
                                    "label": "malware",
                                    "type": "avc",
                                    "category": {
                                      "id": 2,
                                      "label": "Education"
                                    }
                                  }
                                }
                              },
                              "allowedapplications": {
                                "type": "array",
                                "description": "array of allowed applications for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the application",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "id of the application"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "label of the application"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "type of the application, NBAR or AVC"
                                    },
                                    "category": {
                                      "type": "object",
                                      "description": "the category of the application",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "id of the application category"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "label of the application category"
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "id": 1,
                                    "label": "malware",
                                    "type": "avc",
                                    "category": {
                                      "id": 2,
                                      "label": "Education"
                                    }
                                  }
                                }
                              },
                              "blockedapplications": {
                                "type": "array",
                                "description": "array of blocked applications for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the application",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "id of the application"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "label of the application"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "type of the application, NBAR or AVC"
                                    },
                                    "category": {
                                      "type": "object",
                                      "description": "the category of the application",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "id of the application category"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "label of the application category"
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "id": 1,
                                    "label": "malware",
                                    "type": "avc",
                                    "category": {
                                      "id": 2,
                                      "label": "Education"
                                    }
                                  }
                                }
                              },
                              "responsefilename": {
                                "type": "string",
                                "description": "response filename for entry"
                              },
                              "blockedfiletype": {
                                "type": "string",
                                "description": "blocked file type for entry"
                              },
                              "bundleid": {
                                "type": "number",
                                "description": "The ID of the bundle"
                              },
                              "amp": {
                                "type": "object",
                                "description": "AMP disposition/score/malware",
                                "properties": {
                                  "score": {
                                    "type": "number",
                                    "description": "AMP score"
                                  },
                                  "disposition": {
                                    "type": "string",
                                    "description": "AMP disposition"
                                  },
                                  "malware": {
                                    "type": "string",
                                    "description": "AMP malware"
                                  }
                                },
                                "required": [
                                  "disposition",
                                  "malware",
                                  "score"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "description": "type of the request. A proxy request is always of type 'proxy'."
                              },
                              "tenantcontrols": {
                                "type": "boolean",
                                "description": "if the request was part of a tenant control policy"
                              },
                              "port": {
                                "type": "number",
                                "description": "request port",
                                "nullable": true
                              },
                              "antivirusthreats": {
                                "type": "object",
                                "description": "The information about the antivirus threats",
                                "properties": {
                                  "puas": {
                                    "type": "array",
                                    "description": "Potentially unwanted applications",
                                    "items": {
                                      "type": "object"
                                    }
                                  },
                                  "viruses": {
                                    "type": "array",
                                    "description": "Viruses",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "others": {
                                    "type": "array",
                                    "description": "Other antivirus threats",
                                    "items": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "required": [
                                  "others",
                                  "puas",
                                  "viruses"
                                ]
                              },
                              "policy": {
                                "type": "object",
                                "required": [
                                  "destinationlistids",
                                  "ruleid",
                                  "rulesetid",
                                  "timebasedrule"
                                ],
                                "properties": {
                                  "timebasedrule": {
                                    "type": "boolean",
                                    "description": "whether the policy triggered a time-of-day rule"
                                  },
                                  "destinationlistids": {
                                    "type": "array",
                                    "description": "the destination lists that the policy triggered",
                                    "items": {
                                      "type": "number"
                                    }
                                  },
                                  "ruleid": {
                                    "type": "number",
                                    "description": "the rule ID for the policy",
                                    "nullable": true
                                  },
                                  "rulesetid": {
                                    "type": "number",
                                    "description": "the rule set ID for the policy",
                                    "nullable": true
                                  }
                                }
                              },
                              "requestmethod": {
                                "type": "string",
                                "description": "The HTTP request method that was made.",
                                "example": "GET"
                              },
                              "responsesize": {
                                "type": "number",
                                "description": "Response size in bytes."
                              },
                              "requestsize": {
                                "type": "number",
                                "description": "Request size in bytes."
                              },
                              "statuscode": {
                                "type": "number",
                                "description": "The HTTP status code; should always be 200 or 201.",
                                "example": 200
                              },
                              "useragent": {
                                "type": "string",
                                "description": "The browser agent that made the request."
                              },
                              "referer": {
                                "type": "string",
                                "description": "The referring domain or URL."
                              },
                              "warnstatus": {
                                "type": "string",
                                "description": "The warning status."
                              },
                              "sha256": {
                                "type": "string",
                                "description": "The hex digest of the response content."
                              },
                              "isolated": {
                                "type": "object",
                                "properties": {
                                  "state": {
                                    "type": "string",
                                    "description": "The state of the isolated file"
                                  },
                                  "fileaction": {
                                    "type": "string",
                                    "description": "The action taken for the file"
                                  }
                                },
                                "required": [
                                  "state",
                                  "fileaction"
                                ],
                                "example": {
                                  "state": "not-isolated",
                                  "fileaction": ""
                                }
                              },
                              "datalossprevention": {
                                "type": "object",
                                "description": "The information about the Data Loss Prevention state",
                                "properties": {
                                  "state": {
                                    "type": "string",
                                    "description": "If the request was Blocked for DLP. Either 'blocked' or ''"
                                  }
                                },
                                "required": [
                                  "state"
                                ],
                                "example": {
                                  "state": "blocked"
                                }
                              },
                              "securityoverridden": {
                                "type": "boolean",
                                "description": "Specifies whether Umbrella has security overrides."
                              },
                              "contenttype": {
                                "type": "string",
                                "description": "The type of web content, typically text/html.",
                                "example": "text/html"
                              },
                              "forwardingmethod": {
                                "type": "string",
                                "description": "The request method (GET, POST, HEAD, etc.)",
                                "example": "GET"
                              },
                              "httperrors": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "type of the error `CertificateError` or `TLSError`"
                                    },
                                    "code": {
                                      "type": "number",
                                      "description": "the http error code"
                                    },
                                    "reason": {
                                      "type": "string",
                                      "description": "the name of the error"
                                    },
                                    "attributes": {
                                      "type": "object",
                                      "description": "map of additional information about the error"
                                    }
                                  }
                                },
                                "description": "Certificate & TLS Errors"
                              },
                              "threats": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the threat",
                                  "properties": {
                                    "label": {
                                      "type": "string",
                                      "description": "the threat name or label"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "the type of threat"
                                    }
                                  }
                                }
                              },
                              "egress": {
                                "type": "object",
                                "description": "The information about the egress IP",
                                "properties": {
                                  "ip": {
                                    "type": "string",
                                    "description": "Egress IP"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Egress Type"
                                  }
                                },
                                "required": [
                                  "ip",
                                  "type"
                                ],
                                "example": {
                                  "ip": "155.190.3.8",
                                  "type": "shared"
                                }
                              },
                              "datacenter": {
                                "type": "object",
                                "description": "The information about the data center",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique ID for the data center"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "Name of the data center"
                                  }
                                },
                                "required": [
                                  "id",
                                  "label"
                                ],
                                "example": {
                                  "id": "LAX",
                                  "label": "Los Angeles, US"
                                }
                              },
                              "date": {
                                "type": "string",
                                "description": "The date from the timestamp based on the timezone parameter",
                                "example": "2020-07-12"
                              },
                              "time": {
                                "type": "string",
                                "description": "The time in 24 hour format based on the timezone parameter",
                                "example": "12:34"
                              },
                              "destinationip": {
                                "type": "string",
                                "description": "destination IP for entry",
                                "example": "12.10.10.10"
                              },
                              "url": {
                                "type": "string",
                                "description": "The URL requested"
                              }
                            },
                            "required": [
                              "allapplications",
                              "allowedapplications",
                              "amp",
                              "antivirusthreats",
                              "blockedapplications",
                              "blockedfiletype",
                              "bundleid",
                              "categories",
                              "contenttype",
                              "datacenter",
                              "datalossprevention",
                              "date",
                              "destinationip",
                              "egress",
                              "externalip",
                              "forwardingmethod",
                              "httperrors",
                              "identities",
                              "internalip",
                              "isolated",
                              "policy",
                              "policycategories",
                              "port",
                              "referer",
                              "requestsize",
                              "responsefilename",
                              "responsesize",
                              "securityoverridden",
                              "sha256",
                              "statuscode",
                              "tenantcontrols",
                              "threats",
                              "time",
                              "timestamp",
                              "type",
                              "url",
                              "useragent",
                              "verdict",
                              "warnstatus"
                            ],
                            "example": {
                              "destinationip": "",
                              "externalip": "32.4.91.7",
                              "responsesize": 3329530,
                              "allapplications": [
                                {
                                  "id": 1313,
                                  "label": "Netflix",
                                  "category": {
                                    "id": 47,
                                    "label": "Media"
                                  }
                                }
                              ],
                              "date": "2022-02-18",
                              "datalossprevention": {
                                "state": ""
                              },
                              "antivirusthreats": {
                                "puas": [

                                ],
                                "viruses": [

                                ],
                                "others": [

                                ]
                              },
                              "internalip": "192.168.1.43",
                              "referer": "",
                              "contenttype": "",
                              "tenantcontrols": false,
                              "securityoverridden": false,
                              "useragent": "",
                              "time": "23:29:42",
                              "amp": {
                                "disposition": "",
                                "score": 0,
                                "malware": ""
                              },
                              "policycategories": [

                              ],
                              "type": "proxy",
                              "requestsize": 1996,
                              "port": 443,
                              "policy": {
                                "ruleid": 0,
                                "rulesetid": 0,
                                "destinationlistids": [

                                ],
                                "timebasedrule": false
                              },
                              "forwardingmethod": "",
                              "categories": [
                                {
                                  "id": 17,
                                  "type": "content",
                                  "label": "Movies",
                                  "integration": false,
                                  "deprecated": true
                                }
                              ],
                              "isolated": {
                                "state": "not-isolated",
                                "fileaction": ""
                              },
                              "statuscode": 200,
                              "egress": {
                                "ip": "155.190.3.8",
                                "type": "shared"
                              },
                              "blockedfiletype": "",
                              "url": "https://ipv4-lax2-ix.1.oca.anothervideo.net",
                              "verdict": "allowed",
                              "responsefilename": "",
                              "warnstatus": "",
                              "sha256": "",
                              "timestamp": 1645226982000,
                              "blockedapplications": [

                              ],
                              "allowedapplications": [

                              ],
                              "identities": [
                                {
                                  "id": 1,
                                  "type": {
                                    "id": 34,
                                    "type": "anyconnect",
                                    "label": "Anyconnect Roaming Client"
                                  },
                                  "label": "Vincent's Macbook",
                                  "deleted": false
                                }
                              ],
                              "datacenter": {
                                "label": "Atlanta, US",
                                "id": "ATL"
                              },
                              "threats": [

                              ],
                              "httperrors": [

                              ],
                              "bundleid": 3
                            }
                          }
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "meta": {
                  },
                  "data": [
                    {
                      "externalip": "52.8.160.247",
                      "internalip": "52.8.160.247",
                      "policycategories": [
                        {
                          "id": 66,
                          "label": "Malware",
                          "type": "security",
                          "integration": true
                        }
                      ],
                      "categories": [
                        {
                          "id": 66,
                          "label": "Malware",
                          "type": "security",
                          "integration": true
                        }
                      ],
                      "verdict": "allowed",
                      "domain": "google.com",
                      "timestamp": 1548311506,
                      "time": "06:31:46",
                      "date": "2019-01-24",
                      "identities": [
                        {
                          "id": 1,
                          "label": "Catch Rate Testing System",
                          "type": {
                            "id": 21,
                            "label": "Sites",
                            "type": "site"
                          },
                          "deleted": true
                        }
                      ],
                      "threats": [
                        {
                          "label": "Wannacry",
                          "type": "Ransomware"
                        }
                      ],
                      "allapplications": [
                        {
                          "id": 1,
                          "label": "label",
                          "type": "NBAR",
                          "category": {
                            "id": 1,
                            "label": "category"
                          }
                        }
                      ],
                      "allowedapplications": [
                        {
                          "id": 1,
                          "label": "label",
                          "type": "NBAR",
                          "category": {
                            "id": 1,
                            "label": "category"
                          }
                        }
                      ],
                      "querytype": "MX",
                      "returncode": 2,
                      "blockedapplications": [

                      ],
                      "type": "dns"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/reports/topCategories": {
      "get": {
        "tags": [
          "Reports",
          "Top Categories"
        ],
        "summary": "Get Top Categories (all)",
        "description": "List the categories which received the greatest number of requests.\nOrder the number of requests in descending order.",
        "operationId": "getTopCategories",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return from the collection.",
            "required": true,
            "schema": {
              "type": "number",
              "default": 100
            },
            "example": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "A number that represents an index into the collection.",
            "schema": {
              "type": "number",
              "default": 0
            },
            "example": 0
          },
          {
            "name": "domains",
            "in": "query",
            "description": "A domain name or comma-delimited list of domain name.",
            "schema": {
              "type": "string"
            },
            "example": "cisco.com,nasa.gov"
          },
          {
            "name": "urls",
            "in": "query",
            "description": "A URL or comma-delimited list of URL.",
            "schema": {
              "type": "string"
            },
            "example": "https://google.com,facebook.com/help"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.",
            "schema": {
              "type": "string"
            },
            "example": "148,151,66"
          },
          {
            "name": "policycategories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.\nFilter request by the categories that trigger a policy.",
            "schema": {
              "type": "string"
            },
            "example": "67,69"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "An application ID.",
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "verdict",
            "in": "query",
            "description": "A verdict string or comma-delimited list of verdict string.",
            "schema": {
              "type": "string"
            },
            "example": "allowed,blocked,proxied"
          },
          {
            "name": "sha256",
            "in": "query",
            "description": "A SHA-256 hash",
            "schema": {
              "type": "string"
            },
            "example": "ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
          },
          {
            "name": "securityoverridden",
            "in": "query",
            "description": "Specify whether to filter on requests that override security.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "A proxy bundle ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "threats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threattypes",
            "in": "query",
            "description": "A threat type or comma-delimited list of threat type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ampdisposition",
            "in": "query",
            "description": "An AMP disposition string or a comma-delimited list of AMP disposition string.",
            "schema": {
              "type": "string"
            },
            "example": "clean,malicious,unknown"
          },
          {
            "name": "antivirusthreats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            },
            "example": "Trojan.Linux.Generic.144075"
          },
          {
            "name": "datalosspreventionstate",
            "in": "query",
            "description": "A string that describes the status of a destination (for example: 'blocked').\nFilter data for requests that were blocked to protect data.",
            "schema": {
              "type": "string"
            },
            "example": "blocked"
          },
          {
            "name": "filternoisydomains",
            "in": "query",
            "description": "filter out domains that generate a lot of insignificant traffic (noise).",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "Display the timestamp of the traffic events in the specified timezone.\nFor the timezone, provide a continent and city separated by an url-encoded forward slash ('/'), for example: timezone='ASIA%2fCALCUTTA'.",
            "schema": {
              "type": "string"
            },
            "example": "ASIA%2fCALCUTTA"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The information about the top category requests",
                        "properties": {
                          "rank": {
                            "type": "number",
                            "description": "the rank of the result based on the number of requests"
                          },
                          "category": {
                            "type": "object",
                            "description": "The category object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "description": "The ID of the category"
                              },
                              "label": {
                                "type": "string",
                                "description": "the human readable label of the category"
                              },
                              "type": {
                                "type": "string",
                                "description": "the type of category"
                              },
                              "integration": {
                                "type": "boolean",
                                "description": "if the category is an integration"
                              },
                              "deprecated": {
                                "type": "boolean",
                                "description": "if the category is a legacy category"
                              }
                            }
                          },
                          "count": {
                            "type": "number",
                            "description": "number of requests made that match this category"
                          },
                          "bandwidth": {
                            "type": "number",
                            "nullable": true
                          }
                        },
                        "required": [
                          "category",
                          "count",
                          "rank"
                        ],
                        "example": {
                          "rank": 5,
                          "category": {
                            "id": 66,
                            "label": "Malware",
                            "type": "security",
                            "integration": true
                          },
                          "count": 3827
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "rank": 5,
                      "category": {
                        "id": 66,
                        "label": "Malware",
                        "typse": "security",
                        "integration": true
                      },
                      "count": 3827
                    }
                  ],
                  "meta": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/reports/categoriesByTimerange": {
      "get": {
        "tags": [
          "Reports",
          "Organization Requests by Timerange and Category"
        ],
        "summary": "Get Requests by Timerange and Category (ALL)",
        "description": "List the activity volume within the timeframe by category.",
        "operationId": "getRequestsByTimerangeAndCategory",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return from the collection.",
            "required": true,
            "schema": {
              "type": "number",
              "default": 100
            },
            "example": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "A number that represents an index into the collection.",
            "schema": {
              "type": "number",
              "default": 0
            },
            "example": 0
          },
          {
            "name": "domains",
            "in": "query",
            "description": "A domain name or comma-delimited list of domain name.",
            "schema": {
              "type": "string"
            },
            "example": "cisco.com,nasa.gov"
          },
          {
            "name": "urls",
            "in": "query",
            "description": "A URL or comma-delimited list of URL.",
            "schema": {
              "type": "string"
            },
            "example": "https://google.com,facebook.com/help"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.",
            "schema": {
              "type": "string"
            },
            "example": "148,151,66"
          },
          {
            "name": "policycategories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.\nFilter request by the categories that trigger a policy.",
            "schema": {
              "type": "string"
            },
            "example": "67,69"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "An application ID.",
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "verdict",
            "in": "query",
            "description": "A verdict string or comma-delimited list of verdict string.",
            "schema": {
              "type": "string"
            },
            "example": "allowed,blocked,proxied"
          },
          {
            "name": "securityoverridden",
            "in": "query",
            "description": "Specify whether to filter on requests that override security.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "A proxy bundle ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "threats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threattypes",
            "in": "query",
            "description": "A threat type or comma-delimited list of threat type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ampdisposition",
            "in": "query",
            "description": "An AMP disposition string or a comma-delimited list of AMP disposition string.",
            "schema": {
              "type": "string"
            },
            "example": "clean,malicious,unknown"
          },
          {
            "name": "antivirusthreats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            },
            "example": "Trojan.Linux.Generic.144075"
          },
          {
            "name": "timerange",
            "in": "header",
            "description": "A string that represents a range of time (for example: `minute`, `hour`, or `day`).\nIf the header is not set, the header value defaults to `hour`.",
            "schema": {
              "type": "string"
            },
            "example": "minute"
          },
          {
            "name": "datalosspreventionstate",
            "in": "query",
            "description": "A string that describes the status of a destination (for example: 'blocked').\nFilter data for requests that were blocked to protect data.",
            "schema": {
              "type": "string"
            },
            "example": "blocked"
          },
          {
            "name": "filternoisydomains",
            "in": "query",
            "description": "filter out domains that generate a lot of insignificant traffic (noise).",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "Display the timestamp of the traffic events in the specified timezone.\nFor the timezone, provide a continent and city separated by an url-encoded forward slash ('/'), for example: timezone='ASIA%2fCALCUTTA'.",
            "schema": {
              "type": "string"
            },
            "example": "ASIA%2fCALCUTTA"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "required": [
                          "counts",
                          "date",
                          "time",
                          "timestamp"
                        ],
                        "type": "object",
                        "description": "The information about the categories seen by hour",
                        "properties": {
                          "timestamp": {
                            "type": "number",
                            "description": "The timestamp represented in milliseconds for this bucket",
                            "example": 1594557263000
                          },
                          "date": {
                            "type": "string",
                            "description": "The date from the timestamp based on the timezone parameter",
                            "example": "2020-07-12"
                          },
                          "time": {
                            "type": "string",
                            "description": "The time in 24 hour format based on the timezone parameter",
                            "example": "12:34"
                          },
                          "counts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The information about the category counts",
                              "properties": {
                                "category": {
                                  "type": "object",
                                  "description": "The category object",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the category"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "the human readable label of the category"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "the type of category"
                                    },
                                    "integration": {
                                      "type": "boolean",
                                      "description": "if the category is an integration"
                                    },
                                    "deprecated": {
                                      "type": "boolean",
                                      "description": "if the category is a legacy category"
                                    }
                                  }
                                },
                                "requests": {
                                  "type": "number",
                                  "description": "total number of requests for category"
                                }
                              },
                              "required": [
                                "category",
                                "requests"
                              ],
                              "example": {
                                "category": {
                                },
                                "requests": 24
                              }
                            }
                          }
                        },
                        "example": {
                          "timestamp": 1559836800000,
                          "date": "2019",
                          "time": "16:00:00",
                          "counts": [
                            {
                              "category": {
                                "id": 66,
                                "label": "Malware",
                                "type": "security",
                                "integration": true
                              },
                              "requests": 123
                            }
                          ]
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "timestamp": 1559836800000,
                      "date": "2019",
                      "time": "16:00:00",
                      "counts": [
                        {
                          "category": {
                            "id": 66,
                            "label": "Malware",
                            "type": "security",
                            "integration": true
                          },
                          "requests": 123
                        }
                      ]
                    }
                  ],
                  "meta": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/reports/totalRequests": {
      "get": {
        "tags": [
          "Reports",
          "Total Requests"
        ],
        "summary": "Get Total Requests (All)",
        "description": "List the count of total requests for the given filters.",
        "operationId": "getTotalRequests",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "domains",
            "in": "query",
            "description": "A domain name or comma-delimited list of domain name.",
            "schema": {
              "type": "string"
            },
            "example": "cisco.com,nasa.gov"
          },
          {
            "name": "urls",
            "in": "query",
            "description": "A URL or comma-delimited list of URL.",
            "schema": {
              "type": "string"
            },
            "example": "https://google.com,facebook.com/help"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.",
            "schema": {
              "type": "string"
            },
            "example": "148,151,66"
          },
          {
            "name": "policycategories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.\nFilter request by the categories that trigger a policy.",
            "schema": {
              "type": "string"
            },
            "example": "67,69"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "ports",
            "in": "query",
            "description": "A port number or comma-delimited list of port number.",
            "schema": {
              "type": "string"
            },
            "example": "7351,80"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "An application ID.",
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "verdict",
            "in": "query",
            "description": "A verdict string or comma-delimited list of verdict string.",
            "schema": {
              "type": "string"
            },
            "example": "allowed,blocked,proxied"
          },
          {
            "name": "ruleid",
            "in": "query",
            "description": "A firewall policy rule ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "sha256",
            "in": "query",
            "description": "A SHA-256 hash",
            "schema": {
              "type": "string"
            },
            "example": "ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
          },
          {
            "name": "securityoverridden",
            "in": "query",
            "description": "Specify whether to filter on requests that override security.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "A proxy bundle ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "threats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threattypes",
            "in": "query",
            "description": "A threat type or comma-delimited list of threat type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ampdisposition",
            "in": "query",
            "description": "An AMP disposition string or a comma-delimited list of AMP disposition string.",
            "schema": {
              "type": "string"
            },
            "example": "clean,malicious,unknown"
          },
          {
            "name": "antivirusthreats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            },
            "example": "Trojan.Linux.Generic.144075"
          },
          {
            "name": "datalosspreventionstate",
            "in": "query",
            "description": "A string that describes the status of a destination (for example: 'blocked').\nFilter data for requests that were blocked to protect data.",
            "schema": {
              "type": "string"
            },
            "example": "blocked"
          },
          {
            "name": "filternoisydomains",
            "in": "query",
            "description": "filter out domains that generate a lot of insignificant traffic (noise).",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "Display the timestamp of the traffic events in the specified timezone.\nFor the timezone, provide a continent and city separated by an url-encoded forward slash ('/'), for example: timezone='ASIA%2fCALCUTTA'.",
            "schema": {
              "type": "string"
            },
            "example": "ASIA%2fCALCUTTA"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "description": "The total number of requests"
                        }
                      },
                      "required": [
                        "count"
                      ],
                      "example": {
                        "count": 42
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "data": {
                    "count": 42
                  },
                  "meta": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/reports/totalRequests/{type}": {
      "get": {
        "tags": [
          "Reports",
          "Total Requests"
        ],
        "summary": "Get Total Requests (By Type)",
        "description": "Get the count of total requests for the given filters.",
        "operationId": "getTotalRequestsByType",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Specify the type of traffic. Valid values: `dns`, `proxy`, `firewall`, or `ip`.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "dns",
                "proxy",
                "firewall",
                "ip"
              ]
            },
            "example": "firewall"
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "domains",
            "in": "query",
            "description": "A domain name or comma-delimited list of domain name.",
            "schema": {
              "type": "string"
            },
            "example": "cisco.com,nasa.gov"
          },
          {
            "name": "urls",
            "in": "query",
            "description": "A URL or comma-delimited list of URL.",
            "schema": {
              "type": "string"
            },
            "example": "https://google.com,facebook.com/help"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.",
            "schema": {
              "type": "string"
            },
            "example": "148,151,66"
          },
          {
            "name": "policycategories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.\nFilter request by the categories that trigger a policy.",
            "schema": {
              "type": "string"
            },
            "example": "67,69"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "ports",
            "in": "query",
            "description": "A port number or comma-delimited list of port number.",
            "schema": {
              "type": "string"
            },
            "example": "7351,80"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "An application ID.",
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "ruleid",
            "in": "query",
            "description": "A firewall policy rule ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "verdict",
            "in": "query",
            "description": "A verdict string or comma-delimited list of verdict string.",
            "schema": {
              "type": "string"
            },
            "example": "allowed,blocked,proxied"
          },
          {
            "name": "securityoverridden",
            "in": "query",
            "description": "Specify whether to filter on requests that override security.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "A proxy bundle ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "threats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threattypes",
            "in": "query",
            "description": "A threat type or comma-delimited list of threat type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ampdisposition",
            "in": "query",
            "description": "An AMP disposition string or a comma-delimited list of AMP disposition string.",
            "schema": {
              "type": "string"
            },
            "example": "clean,malicious,unknown"
          },
          {
            "name": "antivirusthreats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            },
            "example": "Trojan.Linux.Generic.144075"
          },
          {
            "name": "datalosspreventionstate",
            "in": "query",
            "description": "A string that describes the status of a destination (for example: 'blocked').\nFilter data for requests that were blocked to protect data.",
            "schema": {
              "type": "string"
            },
            "example": "blocked"
          },
          {
            "name": "filternoisydomains",
            "in": "query",
            "description": "filter out domains that generate a lot of insignificant traffic (noise).",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "Display the timestamp of the traffic events in the specified timezone.\nFor the timezone, provide a continent and city separated by an url-encoded forward slash ('/'), for example: timezone='ASIA%2fCALCUTTA'.",
            "schema": {
              "type": "string"
            },
            "example": "ASIA%2fCALCUTTA"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "description": "The total number of requests"
                        }
                      },
                      "required": [
                        "count"
                      ],
                      "example": {
                        "count": 42
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "data": {
                    "count": 42
                  },
                  "meta": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/reports/summary": {
      "get": {
        "tags": [
          "Reports",
          "Summary"
        ],
        "summary": "Get Summary (All)",
        "description": "Get the summary report",
        "operationId": "getSummary",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "A number that represents an index into the collection.",
            "schema": {
              "type": "number",
              "default": 0
            },
            "example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return from the collection.",
            "required": true,
            "schema": {
              "type": "number",
              "default": 100
            },
            "example": 100
          },
          {
            "name": "domains",
            "in": "query",
            "description": "A domain name or comma-delimited list of domain name.",
            "schema": {
              "type": "string"
            },
            "example": "cisco.com,nasa.gov"
          },
          {
            "name": "urls",
            "in": "query",
            "description": "A URL or comma-delimited list of URL.",
            "schema": {
              "type": "string"
            },
            "example": "https://google.com,facebook.com/help"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.",
            "schema": {
              "type": "string"
            },
            "example": "148,151,66"
          },
          {
            "name": "policycategories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.\nFilter request by the categories that trigger a policy.",
            "schema": {
              "type": "string"
            },
            "example": "67,69"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "ports",
            "in": "query",
            "description": "A port number or comma-delimited list of port number.",
            "schema": {
              "type": "string"
            },
            "example": "7351,80"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "An application ID.",
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "verdict",
            "in": "query",
            "description": "A verdict string or comma-delimited list of verdict string.",
            "schema": {
              "type": "string"
            },
            "example": "allowed,blocked,proxied"
          },
          {
            "name": "ruleid",
            "in": "query",
            "description": "A firewall policy rule ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "filename",
            "in": "query",
            "description": "A string that identifies a filename. Filter request by the filename.\nSupports globbing or use of the wildcard character ('*'). The asterisk (*) matches\nzero or more occurrences of any character.",
            "schema": {
              "type": "string"
            },
            "example": "myfilename_*"
          },
          {
            "name": "securityoverridden",
            "in": "query",
            "description": "Specify whether to filter on requests that override security.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "A proxy bundle ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "threats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threattypes",
            "in": "query",
            "description": "A threat type or comma-delimited list of threat type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ampdisposition",
            "in": "query",
            "description": "An AMP disposition string or a comma-delimited list of AMP disposition string.",
            "schema": {
              "type": "string"
            },
            "example": "clean,malicious,unknown"
          },
          {
            "name": "antivirusthreats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            },
            "example": "Trojan.Linux.Generic.144075"
          },
          {
            "name": "datalosspreventionstate",
            "in": "query",
            "description": "A string that describes the status of a destination (for example: 'blocked').\nFilter data for requests that were blocked to protect data.",
            "schema": {
              "type": "string"
            },
            "example": "blocked"
          },
          {
            "name": "filternoisydomains",
            "in": "query",
            "description": "filter out domains that generate a lot of insignificant traffic (noise).",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "The summary information about the requests",
                      "properties": {
                        "applications": {
                          "type": "number",
                          "description": "total number of applications (avc or total)"
                        },
                        "domains": {
                          "type": "number",
                          "description": "total number of domains"
                        },
                        "requestsblocked": {
                          "type": "number",
                          "description": "total number of blocked requests"
                        },
                        "filetypes": {
                          "type": "number",
                          "description": "total number of file types"
                        },
                        "policycategories": {
                          "type": "number",
                          "description": "total number of blocked categories"
                        },
                        "policyrequests": {
                          "type": "number",
                          "description": "total number of policy requests"
                        },
                        "requests": {
                          "type": "number",
                          "description": "total number of requests"
                        },
                        "requestsallowed": {
                          "type": "number",
                          "description": "total number of allowed requests"
                        },
                        "categories": {
                          "type": "number",
                          "description": "total number of categories"
                        },
                        "identitytypes": {
                          "type": "number",
                          "description": "total number of identity types"
                        },
                        "applicationsblocked": {
                          "type": "number",
                          "description": "total number of blocked applications"
                        },
                        "files": {
                          "type": "number",
                          "description": "total number of files"
                        },
                        "identities": {
                          "type": "number",
                          "description": "total number of identities"
                        },
                        "applicationsallowed": {
                          "type": "number",
                          "description": "total number of allowed applications"
                        }
                      },
                      "required": [
                        "applications",
                        "applicationsallowed",
                        "applicationsblocked",
                        "categories",
                        "domains",
                        "files",
                        "filetypes",
                        "identities",
                        "identitytypes",
                        "policycategories",
                        "policyrequests",
                        "requests",
                        "requestsallowed",
                        "requestsblocked"
                      ],
                      "example": {
                        "applications": 123,
                        "domains": 82,
                        "requestsblocked": 189,
                        "filetypes": 0,
                        "policycategories": 2,
                        "policyrequests": 2,
                        "requests": 189,
                        "requestsallowed": 10,
                        "categories": 11,
                        "identitytypes": 1,
                        "applicationsblocked": 2,
                        "files": 5,
                        "identities": 1,
                        "applicationsallowed": 2
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "data": {
                    "applications": 123,
                    "domains": 82,
                    "requestsblocked": 189,
                    "filetypes": 0,
                    "policycategories": 2,
                    "policyrequests": 2,
                    "requests": 189,
                    "requestsallowed": 10,
                    "categories": 11,
                    "identitytypes": 1,
                    "applicationsblocked": 2,
                    "files": 5,
                    "identities": 1,
                    "applicationsallowed": 2
                  },
                  "meta": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/reports/summary/{type}": {
      "get": {
        "tags": [
          "Reports",
          "Summary"
        ],
        "summary": "Get Summary By Type",
        "description": "Get the summary by traffic type.",
        "operationId": "getSummaryByType",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Specify the type of traffic. Valid values: `dns`, `proxy`, `firewall`, or `ip`.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "dns",
                "proxy",
                "firewall",
                "ip"
              ]
            },
            "example": "firewall"
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "A number that represents an index into the collection.",
            "schema": {
              "type": "number",
              "default": 0
            },
            "example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return from the collection.",
            "required": true,
            "schema": {
              "type": "number",
              "default": 100
            },
            "example": 100
          },
          {
            "name": "domains",
            "in": "query",
            "description": "A domain name or comma-delimited list of domain name.",
            "schema": {
              "type": "string"
            },
            "example": "cisco.com,nasa.gov"
          },
          {
            "name": "urls",
            "in": "query",
            "description": "A URL or comma-delimited list of URL.",
            "schema": {
              "type": "string"
            },
            "example": "https://google.com,facebook.com/help"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.",
            "schema": {
              "type": "string"
            },
            "example": "148,151,66"
          },
          {
            "name": "policycategories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.\nFilter request by the categories that trigger a policy.",
            "schema": {
              "type": "string"
            },
            "example": "67,69"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "ports",
            "in": "query",
            "description": "A port number or comma-delimited list of port number.",
            "schema": {
              "type": "string"
            },
            "example": "7351,80"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "An application ID.",
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "verdict",
            "in": "query",
            "description": "A verdict string or comma-delimited list of verdict string.",
            "schema": {
              "type": "string"
            },
            "example": "allowed,blocked,proxied"
          },
          {
            "name": "ruleid",
            "in": "query",
            "description": "A firewall policy rule ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "filename",
            "in": "query",
            "description": "A string that identifies a filename. Filter request by the filename.\nSupports globbing or use of the wildcard character ('*'). The asterisk (*) matches\nzero or more occurrences of any character.",
            "schema": {
              "type": "string"
            },
            "example": "myfilename_*"
          },
          {
            "name": "securityoverridden",
            "in": "query",
            "description": "Specify whether to filter on requests that override security.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "A proxy bundle ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "threats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threattypes",
            "in": "query",
            "description": "A threat type or comma-delimited list of threat type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ampdisposition",
            "in": "query",
            "description": "An AMP disposition string or a comma-delimited list of AMP disposition string.",
            "schema": {
              "type": "string"
            },
            "example": "clean,malicious,unknown"
          },
          {
            "name": "antivirusthreats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            },
            "example": "Trojan.Linux.Generic.144075"
          },
          {
            "name": "datalosspreventionstate",
            "in": "query",
            "description": "A string that describes the status of a destination (for example: 'blocked').\nFilter data for requests that were blocked to protect data.",
            "schema": {
              "type": "string"
            },
            "example": "blocked"
          },
          {
            "name": "filternoisydomains",
            "in": "query",
            "description": "filter out domains that generate a lot of insignificant traffic (noise).",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "The summary information about the requests",
                      "properties": {
                        "applications": {
                          "type": "number",
                          "description": "total number of applications (avc or total)"
                        },
                        "domains": {
                          "type": "number",
                          "description": "total number of domains"
                        },
                        "requestsblocked": {
                          "type": "number",
                          "description": "total number of blocked requests"
                        },
                        "filetypes": {
                          "type": "number",
                          "description": "total number of file types"
                        },
                        "policycategories": {
                          "type": "number",
                          "description": "total number of blocked categories"
                        },
                        "policyrequests": {
                          "type": "number",
                          "description": "total number of policy requests"
                        },
                        "requests": {
                          "type": "number",
                          "description": "total number of requests"
                        },
                        "requestsallowed": {
                          "type": "number",
                          "description": "total number of allowed requests"
                        },
                        "categories": {
                          "type": "number",
                          "description": "total number of categories"
                        },
                        "identitytypes": {
                          "type": "number",
                          "description": "total number of identity types"
                        },
                        "applicationsblocked": {
                          "type": "number",
                          "description": "total number of blocked applications"
                        },
                        "files": {
                          "type": "number",
                          "description": "total number of files"
                        },
                        "identities": {
                          "type": "number",
                          "description": "total number of identities"
                        },
                        "applicationsallowed": {
                          "type": "number",
                          "description": "total number of allowed applications"
                        }
                      },
                      "required": [
                        "applications",
                        "applicationsallowed",
                        "applicationsblocked",
                        "categories",
                        "domains",
                        "files",
                        "filetypes",
                        "identities",
                        "identitytypes",
                        "policycategories",
                        "policyrequests",
                        "requests",
                        "requestsallowed",
                        "requestsblocked"
                      ],
                      "example": {
                        "applications": 123,
                        "domains": 82,
                        "requestsblocked": 189,
                        "filetypes": 0,
                        "policycategories": 2,
                        "policyrequests": 2,
                        "requests": 189,
                        "requestsallowed": 10,
                        "categories": 11,
                        "identitytypes": 1,
                        "applicationsblocked": 2,
                        "files": 5,
                        "identities": 1,
                        "applicationsallowed": 2
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "data": {
                    "applications": 123,
                    "domains": 82,
                    "requestsblocked": 189,
                    "filetypes": 0,
                    "policycategories": 2,
                    "requests": 189,
                    "requestsallowed": 10,
                    "categories": 11,
                    "identitytypes": 1,
                    "applicationsblocked": 2,
                    "files": 5,
                    "identities": 1,
                    "applicationsallowed": 2,
                    "policyrequests": 3
                  },
                  "meta": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/reports/remoteAccessEvents": {
      "get": {
        "tags": [
          "Reports",
          "Remote Access"
        ],
        "summary": "Get Remote Access Events",
        "description": "List the events logged by remote access.",
        "operationId": "getRemoteAccessEvents",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return from the collection.",
            "required": true,
            "schema": {
              "type": "number",
              "default": 100
            },
            "example": 100
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "connectionevent",
            "in": "query",
            "description": "Specify the type of connection event.",
            "schema": {
              "type": "string",
              "enum": [
                "connected",
                "disconnected",
                "failed"
              ]
            },
            "example": "connected"
          },
          {
            "name": "anyconnectversions",
            "in": "query",
            "description": "Specify a comma-separated list of AnyConnect Roaming Security module\nversions to filter the data.",
            "schema": {
              "type": "string"
            },
            "example": "4.10.05095"
          },
          {
            "name": "osversions",
            "in": "query",
            "description": "Specify a comma-separated list of OS versions to filter the data.",
            "schema": {
              "type": "string"
            },
            "example": "linux-64-Ubuntu 20.04.5 LTS (Focal Fossa)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "osversion",
                          "internalip",
                          "connecttimestamp",
                          "reason",
                          "failedreasons",
                          "connectionevent",
                          "anyconnectversion",
                          "timestamp",
                          "identities"
                        ],
                        "properties": {
                          "osversion": {
                            "type": "string",
                            "description": "The OS version of the host",
                            "example": "linux-64-Ubuntu 20.04.5 LTS (Focal Fossa)"
                          },
                          "internalip": {
                            "type": "string",
                            "description": "The internal IP address of the host",
                            "example": "10.0.1.5"
                          },
                          "connecttimestamp": {
                            "type": "number",
                            "description": "The time and date when the host connected, expressed in milliseconds",
                            "example": 1667252442
                          },
                          "reason": {
                            "type": "string",
                            "description": "The reason the event occurred for the remote access endpoint",
                            "example": "ACCT_DISC_USER_REQ"
                          },
                          "failedreasons": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of messages that describe the remote access error",
                            "example": [

                            ]
                          },
                          "connectionevent": {
                            "type": "string",
                            "description": "The type of event associated with the remote connection",
                            "example": "disconnected"
                          },
                          "anyconnectversion": {
                            "type": "string",
                            "description": "The version of the AnyConnect Roaming Security module",
                            "example": "4.10.05095"
                          },
                          "timestamp": {
                            "type": "number",
                            "description": "The time and date of the event, expressed in milliseconds",
                            "example": 1667252458
                          },
                          "identities": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The id of the remote access endpoint",
                                  "example": 1173502975
                                },
                                "type": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the type",
                                      "example": 7
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The descriptive type",
                                      "example": "directory_user"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label for the type",
                                      "example": "AD Users"
                                    }
                                  }
                                },
                                "label": {
                                  "type": "string",
                                  "description": "The label for the remote access identity",
                                  "example": "sample-endpoint@cisco.com"
                                },
                                "deleted": {
                                  "type": "boolean",
                                  "description": "Specifies whether the identity is available",
                                  "example": false
                                }
                              }
                            }
                          }
                        },
                        "example": {
                          "osversion": "linux-64-Ubuntu 20.04.5 LTS (Focal Fossa)",
                          "internalip": "10.0.1.5",
                          "connecttimestamp": 1667252442,
                          "reason": "ACCT_DISC_USER_REQ",
                          "failedreasons": [

                          ],
                          "connectionevent": "disconnected",
                          "anyconnectversion": "4.10.05095",
                          "timestamp": 1667252458,
                          "identities": [
                            {
                              "id": 1173502975,
                              "type": {
                                "id": 7,
                                "type": "directory_user",
                                "label": "AD Users"
                              },
                              "label": "sample-remote-access@cisco.com",
                              "deleted": false
                            }
                          ]
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "osversion": "linux-64-Ubuntu 20.04.5 LTS (Focal Fossa)",
                      "internalip": "10.0.1.5",
                      "connecttimestamp": 1667252442,
                      "reason": "ACCT_DISC_USER_REQ",
                      "failedreasons": [

                      ],
                      "connectionevent": "disconnected",
                      "anyconnectversion": "4.10.05095",
                      "timestamp": 1667252458,
                      "identities": [
                        {
                          "id": 1173502975,
                          "type": {
                            "id": 7,
                            "type": "directory_user",
                            "label": "AD Users"
                          },
                          "label": "sample-remote-access@cisco.com",
                          "deleted": false
                        }
                      ]
                    }
                  ],
                  "meta": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/datacenters": {
      "get": {
        "summary": "List Data Centers",
        "operationId": "getDatacenters",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "description": "List the information about the IPsec-enabled data centers.\nThe data center information includes the IP address and location details.",
        "tags": [
          "Deployments",
          "Data Center"
        ],
        "responses": {
          "200": {
            "description": "List the data centers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "continents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cities": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "latitude": {
                                  "type": "string",
                                  "example": "52.354662"
                                },
                                "longitude": {
                                  "type": "string",
                                  "example": "4.955532"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Amsterdam"
                                },
                                "dc": {
                                  "type": "string",
                                  "example": "ams1.edc"
                                },
                                "range": {
                                  "type": "string",
                                  "example": "146.112.98.2/32"
                                },
                                "fqdn": {
                                  "type": "string",
                                  "example": "eu2-b.vpn.sig.umbrella.com",
                                  "description": "The FQDN associated with the city. Returns the FQDN if available."
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "example": "Europe"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "continents": [
                    {
                      "cities": [
                        {
                          "latitude": "52.354662",
                          "longitude": "4.955532",
                          "name": "Amsterdam",
                          "dc": "ams1.edc",
                          "range": "146.112.98.2/32",
                          "fqdn": "eu2-b.vpn.sig.umbrella.com"
                        }
                      ],
                      "name": "Europe"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "minProperties": 3,
                  "required": [
                    "statusCode",
                    "error",
                    "txId"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error",
                      "description": "a brief description of the error"
                    },
                    "txId": {
                      "type": "string",
                      "example": "86e189a6-0124-47d3-a32c-25ff3f07deaf",
                      "description": "a unique hex number that can be used for debugging"
                    },
                    "validationErrors": {
                      "type": "object",
                      "properties": {
                        "someProperty": {
                          "type": "string",
                          "example": "must not be empty",
                          "description": "the name of the property failing validation."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Unauthorized- The authorization header is missing or the token is unauthorized",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden- The token is invalid",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden, Invalid authentication credentials",
                      "description": "a brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not Found- A resource specified in the URL was not found",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error- This request could not be processed by the server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "minProperties": 3,
                  "required": [
                    "statusCode",
                    "error",
                    "txId"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error",
                      "description": "a brief description of the error"
                    },
                    "txId": {
                      "type": "string",
                      "example": "86e189a6-0124-47d3-a32c-25ff3f07deaf",
                      "description": "a unique hex number that can be used for debugging"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/organizations/{organizationId}/networkDevices": {
      "post": {
        "tags": [
          "Deployments",
          "Network Devices"
        ],
        "summary": "Create Network Device",
        "description": "Create a network device.",
        "operationId": "createNetworkDevice",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "minProperties": 4,
                "required": [
                  "model",
                  "macAddress",
                  "name",
                  "serialNumber"
                ],
                "properties": {
                  "model": {
                    "type": "string",
                    "example": "ModelName",
                    "maxLength": 128,
                    "pattern": "[0-9A-Za-z_.-]{1,128}",
                    "description": "The model name of the device. Must be unique to your organization."
                  },
                  "macAddress": {
                    "type": "string",
                    "example": "0123456789ab",
                    "maxLength": 12,
                    "minLength": 12,
                    "pattern": "[0-9A-Fa-f]{12}",
                    "description": "Specify the MAC address of the device. The unique MAC address may include\nup to twelve characters and must not contain hyphens or colons."
                  },
                  "name": {
                    "type": "string",
                    "example": "label1",
                    "maxLength": 50,
                    "description": "A name of the device. Provide a unique device name in your organization."
                  },
                  "serialNumber": {
                    "type": "string",
                    "example": "12345a",
                    "maxLength": 255,
                    "description": "The serial number of the device"
                  },
                  "tag": {
                    "type": "string",
                    "description": "A text tag that describes the device or this particular origin assigned to the device. Provide a tag that is unique to your organization.",
                    "maxLength": 50
                  }
                }
              },
              "example": {
                "model": "The model name of the device.",
                "macAddress": "0123456789ab",
                "name": "A name for the device.",
                "serialNumber": "12345a"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success. Created a network device.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The network device object.",
                  "minProperties": 7,
                  "required": [
                    "originId",
                    "deviceId",
                    "deviceKey",
                    "name",
                    "serialNumber",
                    "createdAt",
                    "organizationId"
                  ],
                  "properties": {
                    "originId": {
                      "type": "integer",
                      "example": 35872943,
                      "minimum": 1,
                      "description": "Umbrella wide unique identifier for this traffic source (origin). Used\nto manage the device, not used by the device itself."
                    },
                    "deviceId": {
                      "type": "string",
                      "example": "0123456789abcdef",
                      "maxLength": 16,
                      "minLength": 15,
                      "description": "The unique identifier for this specific network device.\nThis is the identifier that should be inserted into EDNS packets."
                    },
                    "deviceKey": {
                      "type": "string",
                      "example": "ModelName-0123456789ab",
                      "description": "A more descriptive unique identifier for the device. Not used by the\ndevice itself."
                    },
                    "name": {
                      "type": "string",
                      "example": "APIDemoDevice",
                      "description": "The name of the device.",
                      "minLength": 1
                    },
                    "serialNumber": {
                      "type": "string",
                      "example": "12345a",
                      "description": "The serial number of the device."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2017-09-22T04:18:51.000Z",
                      "description": "The time when the device was created. Specify an ISO 8601-formatted timestamp."
                    },
                    "organizationId": {
                      "type": "integer",
                      "description": "The ID of the organization.",
                      "example": 1234,
                      "minimum": 1
                    }
                  }
                },
                "example": {
                  "originId": 35872943,
                  "deviceId": "0123456789abcdef",
                  "deviceKey": "ModelName-0123456789ab",
                  "name": "APIDemoDevice",
                  "serialNumber": "12345a",
                  "createdAt": "2021-09-22T04:18:51.000Z",
                  "organizationId": 1234
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      },
      "get": {
        "tags": [
          "Deployments",
          "Network Devices"
        ],
        "summary": "List Network Devices",
        "description": "List the network devices.",
        "operationId": "getAllNetworkDevices",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "The list of networks devices.",
                  "items": {
                    "type": "object",
                    "description": "The network device object.",
                    "minProperties": 7,
                    "required": [
                      "originId",
                      "deviceId",
                      "deviceKey",
                      "name",
                      "serialNumber",
                      "createdAt",
                      "organizationId"
                    ],
                    "properties": {
                      "originId": {
                        "type": "integer",
                        "example": 35872943,
                        "minimum": 1,
                        "description": "Umbrella wide unique identifier for this traffic source (origin). Used\nto manage the device, not used by the device itself."
                      },
                      "deviceId": {
                        "type": "string",
                        "example": "0123456789abcdef",
                        "maxLength": 16,
                        "minLength": 15,
                        "description": "The unique identifier for this specific network device.\nThis is the identifier that should be inserted into EDNS packets."
                      },
                      "deviceKey": {
                        "type": "string",
                        "example": "ModelName-0123456789ab",
                        "description": "A more descriptive unique identifier for the device. Not used by the\ndevice itself."
                      },
                      "name": {
                        "type": "string",
                        "example": "APIDemoDevice",
                        "description": "The name of the device.",
                        "minLength": 1
                      },
                      "serialNumber": {
                        "type": "string",
                        "example": "12345a",
                        "description": "The serial number of the device."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2017-09-22T04:18:51.000Z",
                        "description": "The time when the device was created. Specify an ISO 8601-formatted timestamp."
                      },
                      "organizationId": {
                        "type": "integer",
                        "description": "The ID of the organization.",
                        "example": 1234,
                        "minimum": 1
                      }
                    }
                  }
                },
                "example": [
                  {
                    "originId": 35872943,
                    "deviceId": "0123456789abcdef",
                    "deviceKey": "ModelName-0123456789ab",
                    "name": "APIDemoDevice",
                    "serialNumber": "12345a",
                    "createdAt": "2021-09-22T04:18:51.000Z",
                    "organizationId": 1234
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/organizations/{organizationId}/networkDevices/{originId}": {
      "patch": {
        "tags": [
          "Deployments",
          "Network Devices"
        ],
        "summary": "Update Network Device",
        "description": "Update a network device.",
        "operationId": "updateNetworkDevice",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "originId",
            "in": "path",
            "description": "The origin ID of the identity.",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "description": "Update the network device information.",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "label1",
                    "maxLength": 50,
                    "description": "A name of the device. Provide a unique device name in your organization."
                  }
                },
                "example": {
                  "name": "MyDeviceName"
                }
              },
              "example": {
                "name": "NetworkDevice01"
              }
            }
          },
          "description": "Update the properties of the network device.",
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success. Updated the network device.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The network device object.",
                  "minProperties": 7,
                  "required": [
                    "originId",
                    "deviceId",
                    "deviceKey",
                    "name",
                    "serialNumber",
                    "createdAt",
                    "organizationId"
                  ],
                  "properties": {
                    "originId": {
                      "type": "integer",
                      "example": 35872943,
                      "minimum": 1,
                      "description": "Umbrella wide unique identifier for this traffic source (origin). Used\nto manage the device, not used by the device itself."
                    },
                    "deviceId": {
                      "type": "string",
                      "example": "0123456789abcdef",
                      "maxLength": 16,
                      "minLength": 15,
                      "description": "The unique identifier for this specific network device.\nThis is the identifier that should be inserted into EDNS packets."
                    },
                    "deviceKey": {
                      "type": "string",
                      "example": "ModelName-0123456789ab",
                      "description": "A more descriptive unique identifier for the device. Not used by the\ndevice itself."
                    },
                    "name": {
                      "type": "string",
                      "example": "APIDemoDevice",
                      "description": "The name of the device.",
                      "minLength": 1
                    },
                    "serialNumber": {
                      "type": "string",
                      "example": "12345a",
                      "description": "The serial number of the device."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2017-09-22T04:18:51.000Z",
                      "description": "The time when the device was created. Specify an ISO 8601-formatted timestamp."
                    },
                    "organizationId": {
                      "type": "integer",
                      "description": "The ID of the organization.",
                      "example": 1234,
                      "minimum": 1
                    }
                  }
                },
                "example": {
                  "originId": 35872943,
                  "deviceId": "0123456789abcdef",
                  "deviceKey": "ModelName-0123456789ab",
                  "name": "APIDemoDevice",
                  "serialNumber": "12345a",
                  "createdAt": "2021-09-22T04:18:51.000Z",
                  "organizationId": 1234
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Deployments",
          "Network Devices"
        ],
        "summary": "Get Network Device",
        "description": "Get a network device.",
        "operationId": "getNetworkDevice",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "originId",
            "in": "path",
            "description": "The origin ID of the identity.",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success. Get a network device.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "The network device object.",
                  "minProperties": 7,
                  "required": [
                    "originId",
                    "deviceId",
                    "deviceKey",
                    "name",
                    "serialNumber",
                    "createdAt",
                    "organizationId"
                  ],
                  "properties": {
                    "originId": {
                      "type": "integer",
                      "example": 35872943,
                      "minimum": 1,
                      "description": "Umbrella wide unique identifier for this traffic source (origin). Used\nto manage the device, not used by the device itself."
                    },
                    "deviceId": {
                      "type": "string",
                      "example": "0123456789abcdef",
                      "maxLength": 16,
                      "minLength": 15,
                      "description": "The unique identifier for this specific network device.\nThis is the identifier that should be inserted into EDNS packets."
                    },
                    "deviceKey": {
                      "type": "string",
                      "example": "ModelName-0123456789ab",
                      "description": "A more descriptive unique identifier for the device. Not used by the\ndevice itself."
                    },
                    "name": {
                      "type": "string",
                      "example": "APIDemoDevice",
                      "description": "The name of the device.",
                      "minLength": 1
                    },
                    "serialNumber": {
                      "type": "string",
                      "example": "12345a",
                      "description": "The serial number of the device."
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2017-09-22T04:18:51.000Z",
                      "description": "The time when the device was created. Specify an ISO 8601-formatted timestamp."
                    },
                    "organizationId": {
                      "type": "integer",
                      "description": "The ID of the organization.",
                      "example": 1234,
                      "minimum": 1
                    }
                  }
                },
                "example": {
                  "originId": 35872943,
                  "deviceId": "0123456789abcdef",
                  "deviceKey": "ModelName-0123456789ab",
                  "name": "APIDemoDevice",
                  "serialNumber": "12345a",
                  "createdAt": "2021-09-22T04:18:51.000Z",
                  "organizationId": 1234
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Deployments",
          "Network Devices"
        ],
        "summary": "Delete Network Device",
        "description": "Remove a network device.",
        "operationId": "deleteNetworkDevice",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "originId",
            "in": "path",
            "description": "The origin ID of the identity.",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "format": "int32"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success. No content in response body.",
            "content": {
              "application/json": {
                "schema": {
                },
                "example": {
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/networkDevices/{originId}/policies": {
      "get": {
        "tags": [
          "Deployments",
          "Network Devices"
        ],
        "summary": "List Policies for Network Device",
        "description": "List the Umbrella policies associated with a network device.\nIf no filters are supplied, Umbrella returns the DNS policies.",
        "operationId": "listNetworkDevicePolicies",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "originId",
            "in": "path",
            "description": "The origin ID of the identity.",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of Umbrella policy (either DNS or Web).",
            "required": false,
            "schema": {
              "default": "dns",
              "type": "string"
            },
            "example": "dns"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "The list of policies associated with the network device.",
                  "items": {
                    "type": "object",
                    "description": "The policy associated with a network device.",
                    "minProperties": 6,
                    "required": [
                      "policyId",
                      "name",
                      "priority",
                      "isAppliedDirectly",
                      "isDefault",
                      "createdAt"
                    ],
                    "properties": {
                      "policyId": {
                        "type": "integer",
                        "maxLength": 64,
                        "description": "The unique ID for the policy.",
                        "minimum": 0
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the policy as displayed in Umbrella.",
                        "example": "ApiDemoPolicy"
                      },
                      "priority": {
                        "type": "integer",
                        "maxLength": 64,
                        "description": "The prioirity of the policy.",
                        "minimum": 0
                      },
                      "isAppliedDirectly": {
                        "type": "boolean",
                        "example": true,
                        "description": "Specify whether the policy is directly applied to this network device."
                      },
                      "isDefault": {
                        "type": "boolean",
                        "example": true,
                        "description": "Specify whether the policy is the default policy."
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2021-10-02T20:00:00Z",
                        "description": "The time when the policy was created. Specify an ISO 8601-formatted timestamp."
                      }
                    }
                  }
                },
                "example": [
                  {
                    "policyId": 123,
                    "name": "APIDemo policy",
                    "priority": 1,
                    "isAppliedDirectly": true,
                    "isDefault": true,
                    "createdAt": "2017-09-22T04:18:51.000Z"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal error",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/tunnels": {
      "get": {
        "summary": "List Tunnels",
        "operationId": "listTunnels",
        "description": "List the tunnels for an organization.",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "tags": [
          "Deployments",
          "Organization Tunnel"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "includeState",
            "schema": {
              "default": false,
              "type": "boolean"
            },
            "description": "Provide details about the tunnel state.",
            "required": false
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Specify the number of items to return in the collection.\nIf not set, all tunnels are returned.",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "startKey",
            "description": "Specify where to start reading in the tunnel collection (`startKey` correlates to the first tunnel to return).\nIf the `startKey` query parameter is not included in the API request, Umbrella reads the collection from the first available tunnel.\nUmbrella returns the value of `startKey` for the next tunnel in the hypermedia Link header when the API request\nincludes the `limit` query parameter and there are more tunnels to read from the collection.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filters",
            "description": "Filters the tunnel list by tunnel name, device type, service type, status, data center, or site origin ID.\nFor example:\n```\n{\n  \"name\": \"test\",\n  \"deviceType\": \"ISR\",\n  \"serviceType\": \"SIG\",\n  \"status\": \"UP\",\n  \"dataCenter\": \"pao1.edc\",\n  \"siteOriginId\": 123\n}\n```",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List the tunnels associated with the organization.\nYou must set the `includeState` request query parameter to `true` for the response\nto include the state information.",
            "headers": {
              "Total-Item-Count": {
                "schema": {
                  "type": "string"
                },
                "description": "Total number of active, inactive, and unestablished tunnels in the organization.",
                "example": "500"
              },
              "Total-Distinct-DC-Count": {
                "schema": {
                  "type": "string"
                },
                "description": "Number of distinct data centers in the organization.",
                "example": "2"
              },
              "Total-Active-Item-Count": {
                "schema": {
                  "type": "string"
                },
                "description": "Total number of active tunnels in the organization.",
                "example": "5"
              },
              "Total-Inactive-Item-Count": {
                "schema": {
                  "type": "string"
                },
                "description": "Total number of inactive tunnels in the organization.",
                "example": "10"
              },
              "Link": {
                "schema": {
                  "type": "string"
                },
                "description": "Hypermedia links in string format. Used to provide parameters for pagination.\nOnly available if request limits the number of tunnels returned.\nLink provided is a relative path. The \"rel\" value here is always \"next\"\n(pagination moves forward)."
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Tunnel resource object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "readOnly": true,
                        "description": "Tunnel resource ID, use this ID as reference for subsequent requests",
                        "example": 1122321
                      },
                      "uri": {
                        "type": "string",
                        "description": "Resource URI",
                        "readOnly": true,
                        "example": "/organization/2345432/tunnels/1122321"
                      },
                      "name": {
                        "type": "string",
                        "description": "Display name given to the tunnel. Tunnel Name is required, cannot exceed 50 characters in length\nand cannot have any special characters other than spaces and hyphens.",
                        "example": "Site01Tunnel"
                      },
                      "siteOriginId": {
                        "type": "integer",
                        "description": "Site Origin ID to associate with the tunnel",
                        "example": 123456
                      },
                      "client": {
                        "type": "object",
                        "description": "Configuration metadata of the client",
                        "properties": {
                          "deviceType": {
                            "type": "string",
                            "description": "The type of device from which the tunnel originates. The default value is \"other\".\nValid values are: ASA, FTD, ISR, Meraki MX, Viptela cEdge, Viptela vEdge, other.",
                            "enum": [
                              "ASA",
                              "FTD",
                              "ISR",
                              "Meraki MX",
                              "Viptela cEdge",
                              "Viptela vEdge",
                              "other"
                            ],
                            "example": "ASA"
                          },
                          "authentication": {
                            "type": "object",
                            "description": "Authentication context of client",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "PSK"
                                ],
                                "example": "PSK",
                                "readOnly": true
                              },
                              "parameters": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "PSK ID. If an IP address is used as the ID, the IP address\nitself will be returned in this field.",
                                    "readOnly": true,
                                    "example": "admin@2561066-237952254-umbrella.com"
                                  },
                                  "modifiedAt": {
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2018-06-13T16:07:07.222Z"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "transport": {
                        "type": "object",
                        "properties": {
                          "protocol": {
                            "description": "Tunnel transport protocol, default is IPSec.",
                            "type": "string",
                            "enum": [
                              "IPSec"
                            ],
                            "readOnly": true,
                            "example": "IPSec"
                          }
                        }
                      },
                      "serviceType": {
                        "type": "string",
                        "description": "The Service type to associate with the tunnel. The default value is \"SIG\".\nValid values are SIG, Private Access.",
                        "enum": [
                          "SIG",
                          "Private Access"
                        ],
                        "readOnly": true,
                        "example": "SIG"
                      },
                      "networkCIDRs": {
                        "type": "array",
                        "description": "IP ranges associated with the tunnel. If serviceType is \"Private Access\" this field\nis required, otherwise optional.",
                        "items": {
                          "type": "string",
                          "description": "IPv4 CIDR ranges"
                        },
                        "example": [
                          "123.111.222.25/24",
                          "111.222.39.1/32"
                        ]
                      },
                      "meta": {
                        "type": "object",
                        "description": "Metadata for the tunnel object, relating to service internals.",
                        "readOnly": true,
                        "properties": {
                          "state": {
                            "title": "tunnelState",
                            "description": "Tunnel State Information",
                            "properties": {
                              "tunnelId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The tunnel ID",
                                "example": "163367136"
                              },
                              "status": {
                                "type": "string",
                                "readOnly": true,
                                "description": "High level tunnel status:\n* up - the tunnel is active\n* down - the tunnel is inactive\n* failed - the tunnel is in a failed state\n* unknown - the current status is unknown and pending updated information\n",
                                "enum": [
                                  "UP",
                                  "DOWN",
                                  "FAILED",
                                  "UNKNOWN"
                                ],
                                "example": "UP"
                              },
                              "dc": {
                                "type": "string",
                                "readOnly": true,
                                "description": "the name of the datacenter",
                                "example": "chi1.edc"
                              },
                              "dcName": {
                                "type": "string",
                                "readOnly": true,
                                "description": "datacenter name",
                                "example": "Equinix Chicago"
                              },
                              "dcDesc": {
                                "type": "string",
                                "readOnly": true,
                                "description": "datacenter location description (city and country/region)",
                                "example": "Chicago, Illinois - US"
                              },
                              "ikeState": {
                                "type": "string",
                                "readOnly": true,
                                "description": "IKE SA State:\n* CREATED\n* CONNECTING\n* ESTABLISHED\n* PASSIVE\n* REKEYING\n* REKEYED\n* DELETING\n* DESTROYING\n",
                                "enum": [
                                  "CREATED",
                                  "CONNECTING",
                                  "ESTABLISHED",
                                  "PASSIVE",
                                  "REKEYING",
                                  "REKEYED",
                                  "DELETING",
                                  "DESTROYING"
                                ],
                                "example": "ESTABLISHED"
                              },
                              "ipsecState": {
                                "type": "string",
                                "readOnly": true,
                                "description": "IPSec/Child SA State:\n* CREATED\n* ROUTED\n* INSTALLING\n* INSTALLED\n* UPDATING\n* REKEYING\n* REKEYED\n* RETRYING\n* DELETING\n* DELETED\n* DESTROYING\n",
                                "enum": [
                                  "CREATED",
                                  "ROUTED",
                                  "INSTALLING",
                                  "INSTALLED",
                                  "UPDATING",
                                  "REKEYING",
                                  "REKEYED",
                                  "RETRYING",
                                  "DELETING",
                                  "DELETED",
                                  "DESTROYING"
                                ],
                                "example": "INSTALLED"
                              },
                              "peerId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Remote peer IKE ID",
                                "example": "unique-value@1234567-234567812-umbrella.com"
                              },
                              "peerIp": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Remote peer IP",
                                "example": "198.18.195.1"
                              },
                              "localIp": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Public IP address assigned to an endpoint device (ISR, Viptela, etc)",
                                "example": "198.25.43.19"
                              },
                              "peerPort": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Remote peer port",
                                "example": "4500"
                              },
                              "ike": {
                                "title": "tunnelIKEState",
                                "description": "Tunnel IKE Session State",
                                "properties": {
                                  "age": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "Established state age in seconds",
                                    "example": "6194"
                                  },
                                  "dhGroup": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "IKE Diffie-Hellman group",
                                    "example": "MODP_2048"
                                  },
                                  "prfAlgo": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "IKE pseudo random function",
                                    "example": "PRF_HMAC_SHA1"
                                  },
                                  "encAlgo": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "IKE encryption algorithm",
                                    "example": "AES_CBC"
                                  },
                                  "initiatorSpi": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "Hex encoded initiator SPI / cookie",
                                    "example": "cf065c564a511834"
                                  },
                                  "responderSpi": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "Hex encoded responder SPI / cookie",
                                    "example": "a3cd5c8533c80069"
                                  }
                                }
                              },
                              "ipsec": {
                                "title": "tunnelIPSecState",
                                "description": "Tunnel IPSec Session State",
                                "properties": {
                                  "age": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "Installed state age in seconds",
                                    "example": "6194"
                                  },
                                  "integrityAlgo": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "ESP or AH integrity algorithm name",
                                    "example": "HMAC_SHA1_96"
                                  },
                                  "encAlgo": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "ESP encryption algorithm name",
                                    "example": "NULL"
                                  },
                                  "encKeySize": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "ESP encryption key size (optional field, not available with NULL encryption)",
                                    "example": "128"
                                  },
                                  "spiIn": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "Hex encoded inbound SPI",
                                    "example": "c6ef7503"
                                  },
                                  "spiOut": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "Hex encoded outbound SPI",
                                    "example": "00010102"
                                  },
                                  "peerSelectors": {
                                    "type": "array",
                                    "readOnly": true,
                                    "description": "Peer traffic selectors",
                                    "items": {
                                      "type": "string",
                                      "description": "Selector expression",
                                      "example": "0.0.0.0/0"
                                    }
                                  }
                                }
                              },
                              "data": {
                                "title": "tunnelDataState",
                                "description": "Tunnel Dataplane State",
                                "properties": {
                                  "packetsIn": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "Number of processed input packets (tunnel ingress)",
                                    "example": "10"
                                  },
                                  "bytesIn": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "Number of processed input bytes (tunnel ingress)",
                                    "example": "1000"
                                  },
                                  "idleTimeIn": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "Idle time (seconds since last inbound packet)",
                                    "example": "100"
                                  },
                                  "packetsOut": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "Number of processed output packets (tunnel egress)",
                                    "example": "10"
                                  },
                                  "bytesOut": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "Number of processed output bytes (tunnel egress)",
                                    "example": "1000"
                                  },
                                  "idleTimeOut": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "Idle time (seconds since last outbound packet)",
                                    "example": "100"
                                  },
                                  "initialized": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "Time when packet and byte counters were initialized to 0.",
                                    "example": "2023-10-19T22:15:12.765623734Z"
                                  }
                                }
                              },
                              "modifiedAt": {
                                "type": "string",
                                "readOnly": true,
                                "format": "date-time",
                                "description": "When the state was last updated (UTC time, with milliseconds).",
                                "example": "2018-06-13T16:07:07.222Z"
                              }
                            }
                          }
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-06-13T16:07:07.222Z"
                      },
                      "modifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2018-06-13T16:07:07.222Z"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 1122321,
                    "uri": "/tunnels/1122321",
                    "name": "Site01Tunnel",
                    "siteOriginId": 123456,
                    "client": {
                      "deviceType": "ASA",
                      "authentication": {
                        "type": "PSK",
                        "parameters": {
                          "id": "admin@2561066-237952254-umbrella.com",
                          "modifiedAt": "2018-06-13T16:07:07.222Z"
                        }
                      }
                    },
                    "transport": {
                      "protocol": "IPSec"
                    },
                    "serviceType": "SIG",
                    "networkCIDRs": [
                      "123.111.222.25/24",
                      "111.222.39.1/32"
                    ],
                    "meta": {
                    },
                    "createdAt": "2018-06-13T16:07:07.222Z",
                    "modifiedAt": "2018-06-13T16:07:07.222Z"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "minProperties": 3,
                  "required": [
                    "statusCode",
                    "error",
                    "txId"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error",
                      "description": "a brief description of the error"
                    },
                    "txId": {
                      "type": "string",
                      "example": "86e189a6-0124-47d3-a32c-25ff3f07deaf",
                      "description": "a unique hex number that can be used for debugging"
                    },
                    "validationErrors": {
                      "type": "object",
                      "properties": {
                        "someProperty": {
                          "type": "string",
                          "example": "must not be empty",
                          "description": "the name of the property failing validation."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Unauthorized- The authorization header is missing or the token is unauthorized",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden- The token is invalid",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden, Invalid authentication credentials",
                      "description": "a brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not Found- A resource specified in the URL was not found",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error- This request could not be processed by the server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "minProperties": 3,
                  "required": [
                    "statusCode",
                    "error",
                    "txId"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error",
                      "description": "a brief description of the error"
                    },
                    "txId": {
                      "type": "string",
                      "example": "86e189a6-0124-47d3-a32c-25ff3f07deaf",
                      "description": "a unique hex number that can be used for debugging"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create Tunnel",
        "operationId": "addTunnel",
        "description": "Add a new tunnel to the organization.",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "tags": [
          "Deployments",
          "Organization Tunnel"
        ],
        "requestBody": {
          "description": "The tunnel to create.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the tunnel."
                  },
                  "siteOriginId": {
                    "type": "integer",
                    "description": "The site origin ID to associate with the tunnel.",
                    "example": 123456
                  },
                  "deviceType": {
                    "type": "string",
                    "description": "The type of device from which the tunnel originates. The default value is 'other'.\nValid values are: ASA, FTD, ISR, Meraki MX, Viptela cEdge, Viptela vEdge, other.",
                    "enum": [
                      "ASA",
                      "FTD",
                      "ISR",
                      "Meraki MX",
                      "Viptela cEdge",
                      "Viptela vEdge",
                      "other"
                    ]
                  },
                  "serviceType": {
                    "type": "string",
                    "description": "The type of service to associate with the tunnel. The default values is 'SIG'.\nValid values are: SIG or Private Access. This field is optional.",
                    "enum": [
                      "SIG",
                      "Private Access"
                    ],
                    "example": "SIG"
                  },
                  "networkCIDRs": {
                    "type": "array",
                    "description": "Enter IPv4 ranges and CIDR addresses.\nFor serviceType 'SIG' - Add all public and private address ranges used internally\nby your organization. Overrides Umbrella's default behavior,\nwhich allows traffic destined for RFC-1918 addresses to return through the tunnel.\nIf serviceType is 'Private Access' this field is required, otherwise optional.\n0.0.0.0/0 is not allowed.",
                    "items": {
                      "type": "string",
                      "description": "IPv4 CIDR ranges"
                    },
                    "example": [
                      "123.111.222.25/24",
                      "111.222.39.1/32"
                    ]
                  },
                  "transport": {
                    "type": "object",
                    "properties": {
                      "protocol": {
                        "description": "The tunnel transport protocol. The default is IPSec.",
                        "type": "string",
                        "enum": [
                          "IPSec"
                        ],
                        "example": "IPSec"
                      }
                    }
                  },
                  "authentication": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "The authentication method. The default is PSK.",
                        "enum": [
                          "PSK"
                        ]
                      },
                      "parameters": {
                        "type": "object",
                        "properties": {
                          "idPrefix": {
                            "type": "string",
                            "description": "A human-readable ID for the tunnel, used to generate the ID portion of the Pre-Shared Key.\nIf omitted, the ID is generated and provided in response. Tunnels with a device type of ASA\nmust provide an IP address string for this field. Tunnels with a device type of 'other'\nmay use either an IP address or a human-readable string. PSK IDs are not automatically generated\nfor ASA devices."
                          },
                          "secret": {
                            "type": "string",
                            "description": "The secret portion of a Pre-Shared Key (PSK).\nIf omitted, a secret is generated and provided in the response.\nSecrets are a sequence of 16-64 characters, and contain at least one upper\nand lowercase letter, one number, and no special characters."
                          }
                        }
                      }
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "example": {
                "name": "Site01Tunnel",
                "siteOriginId": 123456,
                "serviceType": "SIG",
                "deviceType": "ASA",
                "networkCIDRs": [
                  "123.111.222.25/24",
                  "111.222.39.1/32"
                ],
                "transport": {
                  "protocol": "IPSec"
                },
                "authentication": {
                  "type": "PSK",
                  "parameters": {
                    "idPrefix": "prefix-string",
                    "secret": "This123Secret"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tunnel created",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Tunnel resource object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "readOnly": true,
                          "description": "Tunnel resource ID, use this ID as reference for subsequent requests",
                          "example": 1122321
                        },
                        "uri": {
                          "type": "string",
                          "description": "Resource URI",
                          "readOnly": true,
                          "example": "/tunnels/1122321"
                        },
                        "name": {
                          "type": "string",
                          "description": "Display name given to the tunnel. Tunnel Name is required, cannot exceed 50 characters in length\nand cannot have any special characters other than spaces and hyphens.",
                          "example": "Site01Tunnel"
                        },
                        "siteOriginId": {
                          "type": "integer",
                          "description": "The Site origin ID to associate with the tunnel",
                          "example": 123456
                        },
                        "client": {
                          "type": "object",
                          "description": "The configuration metadata of the client",
                          "properties": {
                            "deviceType": {
                              "type": "string",
                              "description": "The type of device from which the tunnel originates. The default value is 'other'.\nValid values are: ASA, FTD, ISR, Meraki MX, Viptela cEdge, Viptela vEdge, other.",
                              "enum": [
                                "ASA",
                                "FTD",
                                "ISR",
                                "Meraki MX",
                                "Viptela cEdge",
                                "Viptela vEdge",
                                "other"
                              ],
                              "example": "ASA"
                            },
                            "authentication": {
                              "type": "object",
                              "description": "The authentication context of the client",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "PSK"
                                  ],
                                  "example": "PSK",
                                  "readOnly": true
                                },
                                "parameters": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "PSK ID. If an IP address is used as the ID, the IP address\nis returned in this field.",
                                      "readOnly": true,
                                      "example": "admin@2561066-237952254-umbrella.com"
                                    },
                                    "modifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true,
                                      "example": "2018-06-13T16:07:07.222Z"
                                    },
                                    "secret": {
                                      "type": "string",
                                      "example": "123Secret",
                                      "description": "The secret of the PSK credentials. Ensure that you save the secret.\nThis is the only time the system provides this value."
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "transport": {
                          "type": "object",
                          "properties": {
                            "protocol": {
                              "description": "The tunnel transport protocol. The default transport protocol is IPSec.",
                              "type": "string",
                              "enum": [
                                "IPSec"
                              ],
                              "readOnly": true,
                              "example": "IPSec"
                            }
                          }
                        },
                        "serviceType": {
                          "type": "string",
                          "description": "The Service type to associate with the tunnel. The valid values are: SIG or Private Access.\nThe default type of service is 'SIG'.",
                          "enum": [
                            "SIG",
                            "Private Access"
                          ],
                          "readOnly": true,
                          "example": "SIG"
                        },
                        "networkCIDRs": {
                          "type": "array",
                          "description": "IP ranges associated with the tunnel. If serviceType is 'Private Access' this field\nis required, otherwise optional.",
                          "items": {
                            "type": "string",
                            "description": "IPv4 CIDR ranges"
                          },
                          "example": [
                            "123.111.222.25/24",
                            "111.222.39.1/32"
                          ]
                        },
                        "meta": {
                          "type": "object",
                          "description": "Metadata for the tunnel object, relating to service internals.",
                          "readOnly": true
                        },
                        "createdAt": {
                          "type": "string",
                          "description": "The date and time (timestamp) when the tunnel was created.",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2018-06-13T16:07:07.222Z"
                        },
                        "modifiedAt": {
                          "type": "string",
                          "description": "The date and time (timestamp) when the tunnel was updated.",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2018-06-13T16:07:07.222Z"
                        }
                      },
                      "example": {
                        "id": 1122321,
                        "uri": "/tunnels/1122321",
                        "name": "Site01Tunnel",
                        "siteOriginId": 123456,
                        "client": {
                          "deviceType": "ASA",
                          "authentication": {
                            "type": "PSK",
                            "parameters": {
                              "id": "admin@2561066-237952254-umbrella.com",
                              "modifiedAt": "2018-06-13T16:07:07.222Z",
                              "secret": "secretkey123"
                            }
                          }
                        },
                        "transport": {
                          "protocol": "IPSec"
                        },
                        "serviceType": "SIG",
                        "networkCIDRs": [
                          "123.111.222.25/24",
                          "111.222.39.1/32"
                        ],
                        "meta": {
                        },
                        "createdAt": "2018-06-13T16:07:07.222Z",
                        "modifiedAt": "2018-06-13T16:07:07.222Z"
                      }
                    }
                  ]
                },
                "example": {
                  "id": 1122321,
                  "uri": "/tunnels/1122321",
                  "name": "Site01Tunnel",
                  "siteOriginId": 123456,
                  "client": {
                    "deviceType": "ASA",
                    "authentication": {
                      "type": "PSK",
                      "parameters": {
                        "id": "admin@2561066-237952254-umbrella.com",
                        "modifiedAt": "2018-06-13T16:07:07.222Z",
                        "secret": "This123Secret"
                      }
                    }
                  },
                  "transport": {
                    "protocol": "IPSec"
                  },
                  "serviceType": "SIG",
                  "networkCIDRs": [
                    "123.111.222.25/24",
                    "111.222.39.1/32"
                  ],
                  "meta": {
                  },
                  "createdAt": "2018-06-13T16:07:07.222Z",
                  "modifiedAt": "2018-06-13T16:07:07.222Z"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "minProperties": 3,
                  "required": [
                    "statusCode",
                    "error",
                    "txId"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error",
                      "description": "a brief description of the error"
                    },
                    "txId": {
                      "type": "string",
                      "example": "86e189a6-0124-47d3-a32c-25ff3f07deaf",
                      "description": "a unique hex number that can be used for debugging"
                    },
                    "validationErrors": {
                      "type": "object",
                      "properties": {
                        "someProperty": {
                          "type": "string",
                          "example": "must not be empty",
                          "description": "the name of the property failing validation."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Unauthorized- The authorization header is missing or the token is unauthorized",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden- The token is invalid",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden, Invalid authentication credentials",
                      "description": "a brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not Found- A resource specified in the URL was not found",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error- This request could not be processed by the server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "minProperties": 3,
                  "required": [
                    "statusCode",
                    "error",
                    "txId"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error",
                      "description": "a brief description of the error"
                    },
                    "txId": {
                      "type": "string",
                      "example": "86e189a6-0124-47d3-a32c-25ff3f07deaf",
                      "description": "a unique hex number that can be used for debugging"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    },
    "/organizations/{organizationId}/tunnels/{id}": {
      "get": {
        "summary": "Get Tunnel",
        "operationId": "getTunnel",
        "description": "Get a specific tunnel.",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the tunnel",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "tags": [
          "Deployments",
          "Organization Tunnel"
        ],
        "responses": {
          "200": {
            "description": "Get a tunnel",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Tunnel resource object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "readOnly": true,
                      "description": "Tunnel resource ID, use this ID as reference for subsequent requests",
                      "example": 1122321
                    },
                    "uri": {
                      "type": "string",
                      "description": "Resource URI",
                      "readOnly": true,
                      "example": "/tunnels/1122321"
                    },
                    "name": {
                      "type": "string",
                      "description": "Display name given to the tunnel. Tunnel Name is required, cannot exceed 50 characters in length\nand cannot have any special characters other than spaces and hyphens.",
                      "example": "Site01Tunnel"
                    },
                    "siteOriginId": {
                      "type": "integer",
                      "description": "Site Origin ID to associate with the tunnel",
                      "example": 123456
                    },
                    "client": {
                      "type": "object",
                      "description": "Configuration metadata of the client",
                      "properties": {
                        "deviceType": {
                          "type": "string",
                          "description": "The type of device from which the tunnel originates. The default value is 'other'.\nValid values are: ASA, FTD, ISR, Meraki MX, Viptela cEdge, Viptela vEdge, other.",
                          "enum": [
                            "ASA",
                            "FTD",
                            "ISR",
                            "Meraki MX",
                            "Viptela cEdge",
                            "Viptela vEdge",
                            "other"
                          ],
                          "example": "ASA"
                        },
                        "authentication": {
                          "type": "object",
                          "description": "Authentication context of client",
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "PSK"
                              ],
                              "example": "PSK",
                              "readOnly": true
                            },
                            "parameters": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "PSK ID. If an IP address is used as the ID, the IP address\nitself will be returned in this field.",
                                  "readOnly": true,
                                  "example": "admin@2561066-237952254-umbrella.com"
                                },
                                "modifiedAt": {
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true,
                                  "example": "2018-06-13T16:07:07.222Z"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "transport": {
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "description": "Tunnel transport protocol, default is IPSec.",
                          "type": "string",
                          "enum": [
                            "IPSec"
                          ],
                          "readOnly": true,
                          "example": "IPSec"
                        }
                      }
                    },
                    "serviceType": {
                      "type": "string",
                      "description": "The Service type to associate with the tunnel. The default value is 'SIG'.\nValid values: SIG or Private Access.",
                      "enum": [
                        "SIG",
                        "Private Access"
                      ],
                      "readOnly": true,
                      "example": "SIG"
                    },
                    "networkCIDRs": {
                      "type": "array",
                      "description": "IP ranges associated with the tunnel. If serviceType is 'Private Access' this field\nis required, otherwise optional.",
                      "items": {
                        "type": "string",
                        "description": "IPv4 CIDR ranges"
                      },
                      "example": [
                        "123.111.222.25/24",
                        "111.222.39.1/32"
                      ]
                    },
                    "meta": {
                      "type": "object",
                      "description": "Metadata for the tunnel object, relating to service internals.",
                      "readOnly": true
                    },
                    "createdAt": {
                      "type": "string",
                      "description": "The time when the tunnel was created.",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2018-06-13T16:07:07.222Z"
                    },
                    "modifiedAt": {
                      "type": "string",
                      "description": "The time when the tunnel was modified.",
                      "format": "date-time",
                      "readOnly": true,
                      "example": "2018-06-13T16:07:07.222Z"
                    }
                  },
                  "example": {
                    "id": 1122321,
                    "uri": "/tunnels/1122321",
                    "name": "Site01Tunnel",
                    "siteOriginId": 123456,
                    "client": {
                      "deviceType": "ASA",
                      "authentication": {
                        "type": "PSK",
                        "parameters": {
                          "id": "admin@2561066-237952254-umbrella.com",
                          "modifiedAt": "2018-06-13T16:07:07.222Z"
                        }
                      }
                    },
                    "transport": {
                      "protocol": "IPSec"
                    },
                    "serviceType": "SIG",
                    "networkCIDRs": [
                      "123.111.222.25/24",
                      "111.222.39.1/32"
                    ],
                    "meta": {
                    },
                    "createdAt": "2018-06-13T16:07:07.222Z",
                    "modifiedAt": "2018-06-13T16:07:07.222Z"
                  }
                },
                "example": {
                  "id": 1122321,
                  "uri": "/tunnels/1122321",
                  "name": "Site01Tunnel",
                  "siteOriginId": 123456,
                  "client": {
                    "deviceType": "ASA",
                    "authentication": {
                      "type": "PSK",
                      "parameters": {
                        "id": "admin@2561066-237952254-umbrella.com",
                        "modifiedAt": "2018-06-13T16:07:07.222Z"
                      }
                    }
                  },
                  "transport": {
                    "protocol": "IPSec"
                  },
                  "serviceType": "SIG",
                  "networkCIDRs": [
                    "123.111.222.25/24",
                    "111.222.39.1/32"
                  ],
                  "meta": {
                  },
                  "createdAt": "2018-06-13T16:07:07.222Z",
                  "modifiedAt": "2018-06-13T16:07:07.222Z"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "minProperties": 3,
                  "required": [
                    "statusCode",
                    "error",
                    "txId"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error",
                      "description": "a brief description of the error"
                    },
                    "txId": {
                      "type": "string",
                      "example": "86e189a6-0124-47d3-a32c-25ff3f07deaf",
                      "description": "a unique hex number that can be used for debugging"
                    },
                    "validationErrors": {
                      "type": "object",
                      "properties": {
                        "someProperty": {
                          "type": "string",
                          "example": "must not be empty",
                          "description": "the name of the property failing validation."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Unauthorized- The authorization header is missing or the token is unauthorized",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden- The token is invalid",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden, Invalid authentication credentials",
                      "description": "a brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not Found- A resource specified in the URL was not found",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error- This request could not be processed by the server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "minProperties": 3,
                  "required": [
                    "statusCode",
                    "error",
                    "txId"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error",
                      "description": "a brief description of the error"
                    },
                    "txId": {
                      "type": "string",
                      "example": "86e189a6-0124-47d3-a32c-25ff3f07deaf",
                      "description": "a unique hex number that can be used for debugging"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Tunnel",
        "operationId": "deleteTunnel",
        "description": "Deletes a specific tunnel",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "tags": [
          "Deployments",
          "Organization Tunnel"
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the tunnel",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Provide the tunnel to delete",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "detachPolicies": {
                    "type": "boolean",
                    "default": true,
                    "description": "Specifies whether to detach associated policies from the tunnel identity."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The tunnel was removed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Tunnel deleted successfully"
                    }
                  }
                },
                "example": {
                  "message": "Tunnel deleted successfully"
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "minProperties": 3,
                  "required": [
                    "statusCode",
                    "error",
                    "txId"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error",
                      "description": "a brief description of the error"
                    },
                    "txId": {
                      "type": "string",
                      "example": "86e189a6-0124-47d3-a32c-25ff3f07deaf",
                      "description": "a unique hex number that can be used for debugging"
                    },
                    "validationErrors": {
                      "type": "object",
                      "properties": {
                        "someProperty": {
                          "type": "string",
                          "example": "must not be empty",
                          "description": "the name of the property failing validation."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Unauthorized- The authorization header is missing or the token is unauthorized",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden- The token is invalid",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden, Invalid authentication credentials",
                      "description": "a brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not Found- A resource specified in the URL was not found",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict - Unable to delete requested tunnel as it is attached\nto a policy and detachPolicies was not specified in the request.\nCheck the response body for policies which this tunnel is attached to.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Umbrella cannot delete this tunnel as it is currently in use.\nTo delete this tunnel, remove it from all policies and deployments."
                    },
                    "firewallRules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 123
                          },
                          "name": {
                            "type": "string",
                            "example": "Example policy name"
                          }
                        }
                      }
                    },
                    "dnsPolicies": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 456
                          },
                          "name": {
                            "type": "string",
                            "example": "Another example policy name"
                          }
                        }
                      }
                    },
                    "internalNetworks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 789
                          },
                          "label": {
                            "type": "string",
                            "example": "Yet another example policy name"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error- This request could not be processed by the server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "minProperties": 3,
                  "required": [
                    "statusCode",
                    "error",
                    "txId"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error",
                      "description": "a brief description of the error"
                    },
                    "txId": {
                      "type": "string",
                      "example": "86e189a6-0124-47d3-a32c-25ff3f07deaf",
                      "description": "a unique hex number that can be used for debugging"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/tunnels/{id}/policies": {
      "get": {
        "summary": "List Policies for Tunnel",
        "operationId": "getTunnelPolicies",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "description": "List the policies that make use of the tunnel.",
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "path",
            "name": "id",
            "description": "The ID of the tunnel.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "firewallrule",
                "web"
              ]
            },
            "name": "type",
            "description": "Filter the list of policies to only include the specified type.",
            "required": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "limit",
            "description": "The number of items to return in the collection.",
            "required": false
          },
          {
            "in": "query",
            "schema": {
              "type": "integer"
            },
            "name": "page",
            "description": "The number of the page in the collection. Use with the limit parameter to implement pagination.",
            "required": false
          }
        ],
        "tags": [
          "Deployments",
          "Organization Tunnel"
        ],
        "responses": {
          "200": {
            "description": "Return policies associated with a tunnel.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "description": "Policies associated with a tunnel",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "id": {
                        "type": "integer",
                        "description": "The resource ID. Use the ID as reference for subsequent requests.",
                        "example": 1122321
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of policy. Valid values are: 'web' or 'firewallrule'.",
                        "enum": [
                          "firewallrule",
                          "web"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "The name given to the policy.",
                        "example": "Test Firewall Rule (Block Application)"
                      },
                      "organizationId": {
                        "type": "integer",
                        "description": "An Umbrella organization ID",
                        "example": 33451234
                      },
                      "priority": {
                        "type": "integer",
                        "description": "An integer that represents the position of the policy in the policy list.",
                        "example": 4
                      },
                      "isDefault": {
                        "type": "boolean",
                        "description": "Indicates whether the policy is the default policy."
                      },
                      "isAppliedDirectly": {
                        "type": "boolean",
                        "description": "True if the tunnel is applied directly to this policy, false if the policy\nis configured to use all tunnels."
                      },
                      "createdAt": {
                        "type": "string",
                        "description": "The date and time (timestamp) when the tunnel was created.",
                        "format": "date-time",
                        "example": "2018-06-13T16:07:07.222Z"
                      },
                      "modifiedAt": {
                        "type": "string",
                        "description": "The date and time (timestamp) when the tunnel was updated.",
                        "format": "date-time",
                        "example": "2018-06-13T16:07:07.222Z"
                      },
                      "uri": {
                        "type": "string",
                        "description": "Resource URI",
                        "example": "/v2/tunnels/8765432/policies"
                      }
                    }
                  }
                },
                "example": [
                  {
                    "id": 1122321,
                    "type": "web",
                    "name": "Test Firewall Rule (Block Application)",
                    "organizationId": 33451234,
                    "priority": 4,
                    "isDefault": true,
                    "isAppliedDirectly": true,
                    "createdAt": "2018-06-13T16:07:07.222Z",
                    "modifiedAt": "2018-06-13T16:07:07.222Z",
                    "uri": "/v2/tunnels/8765432/policies"
                  }
                ]
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "minProperties": 3,
                  "required": [
                    "statusCode",
                    "error",
                    "txId"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error",
                      "description": "a brief description of the error"
                    },
                    "txId": {
                      "type": "string",
                      "example": "86e189a6-0124-47d3-a32c-25ff3f07deaf",
                      "description": "a unique hex number that can be used for debugging"
                    },
                    "validationErrors": {
                      "type": "object",
                      "properties": {
                        "someProperty": {
                          "type": "string",
                          "example": "must not be empty",
                          "description": "the name of the property failing validation."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Unauthorized- The authorization header is missing or the token is unauthorized",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden- The token is invalid",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden, Invalid authentication credentials",
                      "description": "a brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not Found- A resource specified in the URL was not found",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error- This request could not be processed by the server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "minProperties": 3,
                  "required": [
                    "statusCode",
                    "error",
                    "txId"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error",
                      "description": "a brief description of the error"
                    },
                    "txId": {
                      "type": "string",
                      "example": "86e189a6-0124-47d3-a32c-25ff3f07deaf",
                      "description": "a unique hex number that can be used for debugging"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/endpointPosture/browser": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "operationId": "getBrowserPostures",
        "description": "Get a list of browser posture configurations in the organization.",
        "tags": [
          "Posture profile",
          "Browser"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Resource Model",
                      "description": "base template for Unified Policy API resources",
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Browser Posture Resource",
                            "description": "umbrella.endpoint.posture.browser",
                            "allOf": [
                              {
                                "title": "Resource Instance",
                                "description": "base template for single instance of a Unified Policy API resource",
                                "type": "object",
                                "required": [
                                  "resourceInstanceName"
                                ],
                                "properties": {
                                  "createdAt": {
                                    "title": "Date/Time",
                                    "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2021-01-19T00:18:07+00:00"
                                  },
                                  "modifiedAt": {
                                    "title": "Date/Time",
                                    "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2021-01-19T00:18:07+00:00"
                                  },
                                  "modifiedBy": {
                                    "title": "Modified By Id",
                                    "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "org/2/user/3855475"
                                  },
                                  "organizationId": {
                                    "title": "Umbrella Org Id",
                                    "description": "Unique identifier for the org.",
                                    "type": "number",
                                    "readOnly": true,
                                    "example": 2345
                                  },
                                  "resourceInstanceId": {
                                    "title": "Generic Id",
                                    "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                    "type": "integer",
                                    "readOnly": true,
                                    "example": "2345"
                                  },
                                  "resourceInstanceName": {
                                    "description": "Name for specific instance of resource",
                                    "type": "string",
                                    "example": "My favorite posture configuration"
                                  },
                                  "resourceName": {
                                    "title": "Resource Name",
                                    "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "browserPosture"
                                ],
                                "properties": {
                                  "browserPosture": {
                                    "title": "Browser Posture",
                                    "description": "browser posture part of the umbrella.endpoint.posture.browser resource. The browsers are determined by the [Catalog API](https://pages.github.office.opendns.com/vpnaas/spec-central/catalog-api/#/Browser%20Catalog/get_browsercatalog).",
                                    "type": "object",
                                    "required": [
                                      "browsers"
                                    ],
                                    "properties": {
                                      "browsers": {
                                        "type": "object",
                                        "minProperties": 1,
                                        "properties": {
                                          "chrome": {
                                            "title": "Browser",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "versions"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "versionRanges"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "versions": {
                                                "title": "Version List",
                                                "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "uniqueItems": true,
                                                "example": [
                                                  "all",
                                                  "current",
                                                  "11.0.1"
                                                ]
                                              },
                                              "versionRanges": {
                                                "title": "Version Ranges",
                                                "description": "object to define set of ranges of versions to enforce",
                                                "type": "object",
                                                "properties": {
                                                  "greaterThan": {
                                                    "type": "string",
                                                    "example": [
                                                      "11.0.1",
                                                      "10.0"
                                                    ]
                                                  }
                                                },
                                                "example": {
                                                  "greaterThan": "11.1"
                                                }
                                              }
                                            }
                                          },
                                          "chrome-mobile": {
                                            "title": "Browser",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "versions"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "versionRanges"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "versions": {
                                                "title": "Version List",
                                                "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "uniqueItems": true,
                                                "example": [
                                                  "all",
                                                  "current",
                                                  "11.0.1"
                                                ]
                                              },
                                              "versionRanges": {
                                                "title": "Version Ranges",
                                                "description": "object to define set of ranges of versions to enforce",
                                                "type": "object",
                                                "properties": {
                                                  "greaterThan": {
                                                    "type": "string",
                                                    "example": [
                                                      "11.0.1",
                                                      "10.0"
                                                    ]
                                                  }
                                                },
                                                "example": {
                                                  "greaterThan": "11.1"
                                                }
                                              }
                                            }
                                          },
                                          "edge-chromium": {
                                            "title": "Browser",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "versions"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "versionRanges"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "versions": {
                                                "title": "Version List",
                                                "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "uniqueItems": true,
                                                "example": [
                                                  "all",
                                                  "current",
                                                  "11.0.1"
                                                ]
                                              },
                                              "versionRanges": {
                                                "title": "Version Ranges",
                                                "description": "object to define set of ranges of versions to enforce",
                                                "type": "object",
                                                "properties": {
                                                  "greaterThan": {
                                                    "type": "string",
                                                    "example": [
                                                      "11.0.1",
                                                      "10.0"
                                                    ]
                                                  }
                                                },
                                                "example": {
                                                  "greaterThan": "11.1"
                                                }
                                              }
                                            }
                                          },
                                          "firefox": {
                                            "title": "Browser",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "versions"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "versionRanges"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "versions": {
                                                "title": "Version List",
                                                "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "uniqueItems": true,
                                                "example": [
                                                  "all",
                                                  "current",
                                                  "11.0.1"
                                                ]
                                              },
                                              "versionRanges": {
                                                "title": "Version Ranges",
                                                "description": "object to define set of ranges of versions to enforce",
                                                "type": "object",
                                                "properties": {
                                                  "greaterThan": {
                                                    "type": "string",
                                                    "example": [
                                                      "11.0.1",
                                                      "10.0"
                                                    ]
                                                  }
                                                },
                                                "example": {
                                                  "greaterThan": "11.1"
                                                }
                                              }
                                            }
                                          },
                                          "firefox-mobile": {
                                            "title": "Browser",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "versions"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "versionRanges"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "versions": {
                                                "title": "Version List",
                                                "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "uniqueItems": true,
                                                "example": [
                                                  "all",
                                                  "current",
                                                  "11.0.1"
                                                ]
                                              },
                                              "versionRanges": {
                                                "title": "Version Ranges",
                                                "description": "object to define set of ranges of versions to enforce",
                                                "type": "object",
                                                "properties": {
                                                  "greaterThan": {
                                                    "type": "string",
                                                    "example": [
                                                      "11.0.1",
                                                      "10.0"
                                                    ]
                                                  }
                                                },
                                                "example": {
                                                  "greaterThan": "11.1"
                                                }
                                              }
                                            }
                                          },
                                          "ie": {
                                            "title": "Browser",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "versions"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "versionRanges"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "versions": {
                                                "title": "Version List",
                                                "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "uniqueItems": true,
                                                "example": [
                                                  "all",
                                                  "current",
                                                  "11.0.1"
                                                ]
                                              },
                                              "versionRanges": {
                                                "title": "Version Ranges",
                                                "description": "object to define set of ranges of versions to enforce",
                                                "type": "object",
                                                "properties": {
                                                  "greaterThan": {
                                                    "type": "string",
                                                    "example": [
                                                      "11.0.1",
                                                      "10.0"
                                                    ]
                                                  }
                                                },
                                                "example": {
                                                  "greaterThan": "11.1"
                                                }
                                              }
                                            }
                                          },
                                          "safari": {
                                            "title": "Browser",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "versions"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "versionRanges"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "versions": {
                                                "title": "Version List",
                                                "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "uniqueItems": true,
                                                "example": [
                                                  "all",
                                                  "current",
                                                  "11.0.1"
                                                ]
                                              },
                                              "versionRanges": {
                                                "title": "Version Ranges",
                                                "description": "object to define set of ranges of versions to enforce",
                                                "type": "object",
                                                "properties": {
                                                  "greaterThan": {
                                                    "type": "string",
                                                    "example": [
                                                      "11.0.1",
                                                      "10.0"
                                                    ]
                                                  }
                                                },
                                                "example": {
                                                  "greaterThan": "11.1"
                                                }
                                              }
                                            }
                                          },
                                          "unknown": {
                                            "type": "object",
                                            "required": [
                                              "versions"
                                            ],
                                            "properties": {
                                              "versions": {
                                                "type": "array",
                                                "items": {
                                                  "type": "string",
                                                  "enum": [
                                                    "all"
                                                  ]
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "upgradeGracePeriod": {
                                        "title": "Grace Period",
                                        "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                                        "type": "string",
                                        "format": "duration",
                                        "example": "P1W"
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "createBrowserPosture",
        "description": "Create a new browser posture configuration for the organization.",
        "tags": [
          "Posture profile",
          "Browser"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Browser Posture Resource",
                "description": "umbrella.endpoint.posture.browser",
                "allOf": [
                  {
                    "title": "Resource Instance",
                    "description": "base template for single instance of a Unified Policy API resource",
                    "type": "object",
                    "required": [
                      "resourceInstanceName"
                    ],
                    "properties": {
                      "createdAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedBy": {
                        "title": "Modified By Id",
                        "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                        "type": "string",
                        "readOnly": true,
                        "example": "org/2/user/3855475"
                      },
                      "organizationId": {
                        "title": "Umbrella Org Id",
                        "description": "Unique identifier for the org.",
                        "type": "number",
                        "readOnly": true,
                        "example": 2345
                      },
                      "resourceInstanceId": {
                        "title": "Generic Id",
                        "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                        "type": "integer",
                        "readOnly": true,
                        "example": "2345"
                      },
                      "resourceInstanceName": {
                        "description": "Name for specific instance of resource",
                        "type": "string",
                        "example": "My favorite posture configuration"
                      },
                      "resourceName": {
                        "title": "Resource Name",
                        "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                        "type": "string",
                        "readOnly": true,
                        "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "browserPosture"
                    ],
                    "properties": {
                      "browserPosture": {
                        "title": "Browser Posture",
                        "description": "browser posture part of the umbrella.endpoint.posture.browser resource. The browsers are determined by the [Catalog API](https://pages.github.office.opendns.com/vpnaas/spec-central/catalog-api/#/Browser%20Catalog/get_browsercatalog).",
                        "type": "object",
                        "required": [
                          "browsers"
                        ],
                        "properties": {
                          "browsers": {
                            "type": "object",
                            "minProperties": 1,
                            "properties": {
                              "chrome": {
                                "title": "Browser",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "chrome-mobile": {
                                "title": "Browser",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "edge-chromium": {
                                "title": "Browser",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "firefox": {
                                "title": "Browser",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "firefox-mobile": {
                                "title": "Browser",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "ie": {
                                "title": "Browser",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "safari": {
                                "title": "Browser",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "unknown": {
                                "type": "object",
                                "required": [
                                  "versions"
                                ],
                                "properties": {
                                  "versions": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "all"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "upgradeGracePeriod": {
                            "title": "Grace Period",
                            "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                            "type": "string",
                            "format": "duration",
                            "example": "P1W"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Browser Posture Resource",
                  "description": "umbrella.endpoint.posture.browser",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "browserPosture"
                      ],
                      "properties": {
                        "browserPosture": {
                          "title": "Browser Posture",
                          "description": "browser posture part of the umbrella.endpoint.posture.browser resource. The browsers are determined by the [Catalog API](https://pages.github.office.opendns.com/vpnaas/spec-central/catalog-api/#/Browser%20Catalog/get_browsercatalog).",
                          "type": "object",
                          "required": [
                            "browsers"
                          ],
                          "properties": {
                            "browsers": {
                              "type": "object",
                              "minProperties": 1,
                              "properties": {
                                "chrome": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "chrome-mobile": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "edge-chromium": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "firefox": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "firefox-mobile": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "ie": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "safari": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "unknown": {
                                  "type": "object",
                                  "required": [
                                    "versions"
                                  ],
                                  "properties": {
                                    "versions": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "all"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "upgradeGracePeriod": {
                              "title": "Grace Period",
                              "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                              "type": "string",
                              "format": "duration",
                              "example": "P1W"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organizations/{organizationId}/endpointPosture/browser/{id}": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "title": "Generic Id",
            "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
            "type": "integer",
            "readOnly": true,
            "example": "2345"
          }
        }
      ],
      "get": {
        "operationId": "getBrowserPosture",
        "description": "Get a browser posture configuration by id.",
        "tags": [
          "Posture profile",
          "Browser"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Browser Posture Resource",
                  "description": "umbrella.endpoint.posture.browser",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "browserPosture"
                      ],
                      "properties": {
                        "browserPosture": {
                          "title": "Browser Posture",
                          "description": "browser posture part of the umbrella.endpoint.posture.browser resource. The browsers are determined by the [Catalog API](https://pages.github.office.opendns.com/vpnaas/spec-central/catalog-api/#/Browser%20Catalog/get_browsercatalog).",
                          "type": "object",
                          "required": [
                            "browsers"
                          ],
                          "properties": {
                            "browsers": {
                              "type": "object",
                              "minProperties": 1,
                              "properties": {
                                "chrome": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "chrome-mobile": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "edge-chromium": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "firefox": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "firefox-mobile": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "ie": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "safari": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "unknown": {
                                  "type": "object",
                                  "required": [
                                    "versions"
                                  ],
                                  "properties": {
                                    "versions": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "all"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "upgradeGracePeriod": {
                              "title": "Grace Period",
                              "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                              "type": "string",
                              "format": "duration",
                              "example": "P1W"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "deleteBrowserPosture",
        "description": "Delete a browser posture configuration by id.",
        "tags": [
          "Posture profile",
          "Browser"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Resource Model",
                      "description": "base template for Unified Policy API resources",
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          },
                          "example": [

                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "updateBrowserPosture",
        "description": "Update a browser posture configuration by id.",
        "tags": [
          "Posture profile",
          "Browser"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Browser Posture Resource",
                "description": "umbrella.endpoint.posture.browser",
                "allOf": [
                  {
                    "title": "Resource Instance",
                    "description": "base template for single instance of a Unified Policy API resource",
                    "type": "object",
                    "required": [
                      "resourceInstanceName"
                    ],
                    "properties": {
                      "createdAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedBy": {
                        "title": "Modified By Id",
                        "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                        "type": "string",
                        "readOnly": true,
                        "example": "org/2/user/3855475"
                      },
                      "organizationId": {
                        "title": "Umbrella Org Id",
                        "description": "Unique identifier for the org.",
                        "type": "number",
                        "readOnly": true,
                        "example": 2345
                      },
                      "resourceInstanceId": {
                        "title": "Generic Id",
                        "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                        "type": "integer",
                        "readOnly": true,
                        "example": "2345"
                      },
                      "resourceInstanceName": {
                        "description": "Name for specific instance of resource",
                        "type": "string",
                        "example": "My favorite posture configuration"
                      },
                      "resourceName": {
                        "title": "Resource Name",
                        "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                        "type": "string",
                        "readOnly": true,
                        "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "browserPosture"
                    ],
                    "properties": {
                      "browserPosture": {
                        "title": "Browser Posture",
                        "description": "browser posture part of the umbrella.endpoint.posture.browser resource. The browsers are determined by the [Catalog API](https://pages.github.office.opendns.com/vpnaas/spec-central/catalog-api/#/Browser%20Catalog/get_browsercatalog).",
                        "type": "object",
                        "required": [
                          "browsers"
                        ],
                        "properties": {
                          "browsers": {
                            "type": "object",
                            "minProperties": 1,
                            "properties": {
                              "chrome": {
                                "title": "Browser",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "chrome-mobile": {
                                "title": "Browser",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "edge-chromium": {
                                "title": "Browser",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "firefox": {
                                "title": "Browser",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "firefox-mobile": {
                                "title": "Browser",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "ie": {
                                "title": "Browser",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "safari": {
                                "title": "Browser",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "unknown": {
                                "type": "object",
                                "required": [
                                  "versions"
                                ],
                                "properties": {
                                  "versions": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "enum": [
                                        "all"
                                      ]
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "upgradeGracePeriod": {
                            "title": "Grace Period",
                            "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                            "type": "string",
                            "format": "duration",
                            "example": "P1W"
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Browser Posture Resource",
                  "description": "umbrella.endpoint.posture.browser",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "browserPosture"
                      ],
                      "properties": {
                        "browserPosture": {
                          "title": "Browser Posture",
                          "description": "browser posture part of the umbrella.endpoint.posture.browser resource. The browsers are determined by the [Catalog API](https://pages.github.office.opendns.com/vpnaas/spec-central/catalog-api/#/Browser%20Catalog/get_browsercatalog).",
                          "type": "object",
                          "required": [
                            "browsers"
                          ],
                          "properties": {
                            "browsers": {
                              "type": "object",
                              "minProperties": 1,
                              "properties": {
                                "chrome": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "chrome-mobile": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "edge-chromium": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "firefox": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "firefox-mobile": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "ie": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "safari": {
                                  "title": "Browser",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "unknown": {
                                  "type": "object",
                                  "required": [
                                    "versions"
                                  ],
                                  "properties": {
                                    "versions": {
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "enum": [
                                          "all"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "upgradeGracePeriod": {
                              "title": "Grace Period",
                              "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                              "type": "string",
                              "format": "duration",
                              "example": "P1W"
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organizations/{organizationId}/endpointPosture/geolocation": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "operationId": "getGeolocationPostures",
        "description": "Get a list of geolocation posture configurations in the organization.",
        "tags": [
          "Posture profile",
          "Geolocation"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Resource Model",
                      "description": "base template for Unified Policy API resources",
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Geolocation Posture Resource",
                            "description": "umbrella.endpoint.posture.geolocation",
                            "allOf": [
                              {
                                "title": "Resource Instance",
                                "description": "base template for single instance of a Unified Policy API resource",
                                "type": "object",
                                "required": [
                                  "resourceInstanceName"
                                ],
                                "properties": {
                                  "createdAt": {
                                    "title": "Date/Time",
                                    "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2021-01-19T00:18:07+00:00"
                                  },
                                  "modifiedAt": {
                                    "title": "Date/Time",
                                    "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2021-01-19T00:18:07+00:00"
                                  },
                                  "modifiedBy": {
                                    "title": "Modified By Id",
                                    "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "org/2/user/3855475"
                                  },
                                  "organizationId": {
                                    "title": "Umbrella Org Id",
                                    "description": "Unique identifier for the org.",
                                    "type": "number",
                                    "readOnly": true,
                                    "example": 2345
                                  },
                                  "resourceInstanceId": {
                                    "title": "Generic Id",
                                    "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                    "type": "integer",
                                    "readOnly": true,
                                    "example": "2345"
                                  },
                                  "resourceInstanceName": {
                                    "description": "Name for specific instance of resource",
                                    "type": "string",
                                    "example": "My favorite posture configuration"
                                  },
                                  "resourceName": {
                                    "title": "Resource Name",
                                    "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "geolocationPosture"
                                ],
                                "properties": {
                                  "geolocationPosture": {
                                    "title": "Geolocation Posture",
                                    "description": "ISO 3166 country codes to allow or deny",
                                    "type": "object",
                                    "required": [
                                      "type",
                                      "locationList"
                                    ],
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "enum": [
                                          "allow",
                                          "block"
                                        ],
                                        "example": "allow"
                                      },
                                      "locationList": {
                                        "type": "array",
                                        "items": {
                                          "title": "Country Code",
                                          "type": "string",
                                          "description": "ISO 3166 format",
                                          "example": "US"
                                        },
                                        "example": [
                                          "US",
                                          "CA",
                                          "GB"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "createGeolocationPosture",
        "description": "Create a new geolocation posture configuration for the organization.",
        "tags": [
          "Posture profile",
          "Geolocation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Geolocation Posture Resource",
                "description": "umbrella.endpoint.posture.geolocation",
                "allOf": [
                  {
                    "title": "Resource Instance",
                    "description": "base template for single instance of a Unified Policy API resource",
                    "type": "object",
                    "required": [
                      "resourceInstanceName"
                    ],
                    "properties": {
                      "createdAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedBy": {
                        "title": "Modified By Id",
                        "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                        "type": "string",
                        "readOnly": true,
                        "example": "org/2/user/3855475"
                      },
                      "organizationId": {
                        "title": "Umbrella Org Id",
                        "description": "Unique identifier for the org.",
                        "type": "number",
                        "readOnly": true,
                        "example": 2345
                      },
                      "resourceInstanceId": {
                        "title": "Generic Id",
                        "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                        "type": "integer",
                        "readOnly": true,
                        "example": "2345"
                      },
                      "resourceInstanceName": {
                        "description": "Name for specific instance of resource",
                        "type": "string",
                        "example": "My favorite posture configuration"
                      },
                      "resourceName": {
                        "title": "Resource Name",
                        "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                        "type": "string",
                        "readOnly": true,
                        "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "geolocationPosture"
                    ],
                    "properties": {
                      "geolocationPosture": {
                        "title": "Geolocation Posture",
                        "description": "ISO 3166 country codes to allow or deny",
                        "type": "object",
                        "required": [
                          "type",
                          "locationList"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "allow",
                              "block"
                            ],
                            "example": "allow"
                          },
                          "locationList": {
                            "type": "array",
                            "items": {
                              "title": "Country Code",
                              "type": "string",
                              "description": "ISO 3166 format",
                              "example": "US"
                            },
                            "example": [
                              "US",
                              "CA",
                              "GB"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Geolocation Posture Resource",
                  "description": "umbrella.endpoint.posture.geolocation",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "geolocationPosture"
                      ],
                      "properties": {
                        "geolocationPosture": {
                          "title": "Geolocation Posture",
                          "description": "ISO 3166 country codes to allow or deny",
                          "type": "object",
                          "required": [
                            "type",
                            "locationList"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "allow",
                                "block"
                              ],
                              "example": "allow"
                            },
                            "locationList": {
                              "type": "array",
                              "items": {
                                "title": "Country Code",
                                "type": "string",
                                "description": "ISO 3166 format",
                                "example": "US"
                              },
                              "example": [
                                "US",
                                "CA",
                                "GB"
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organizations/{organizationId}/endpointPosture/geolocation/{id}": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "title": "Generic Id",
            "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
            "type": "integer",
            "readOnly": true,
            "example": "2345"
          }
        }
      ],
      "get": {
        "operationId": "getGeolocationPosture",
        "description": "Get a geolocation posture configuration by id.",
        "tags": [
          "Posture profile",
          "Geolocation"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Geolocation Posture Resource",
                  "description": "umbrella.endpoint.posture.geolocation",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "geolocationPosture"
                      ],
                      "properties": {
                        "geolocationPosture": {
                          "title": "Geolocation Posture",
                          "description": "ISO 3166 country codes to allow or deny",
                          "type": "object",
                          "required": [
                            "type",
                            "locationList"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "allow",
                                "block"
                              ],
                              "example": "allow"
                            },
                            "locationList": {
                              "type": "array",
                              "items": {
                                "title": "Country Code",
                                "type": "string",
                                "description": "ISO 3166 format",
                                "example": "US"
                              },
                              "example": [
                                "US",
                                "CA",
                                "GB"
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "deleteGeolocationPosture",
        "description": "Delete a geolocation posture configuration by id.",
        "tags": [
          "Posture profile",
          "Geolocation"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Resource Model",
                      "description": "base template for Unified Policy API resources",
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          },
                          "example": [

                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "updateGeolocationPosture",
        "description": "Update a geolocation posture configuration by id.",
        "tags": [
          "Posture profile",
          "Geolocation"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Geolocation Posture Resource",
                "description": "umbrella.endpoint.posture.geolocation",
                "allOf": [
                  {
                    "title": "Resource Instance",
                    "description": "base template for single instance of a Unified Policy API resource",
                    "type": "object",
                    "required": [
                      "resourceInstanceName"
                    ],
                    "properties": {
                      "createdAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedBy": {
                        "title": "Modified By Id",
                        "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                        "type": "string",
                        "readOnly": true,
                        "example": "org/2/user/3855475"
                      },
                      "organizationId": {
                        "title": "Umbrella Org Id",
                        "description": "Unique identifier for the org.",
                        "type": "number",
                        "readOnly": true,
                        "example": 2345
                      },
                      "resourceInstanceId": {
                        "title": "Generic Id",
                        "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                        "type": "integer",
                        "readOnly": true,
                        "example": "2345"
                      },
                      "resourceInstanceName": {
                        "description": "Name for specific instance of resource",
                        "type": "string",
                        "example": "My favorite posture configuration"
                      },
                      "resourceName": {
                        "title": "Resource Name",
                        "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                        "type": "string",
                        "readOnly": true,
                        "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "geolocationPosture"
                    ],
                    "properties": {
                      "geolocationPosture": {
                        "title": "Geolocation Posture",
                        "description": "ISO 3166 country codes to allow or deny",
                        "type": "object",
                        "required": [
                          "type",
                          "locationList"
                        ],
                        "properties": {
                          "type": {
                            "type": "string",
                            "enum": [
                              "allow",
                              "block"
                            ],
                            "example": "allow"
                          },
                          "locationList": {
                            "type": "array",
                            "items": {
                              "title": "Country Code",
                              "type": "string",
                              "description": "ISO 3166 format",
                              "example": "US"
                            },
                            "example": [
                              "US",
                              "CA",
                              "GB"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Geolocation Posture Resource",
                  "description": "umbrella.endpoint.posture.geolocation",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "geolocationPosture"
                      ],
                      "properties": {
                        "geolocationPosture": {
                          "title": "Geolocation Posture",
                          "description": "ISO 3166 country codes to allow or deny",
                          "type": "object",
                          "required": [
                            "type",
                            "locationList"
                          ],
                          "properties": {
                            "type": {
                              "type": "string",
                              "enum": [
                                "allow",
                                "block"
                              ],
                              "example": "allow"
                            },
                            "locationList": {
                              "type": "array",
                              "items": {
                                "title": "Country Code",
                                "type": "string",
                                "description": "ISO 3166 format",
                                "example": "US"
                              },
                              "example": [
                                "US",
                                "CA",
                                "GB"
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organizations/{organizationId}/endpointPosture/os": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "operationId": "getOperatingSystemPostures",
        "description": "Get a list of operating system posture configurations in the organization.",
        "tags": [
          "Posture profile",
          "Operating System"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Resource Model",
                      "description": "base template for Unified Policy API resources",
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "OS Posture Resource",
                            "description": "umbrella.endpoint.posture.os",
                            "allOf": [
                              {
                                "title": "Resource Instance",
                                "description": "base template for single instance of a Unified Policy API resource",
                                "type": "object",
                                "required": [
                                  "resourceInstanceName"
                                ],
                                "properties": {
                                  "createdAt": {
                                    "title": "Date/Time",
                                    "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2021-01-19T00:18:07+00:00"
                                  },
                                  "modifiedAt": {
                                    "title": "Date/Time",
                                    "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2021-01-19T00:18:07+00:00"
                                  },
                                  "modifiedBy": {
                                    "title": "Modified By Id",
                                    "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "org/2/user/3855475"
                                  },
                                  "organizationId": {
                                    "title": "Umbrella Org Id",
                                    "description": "Unique identifier for the org.",
                                    "type": "number",
                                    "readOnly": true,
                                    "example": 2345
                                  },
                                  "resourceInstanceId": {
                                    "title": "Generic Id",
                                    "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                    "type": "integer",
                                    "readOnly": true,
                                    "example": "2345"
                                  },
                                  "resourceInstanceName": {
                                    "description": "Name for specific instance of resource",
                                    "type": "string",
                                    "example": "My favorite posture configuration"
                                  },
                                  "resourceName": {
                                    "title": "Resource Name",
                                    "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "osPosture"
                                ],
                                "properties": {
                                  "osPosture": {
                                    "title": "OS Posture",
                                    "type": "object",
                                    "required": [
                                      "operatingSystems"
                                    ],
                                    "properties": {
                                      "upgradeGracePeriod": {
                                        "title": "Grace Period",
                                        "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                                        "type": "string",
                                        "format": "duration",
                                        "example": "P1W"
                                      },
                                      "operatingSystems": {
                                        "type": "object",
                                        "properties": {
                                          "android": {
                                            "title": "Operating System",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "versions"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "versionRanges"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "versions": {
                                                "title": "Version List",
                                                "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "uniqueItems": true,
                                                "example": [
                                                  "all",
                                                  "current",
                                                  "11.0.1"
                                                ]
                                              },
                                              "versionRanges": {
                                                "title": "Version Ranges",
                                                "description": "object to define set of ranges of versions to enforce",
                                                "type": "object",
                                                "properties": {
                                                  "greaterThan": {
                                                    "type": "string",
                                                    "example": [
                                                      "11.0.1",
                                                      "10.0"
                                                    ]
                                                  }
                                                },
                                                "example": {
                                                  "greaterThan": "11.1"
                                                }
                                              }
                                            }
                                          },
                                          "apple-ios": {
                                            "title": "Operating System",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "versions"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "versionRanges"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "versions": {
                                                "title": "Version List",
                                                "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "uniqueItems": true,
                                                "example": [
                                                  "all",
                                                  "current",
                                                  "11.0.1"
                                                ]
                                              },
                                              "versionRanges": {
                                                "title": "Version Ranges",
                                                "description": "object to define set of ranges of versions to enforce",
                                                "type": "object",
                                                "properties": {
                                                  "greaterThan": {
                                                    "type": "string",
                                                    "example": [
                                                      "11.0.1",
                                                      "10.0"
                                                    ]
                                                  }
                                                },
                                                "example": {
                                                  "greaterThan": "11.1"
                                                }
                                              }
                                            }
                                          },
                                          "linux-64": {
                                            "title": "Operating System",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "versions"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "versionRanges"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "versions": {
                                                "title": "Version List",
                                                "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "uniqueItems": true,
                                                "example": [
                                                  "all",
                                                  "current",
                                                  "11.0.1"
                                                ]
                                              },
                                              "versionRanges": {
                                                "title": "Version Ranges",
                                                "description": "object to define set of ranges of versions to enforce",
                                                "type": "object",
                                                "properties": {
                                                  "greaterThan": {
                                                    "type": "string",
                                                    "example": [
                                                      "11.0.1",
                                                      "10.0"
                                                    ]
                                                  }
                                                },
                                                "example": {
                                                  "greaterThan": "11.1"
                                                }
                                              }
                                            }
                                          },
                                          "mac-intel": {
                                            "title": "Operating System",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "versions"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "versionRanges"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "versions": {
                                                "title": "Version List",
                                                "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "uniqueItems": true,
                                                "example": [
                                                  "all",
                                                  "current",
                                                  "11.0.1"
                                                ]
                                              },
                                              "versionRanges": {
                                                "title": "Version Ranges",
                                                "description": "object to define set of ranges of versions to enforce",
                                                "type": "object",
                                                "properties": {
                                                  "greaterThan": {
                                                    "type": "string",
                                                    "example": [
                                                      "11.0.1",
                                                      "10.0"
                                                    ]
                                                  }
                                                },
                                                "example": {
                                                  "greaterThan": "11.1"
                                                }
                                              }
                                            }
                                          },
                                          "win": {
                                            "title": "Operating System",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "versions"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "versionRanges"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "versions": {
                                                "title": "Version List",
                                                "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                                "type": "array",
                                                "items": {
                                                  "type": "string"
                                                },
                                                "uniqueItems": true,
                                                "example": [
                                                  "all",
                                                  "current",
                                                  "11.0.1"
                                                ]
                                              },
                                              "versionRanges": {
                                                "title": "Version Ranges",
                                                "description": "object to define set of ranges of versions to enforce",
                                                "type": "object",
                                                "properties": {
                                                  "greaterThan": {
                                                    "type": "string",
                                                    "example": [
                                                      "11.0.1",
                                                      "10.0"
                                                    ]
                                                  }
                                                },
                                                "example": {
                                                  "greaterThan": "11.1"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "createOperatingSystemPosture",
        "description": "Create a new operating system posture configuration for the organization.",
        "tags": [
          "Posture profile",
          "Operating System"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "OS Posture Resource",
                "description": "umbrella.endpoint.posture.os",
                "allOf": [
                  {
                    "title": "Resource Instance",
                    "description": "base template for single instance of a Unified Policy API resource",
                    "type": "object",
                    "required": [
                      "resourceInstanceName"
                    ],
                    "properties": {
                      "createdAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedBy": {
                        "title": "Modified By Id",
                        "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                        "type": "string",
                        "readOnly": true,
                        "example": "org/2/user/3855475"
                      },
                      "organizationId": {
                        "title": "Umbrella Org Id",
                        "description": "Unique identifier for the org.",
                        "type": "number",
                        "readOnly": true,
                        "example": 2345
                      },
                      "resourceInstanceId": {
                        "title": "Generic Id",
                        "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                        "type": "integer",
                        "readOnly": true,
                        "example": "2345"
                      },
                      "resourceInstanceName": {
                        "description": "Name for specific instance of resource",
                        "type": "string",
                        "example": "My favorite posture configuration"
                      },
                      "resourceName": {
                        "title": "Resource Name",
                        "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                        "type": "string",
                        "readOnly": true,
                        "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "osPosture"
                    ],
                    "properties": {
                      "osPosture": {
                        "title": "OS Posture",
                        "type": "object",
                        "required": [
                          "operatingSystems"
                        ],
                        "properties": {
                          "upgradeGracePeriod": {
                            "title": "Grace Period",
                            "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                            "type": "string",
                            "format": "duration",
                            "example": "P1W"
                          },
                          "operatingSystems": {
                            "type": "object",
                            "properties": {
                              "android": {
                                "title": "Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "apple-ios": {
                                "title": "Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "linux-64": {
                                "title": "Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "mac-intel": {
                                "title": "Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "win": {
                                "title": "Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "OS Posture Resource",
                  "description": "umbrella.endpoint.posture.os",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "osPosture"
                      ],
                      "properties": {
                        "osPosture": {
                          "title": "OS Posture",
                          "type": "object",
                          "required": [
                            "operatingSystems"
                          ],
                          "properties": {
                            "upgradeGracePeriod": {
                              "title": "Grace Period",
                              "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                              "type": "string",
                              "format": "duration",
                              "example": "P1W"
                            },
                            "operatingSystems": {
                              "type": "object",
                              "properties": {
                                "android": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "apple-ios": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "linux-64": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "mac-intel": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "win": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organizations/{organizationId}/endpointPosture/os/{id}": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "title": "Generic Id",
            "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
            "type": "integer",
            "readOnly": true,
            "example": "2345"
          }
        }
      ],
      "get": {
        "operationId": "getOperatingSystemPosture",
        "description": "Get an operating system posture configuration by id.",
        "tags": [
          "Posture profile",
          "Operating System"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "OS Posture Resource",
                  "description": "umbrella.endpoint.posture.os",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "osPosture"
                      ],
                      "properties": {
                        "osPosture": {
                          "title": "OS Posture",
                          "type": "object",
                          "required": [
                            "operatingSystems"
                          ],
                          "properties": {
                            "upgradeGracePeriod": {
                              "title": "Grace Period",
                              "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                              "type": "string",
                              "format": "duration",
                              "example": "P1W"
                            },
                            "operatingSystems": {
                              "type": "object",
                              "properties": {
                                "android": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "apple-ios": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "linux-64": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "mac-intel": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "win": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "deleteOperatingSystemPosture",
        "description": "Delete an operating system posture configuration by id.",
        "tags": [
          "Posture profile",
          "Operating System"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Resource Model",
                      "description": "base template for Unified Policy API resources",
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          },
                          "example": [

                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "updateOperatingSystemPosture",
        "description": "Update an operating system posture configuration by id.",
        "tags": [
          "Posture profile",
          "Operating System"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "OS Posture Resource",
                "description": "umbrella.endpoint.posture.os",
                "allOf": [
                  {
                    "title": "Resource Instance",
                    "description": "base template for single instance of a Unified Policy API resource",
                    "type": "object",
                    "required": [
                      "resourceInstanceName"
                    ],
                    "properties": {
                      "createdAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedBy": {
                        "title": "Modified By Id",
                        "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                        "type": "string",
                        "readOnly": true,
                        "example": "org/2/user/3855475"
                      },
                      "organizationId": {
                        "title": "Umbrella Org Id",
                        "description": "Unique identifier for the org.",
                        "type": "number",
                        "readOnly": true,
                        "example": 2345
                      },
                      "resourceInstanceId": {
                        "title": "Generic Id",
                        "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                        "type": "integer",
                        "readOnly": true,
                        "example": "2345"
                      },
                      "resourceInstanceName": {
                        "description": "Name for specific instance of resource",
                        "type": "string",
                        "example": "My favorite posture configuration"
                      },
                      "resourceName": {
                        "title": "Resource Name",
                        "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                        "type": "string",
                        "readOnly": true,
                        "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "osPosture"
                    ],
                    "properties": {
                      "osPosture": {
                        "title": "OS Posture",
                        "type": "object",
                        "required": [
                          "operatingSystems"
                        ],
                        "properties": {
                          "upgradeGracePeriod": {
                            "title": "Grace Period",
                            "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                            "type": "string",
                            "format": "duration",
                            "example": "P1W"
                          },
                          "operatingSystems": {
                            "type": "object",
                            "properties": {
                              "android": {
                                "title": "Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "apple-ios": {
                                "title": "Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "linux-64": {
                                "title": "Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "mac-intel": {
                                "title": "Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              },
                              "win": {
                                "title": "Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "versions"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "versionRanges"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "versions": {
                                    "title": "Version List",
                                    "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    },
                                    "uniqueItems": true,
                                    "example": [
                                      "all",
                                      "current",
                                      "11.0.1"
                                    ]
                                  },
                                  "versionRanges": {
                                    "title": "Version Ranges",
                                    "description": "object to define set of ranges of versions to enforce",
                                    "type": "object",
                                    "properties": {
                                      "greaterThan": {
                                        "type": "string",
                                        "example": [
                                          "11.0.1",
                                          "10.0"
                                        ]
                                      }
                                    },
                                    "example": {
                                      "greaterThan": "11.1"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "OS Posture Resource",
                  "description": "umbrella.endpoint.posture.os",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "osPosture"
                      ],
                      "properties": {
                        "osPosture": {
                          "title": "OS Posture",
                          "type": "object",
                          "required": [
                            "operatingSystems"
                          ],
                          "properties": {
                            "upgradeGracePeriod": {
                              "title": "Grace Period",
                              "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                              "type": "string",
                              "format": "duration",
                              "example": "P1W"
                            },
                            "operatingSystems": {
                              "type": "object",
                              "properties": {
                                "android": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "apple-ios": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "linux-64": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "mac-intel": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                },
                                "win": {
                                  "title": "Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "versions"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "versionRanges"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "versions": {
                                      "title": "Version List",
                                      "description": "Versions of browsers or operating systems that come from the Catalog API. 'all' and 'current' are special versions for grouping. 'current' is a group of versions.",
                                      "type": "array",
                                      "items": {
                                        "type": "string"
                                      },
                                      "uniqueItems": true,
                                      "example": [
                                        "all",
                                        "current",
                                        "11.0.1"
                                      ]
                                    },
                                    "versionRanges": {
                                      "title": "Version Ranges",
                                      "description": "object to define set of ranges of versions to enforce",
                                      "type": "object",
                                      "properties": {
                                        "greaterThan": {
                                          "type": "string",
                                          "example": [
                                            "11.0.1",
                                            "10.0"
                                          ]
                                        }
                                      },
                                      "example": {
                                        "greaterThan": "11.1"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organizations/{organizationId}/endpointPosture/antimalware": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "operationId": "getAntiMalwarePostures",
        "description": "Get a list of anti-malware posture configurations in the organization.",
        "tags": [
          "Posture profile",
          "Anti-Malware"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Resource Model",
                      "description": "base template for Unified Policy API resources",
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Anti-Malware Posture Resource",
                            "description": "umbrella.endpoint.posture.antimalware",
                            "allOf": [
                              {
                                "title": "Resource Instance",
                                "description": "base template for single instance of a Unified Policy API resource",
                                "type": "object",
                                "required": [
                                  "resourceInstanceName"
                                ],
                                "properties": {
                                  "createdAt": {
                                    "title": "Date/Time",
                                    "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2021-01-19T00:18:07+00:00"
                                  },
                                  "modifiedAt": {
                                    "title": "Date/Time",
                                    "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2021-01-19T00:18:07+00:00"
                                  },
                                  "modifiedBy": {
                                    "title": "Modified By Id",
                                    "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "org/2/user/3855475"
                                  },
                                  "organizationId": {
                                    "title": "Umbrella Org Id",
                                    "description": "Unique identifier for the org.",
                                    "type": "number",
                                    "readOnly": true,
                                    "example": 2345
                                  },
                                  "resourceInstanceId": {
                                    "title": "Generic Id",
                                    "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                    "type": "integer",
                                    "readOnly": true,
                                    "example": "2345"
                                  },
                                  "resourceInstanceName": {
                                    "description": "Name for specific instance of resource",
                                    "type": "string",
                                    "example": "My favorite posture configuration"
                                  },
                                  "resourceName": {
                                    "title": "Resource Name",
                                    "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "antiMalwarePosture"
                                ],
                                "properties": {
                                  "antiMalwarePosture": {
                                    "title": "AM Posture",
                                    "type": "object",
                                    "required": [
                                      "operatingSystems"
                                    ],
                                    "properties": {
                                      "verifySignatureFileUpdatedIn": {
                                        "title": "Grace Period",
                                        "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                                        "type": "string",
                                        "format": "duration",
                                        "example": "P1W"
                                      },
                                      "operatingSystems": {
                                        "type": "object",
                                        "properties": {
                                          "android": {
                                            "title": "Anti-Malware By Operating System",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyRealtimeProtectionEnabled"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifySignatureFileUpdatedIn"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifyRealTimeProtectionEnabled": {
                                                "title": "Verify Realtime Protection Enabled",
                                                "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "apple-ios": {
                                            "title": "Anti-Malware By Operating System",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyRealtimeProtectionEnabled"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifySignatureFileUpdatedIn"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifyRealTimeProtectionEnabled": {
                                                "title": "Verify Realtime Protection Enabled",
                                                "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "linux-64": {
                                            "title": "Anti-Malware By Operating System",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyRealtimeProtectionEnabled"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifySignatureFileUpdatedIn"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifyRealTimeProtectionEnabled": {
                                                "title": "Verify Realtime Protection Enabled",
                                                "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "mac-intel": {
                                            "title": "Anti-Malware By Operating System",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyRealtimeProtectionEnabled"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifySignatureFileUpdatedIn"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifyRealTimeProtectionEnabled": {
                                                "title": "Verify Realtime Protection Enabled",
                                                "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "win": {
                                            "title": "Anti-Malware By Operating System",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyRealtimeProtectionEnabled"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifySignatureFileUpdatedIn"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifyRealTimeProtectionEnabled": {
                                                "title": "Verify Realtime Protection Enabled",
                                                "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "createAntiMalwarePosture",
        "description": "Create a new anti-malware posture configuration for the organization.",
        "tags": [
          "Posture profile",
          "Anti-Malware"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Anti-Malware Posture Resource",
                "description": "umbrella.endpoint.posture.antimalware",
                "allOf": [
                  {
                    "title": "Resource Instance",
                    "description": "base template for single instance of a Unified Policy API resource",
                    "type": "object",
                    "required": [
                      "resourceInstanceName"
                    ],
                    "properties": {
                      "createdAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedBy": {
                        "title": "Modified By Id",
                        "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                        "type": "string",
                        "readOnly": true,
                        "example": "org/2/user/3855475"
                      },
                      "organizationId": {
                        "title": "Umbrella Org Id",
                        "description": "Unique identifier for the org.",
                        "type": "number",
                        "readOnly": true,
                        "example": 2345
                      },
                      "resourceInstanceId": {
                        "title": "Generic Id",
                        "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                        "type": "integer",
                        "readOnly": true,
                        "example": "2345"
                      },
                      "resourceInstanceName": {
                        "description": "Name for specific instance of resource",
                        "type": "string",
                        "example": "My favorite posture configuration"
                      },
                      "resourceName": {
                        "title": "Resource Name",
                        "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                        "type": "string",
                        "readOnly": true,
                        "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "antiMalwarePosture"
                    ],
                    "properties": {
                      "antiMalwarePosture": {
                        "title": "AM Posture",
                        "type": "object",
                        "required": [
                          "operatingSystems"
                        ],
                        "properties": {
                          "verifySignatureFileUpdatedIn": {
                            "title": "Grace Period",
                            "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                            "type": "string",
                            "format": "duration",
                            "example": "P1W"
                          },
                          "operatingSystems": {
                            "type": "object",
                            "properties": {
                              "android": {
                                "title": "Anti-Malware By Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyRealtimeProtectionEnabled"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySignatureFileUpdatedIn"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyRealTimeProtectionEnabled": {
                                    "title": "Verify Realtime Protection Enabled",
                                    "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "apple-ios": {
                                "title": "Anti-Malware By Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyRealtimeProtectionEnabled"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySignatureFileUpdatedIn"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyRealTimeProtectionEnabled": {
                                    "title": "Verify Realtime Protection Enabled",
                                    "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "linux-64": {
                                "title": "Anti-Malware By Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyRealtimeProtectionEnabled"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySignatureFileUpdatedIn"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyRealTimeProtectionEnabled": {
                                    "title": "Verify Realtime Protection Enabled",
                                    "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "mac-intel": {
                                "title": "Anti-Malware By Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyRealtimeProtectionEnabled"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySignatureFileUpdatedIn"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyRealTimeProtectionEnabled": {
                                    "title": "Verify Realtime Protection Enabled",
                                    "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "win": {
                                "title": "Anti-Malware By Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyRealtimeProtectionEnabled"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySignatureFileUpdatedIn"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyRealTimeProtectionEnabled": {
                                    "title": "Verify Realtime Protection Enabled",
                                    "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Anti-Malware Posture Resource",
                  "description": "umbrella.endpoint.posture.antimalware",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "antiMalwarePosture"
                      ],
                      "properties": {
                        "antiMalwarePosture": {
                          "title": "AM Posture",
                          "type": "object",
                          "required": [
                            "operatingSystems"
                          ],
                          "properties": {
                            "verifySignatureFileUpdatedIn": {
                              "title": "Grace Period",
                              "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                              "type": "string",
                              "format": "duration",
                              "example": "P1W"
                            },
                            "operatingSystems": {
                              "type": "object",
                              "properties": {
                                "android": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "apple-ios": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "linux-64": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "mac-intel": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "win": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organizations/{organizationId}/endpointPosture/antimalware/{id}": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "title": "Generic Id",
            "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
            "type": "integer",
            "readOnly": true,
            "example": "2345"
          }
        }
      ],
      "get": {
        "operationId": "getAntiMalwarePosture",
        "description": "Get an anti-malware posture configuration by id.",
        "tags": [
          "Posture profile",
          "Anti-Malware"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Anti-Malware Posture Resource",
                  "description": "umbrella.endpoint.posture.antimalware",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "antiMalwarePosture"
                      ],
                      "properties": {
                        "antiMalwarePosture": {
                          "title": "AM Posture",
                          "type": "object",
                          "required": [
                            "operatingSystems"
                          ],
                          "properties": {
                            "verifySignatureFileUpdatedIn": {
                              "title": "Grace Period",
                              "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                              "type": "string",
                              "format": "duration",
                              "example": "P1W"
                            },
                            "operatingSystems": {
                              "type": "object",
                              "properties": {
                                "android": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "apple-ios": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "linux-64": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "mac-intel": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "win": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "deleteAntiMalwarePosture",
        "description": "Delete an anti-malware posture configuration by id.",
        "tags": [
          "Posture profile",
          "Anti-Malware"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Resource Model",
                      "description": "base template for Unified Policy API resources",
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          },
                          "example": [

                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "updateAntiMalwarePosture",
        "description": "Update an anti-malware posture configuration by id.",
        "tags": [
          "Posture profile",
          "Anti-Malware"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Anti-Malware Posture Resource",
                "description": "umbrella.endpoint.posture.antimalware",
                "allOf": [
                  {
                    "title": "Resource Instance",
                    "description": "base template for single instance of a Unified Policy API resource",
                    "type": "object",
                    "required": [
                      "resourceInstanceName"
                    ],
                    "properties": {
                      "createdAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedBy": {
                        "title": "Modified By Id",
                        "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                        "type": "string",
                        "readOnly": true,
                        "example": "org/2/user/3855475"
                      },
                      "organizationId": {
                        "title": "Umbrella Org Id",
                        "description": "Unique identifier for the org.",
                        "type": "number",
                        "readOnly": true,
                        "example": 2345
                      },
                      "resourceInstanceId": {
                        "title": "Generic Id",
                        "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                        "type": "integer",
                        "readOnly": true,
                        "example": "2345"
                      },
                      "resourceInstanceName": {
                        "description": "Name for specific instance of resource",
                        "type": "string",
                        "example": "My favorite posture configuration"
                      },
                      "resourceName": {
                        "title": "Resource Name",
                        "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                        "type": "string",
                        "readOnly": true,
                        "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "antiMalwarePosture"
                    ],
                    "properties": {
                      "antiMalwarePosture": {
                        "title": "AM Posture",
                        "type": "object",
                        "required": [
                          "operatingSystems"
                        ],
                        "properties": {
                          "verifySignatureFileUpdatedIn": {
                            "title": "Grace Period",
                            "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                            "type": "string",
                            "format": "duration",
                            "example": "P1W"
                          },
                          "operatingSystems": {
                            "type": "object",
                            "properties": {
                              "android": {
                                "title": "Anti-Malware By Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyRealtimeProtectionEnabled"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySignatureFileUpdatedIn"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyRealTimeProtectionEnabled": {
                                    "title": "Verify Realtime Protection Enabled",
                                    "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "apple-ios": {
                                "title": "Anti-Malware By Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyRealtimeProtectionEnabled"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySignatureFileUpdatedIn"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyRealTimeProtectionEnabled": {
                                    "title": "Verify Realtime Protection Enabled",
                                    "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "linux-64": {
                                "title": "Anti-Malware By Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyRealtimeProtectionEnabled"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySignatureFileUpdatedIn"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyRealTimeProtectionEnabled": {
                                    "title": "Verify Realtime Protection Enabled",
                                    "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "mac-intel": {
                                "title": "Anti-Malware By Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyRealtimeProtectionEnabled"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySignatureFileUpdatedIn"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyRealTimeProtectionEnabled": {
                                    "title": "Verify Realtime Protection Enabled",
                                    "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "win": {
                                "title": "Anti-Malware By Operating System",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyRealtimeProtectionEnabled"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySignatureFileUpdatedIn"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyRealTimeProtectionEnabled": {
                                    "title": "Verify Realtime Protection Enabled",
                                    "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Anti-Malware Posture Resource",
                  "description": "umbrella.endpoint.posture.antimalware",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "antiMalwarePosture"
                      ],
                      "properties": {
                        "antiMalwarePosture": {
                          "title": "AM Posture",
                          "type": "object",
                          "required": [
                            "operatingSystems"
                          ],
                          "properties": {
                            "verifySignatureFileUpdatedIn": {
                              "title": "Grace Period",
                              "description": "Duration to upgrade before no longer matching posture. Only applies if previously matched and no longer matched due to a new release.\n\nDurations:\n\n  dur-second        = 1*DIGIT \"S\"\n\n  dur-minute        = 1*DIGIT \"M\" [dur-second]\n\n  dur-hour          = 1*DIGIT \"H\" [dur-minute]\n\n  dur-time          = \"T\" (dur-hour / dur-minute / dur-second)\n\n  dur-day           = 1*DIGIT \"D\"\n\n  dur-week          = 1*DIGIT \"W\"\n\n  dur-month         = 1*DIGIT \"M\" [dur-day]\n\n  dur-year          = 1*DIGIT \"Y\" [dur-month]\n\n  dur-date          = (dur-day / dur-month / dur-year) [dur-time]\n\n  duration          = \"P\" (dur-date / dur-time / dur-week)\n\n[RFC3339's ISO8601](https://datatracker.ietf.org/doc/html/rfc3339#appendix-A) format for duration as specified by [JSON Schema](https://json-schema.org/understanding-json-schema/reference/string.html#dates-and-times).\n",
                              "type": "string",
                              "format": "duration",
                              "example": "P1W"
                            },
                            "operatingSystems": {
                              "type": "object",
                              "properties": {
                                "android": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "apple-ios": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "linux-64": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "mac-intel": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "win": {
                                  "title": "Anti-Malware By Operating System",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyRealtimeProtectionEnabled"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySignatureFileUpdatedIn"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyRealTimeProtectionEnabled": {
                                      "title": "Verify Realtime Protection Enabled",
                                      "description": "Verify if the real time scan is enable on the anti-malware software installed on client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organizations/{organizationId}/endpointPosture/firewall": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "operationId": "getFirewallPostures",
        "description": "Get a list of firewall posture configurations in the organization.",
        "tags": [
          "Posture profile",
          "Firewall"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Resource Model",
                      "description": "base template for Unified Policy API resources",
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Firewall Posture Resource",
                            "description": "umbrella.endpoint.posture.firewall",
                            "allOf": [
                              {
                                "title": "Resource Instance",
                                "description": "base template for single instance of a Unified Policy API resource",
                                "type": "object",
                                "required": [
                                  "resourceInstanceName"
                                ],
                                "properties": {
                                  "createdAt": {
                                    "title": "Date/Time",
                                    "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2021-01-19T00:18:07+00:00"
                                  },
                                  "modifiedAt": {
                                    "title": "Date/Time",
                                    "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2021-01-19T00:18:07+00:00"
                                  },
                                  "modifiedBy": {
                                    "title": "Modified By Id",
                                    "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "org/2/user/3855475"
                                  },
                                  "organizationId": {
                                    "title": "Umbrella Org Id",
                                    "description": "Unique identifier for the org.",
                                    "type": "number",
                                    "readOnly": true,
                                    "example": 2345
                                  },
                                  "resourceInstanceId": {
                                    "title": "Generic Id",
                                    "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                    "type": "integer",
                                    "readOnly": true,
                                    "example": "2345"
                                  },
                                  "resourceInstanceName": {
                                    "description": "Name for specific instance of resource",
                                    "type": "string",
                                    "example": "My favorite posture configuration"
                                  },
                                  "resourceName": {
                                    "title": "Resource Name",
                                    "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "firewallPosture"
                                ],
                                "properties": {
                                  "firewallPosture": {
                                    "title": "FW Posture",
                                    "type": "object",
                                    "required": [
                                      "operatingSystems"
                                    ],
                                    "properties": {
                                      "operatingSystems": {
                                        "type": "object",
                                        "properties": {
                                          "android": {
                                            "title": "Firewall By Operating System",
                                            "description": "Firewall By Operating System.",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyIsFirewallEnabled"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifyIsFirewallEnabled": {
                                                "title": "Verify Firewall Enabled",
                                                "description": "Verify if the firewall was enabled on the client machine.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "apple-ios": {
                                            "title": "Firewall By Operating System",
                                            "description": "Firewall By Operating System.",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyIsFirewallEnabled"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifyIsFirewallEnabled": {
                                                "title": "Verify Firewall Enabled",
                                                "description": "Verify if the firewall was enabled on the client machine.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "linux-64": {
                                            "title": "Firewall By Operating System",
                                            "description": "Firewall By Operating System.",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyIsFirewallEnabled"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifyIsFirewallEnabled": {
                                                "title": "Verify Firewall Enabled",
                                                "description": "Verify if the firewall was enabled on the client machine.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "mac-intel": {
                                            "title": "Firewall By Operating System",
                                            "description": "Firewall By Operating System.",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyIsFirewallEnabled"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifyIsFirewallEnabled": {
                                                "title": "Verify Firewall Enabled",
                                                "description": "Verify if the firewall was enabled on the client machine.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "win": {
                                            "title": "Firewall By Operating System",
                                            "description": "Firewall By Operating System.",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyIsFirewallEnabled"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifyIsFirewallEnabled": {
                                                "title": "Verify Firewall Enabled",
                                                "description": "Verify if the firewall was enabled on the client machine.",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "createFirewallPosture",
        "description": "Create a new Firewall posture configuration for the organization.",
        "tags": [
          "Posture profile",
          "Firewall"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Firewall Posture Resource",
                "description": "umbrella.endpoint.posture.firewall",
                "allOf": [
                  {
                    "title": "Resource Instance",
                    "description": "base template for single instance of a Unified Policy API resource",
                    "type": "object",
                    "required": [
                      "resourceInstanceName"
                    ],
                    "properties": {
                      "createdAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedBy": {
                        "title": "Modified By Id",
                        "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                        "type": "string",
                        "readOnly": true,
                        "example": "org/2/user/3855475"
                      },
                      "organizationId": {
                        "title": "Umbrella Org Id",
                        "description": "Unique identifier for the org.",
                        "type": "number",
                        "readOnly": true,
                        "example": 2345
                      },
                      "resourceInstanceId": {
                        "title": "Generic Id",
                        "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                        "type": "integer",
                        "readOnly": true,
                        "example": "2345"
                      },
                      "resourceInstanceName": {
                        "description": "Name for specific instance of resource",
                        "type": "string",
                        "example": "My favorite posture configuration"
                      },
                      "resourceName": {
                        "title": "Resource Name",
                        "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                        "type": "string",
                        "readOnly": true,
                        "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "firewallPosture"
                    ],
                    "properties": {
                      "firewallPosture": {
                        "title": "FW Posture",
                        "type": "object",
                        "required": [
                          "operatingSystems"
                        ],
                        "properties": {
                          "operatingSystems": {
                            "type": "object",
                            "properties": {
                              "android": {
                                "title": "Firewall By Operating System",
                                "description": "Firewall By Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyIsFirewallEnabled"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyIsFirewallEnabled": {
                                    "title": "Verify Firewall Enabled",
                                    "description": "Verify if the firewall was enabled on the client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "apple-ios": {
                                "title": "Firewall By Operating System",
                                "description": "Firewall By Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyIsFirewallEnabled"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyIsFirewallEnabled": {
                                    "title": "Verify Firewall Enabled",
                                    "description": "Verify if the firewall was enabled on the client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "linux-64": {
                                "title": "Firewall By Operating System",
                                "description": "Firewall By Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyIsFirewallEnabled"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyIsFirewallEnabled": {
                                    "title": "Verify Firewall Enabled",
                                    "description": "Verify if the firewall was enabled on the client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "mac-intel": {
                                "title": "Firewall By Operating System",
                                "description": "Firewall By Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyIsFirewallEnabled"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyIsFirewallEnabled": {
                                    "title": "Verify Firewall Enabled",
                                    "description": "Verify if the firewall was enabled on the client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "win": {
                                "title": "Firewall By Operating System",
                                "description": "Firewall By Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyIsFirewallEnabled"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyIsFirewallEnabled": {
                                    "title": "Verify Firewall Enabled",
                                    "description": "Verify if the firewall was enabled on the client machine.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Firewall Posture Resource",
                  "description": "umbrella.endpoint.posture.firewall",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "firewallPosture"
                      ],
                      "properties": {
                        "firewallPosture": {
                          "title": "FW Posture",
                          "type": "object",
                          "required": [
                            "operatingSystems"
                          ],
                          "properties": {
                            "operatingSystems": {
                              "type": "object",
                              "properties": {
                                "android": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "apple-ios": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "linux-64": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "mac-intel": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "win": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organizations/{organizationId}/endpointPosture/firewall/{id}": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "title": "Generic Id",
            "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
            "type": "integer",
            "readOnly": true,
            "example": "2345"
          }
        }
      ],
      "get": {
        "operationId": "getFirewallPosture",
        "description": "Get an Firewall posture configuration by id.",
        "tags": [
          "Posture profile",
          "Firewall"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Firewall Posture Resource",
                  "description": "umbrella.endpoint.posture.firewall",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "firewallPosture"
                      ],
                      "properties": {
                        "firewallPosture": {
                          "title": "FW Posture",
                          "type": "object",
                          "required": [
                            "operatingSystems"
                          ],
                          "properties": {
                            "operatingSystems": {
                              "type": "object",
                              "properties": {
                                "android": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "apple-ios": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "linux-64": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "mac-intel": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "win": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "deleteFirewallPosture",
        "description": "Delete an Firewall posture configuration by id.",
        "tags": [
          "Posture profile",
          "Firewall"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Resource Model",
                      "description": "base template for Unified Policy API resources",
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          },
                          "example": [

                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "updateFirewallPosture",
        "description": "Update an Firewall posture configuration by id.",
        "tags": [
          "Posture profile",
          "Firewall"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Firewall Posture Resource",
                "description": "umbrella.endpoint.posture.firewall",
                "allOf": [
                  {
                    "title": "Resource Instance",
                    "description": "base template for single instance of a Unified Policy API resource",
                    "type": "object",
                    "required": [
                      "resourceInstanceName"
                    ],
                    "properties": {
                      "createdAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedBy": {
                        "title": "Modified By Id",
                        "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                        "type": "string",
                        "readOnly": true,
                        "example": "org/2/user/3855475"
                      },
                      "organizationId": {
                        "title": "Umbrella Org Id",
                        "description": "Unique identifier for the org.",
                        "type": "number",
                        "readOnly": true,
                        "example": 2345
                      },
                      "resourceInstanceId": {
                        "title": "Generic Id",
                        "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                        "type": "integer",
                        "readOnly": true,
                        "example": "2345"
                      },
                      "resourceInstanceName": {
                        "description": "Name for specific instance of resource",
                        "type": "string",
                        "example": "My favorite posture configuration"
                      },
                      "resourceName": {
                        "title": "Resource Name",
                        "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                        "type": "string",
                        "readOnly": true,
                        "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "firewallPosture"
                    ],
                    "properties": {
                      "firewallPosture": {
                        "title": "FW Posture",
                        "type": "object",
                        "required": [
                          "operatingSystems"
                        ],
                        "properties": {
                          "operatingSystems": {
                            "type": "object",
                            "properties": {
                              "android": {
                                "title": "Firewall By Operating System",
                                "description": "Firewall By Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyIsFirewallEnabled"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyIsFirewallEnabled": {
                                    "title": "Verify Firewall Enabled",
                                    "description": "Verify if the firewall was enabled on the client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "apple-ios": {
                                "title": "Firewall By Operating System",
                                "description": "Firewall By Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyIsFirewallEnabled"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyIsFirewallEnabled": {
                                    "title": "Verify Firewall Enabled",
                                    "description": "Verify if the firewall was enabled on the client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "linux-64": {
                                "title": "Firewall By Operating System",
                                "description": "Firewall By Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyIsFirewallEnabled"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyIsFirewallEnabled": {
                                    "title": "Verify Firewall Enabled",
                                    "description": "Verify if the firewall was enabled on the client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "mac-intel": {
                                "title": "Firewall By Operating System",
                                "description": "Firewall By Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyIsFirewallEnabled"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyIsFirewallEnabled": {
                                    "title": "Verify Firewall Enabled",
                                    "description": "Verify if the firewall was enabled on the client machine.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "win": {
                                "title": "Firewall By Operating System",
                                "description": "Firewall By Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyIsFirewallEnabled"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifyIsFirewallEnabled": {
                                    "title": "Verify Firewall Enabled",
                                    "description": "Verify if the firewall was enabled on the client machine.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Firewall Posture Resource",
                  "description": "umbrella.endpoint.posture.firewall",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "firewallPosture"
                      ],
                      "properties": {
                        "firewallPosture": {
                          "title": "FW Posture",
                          "type": "object",
                          "required": [
                            "operatingSystems"
                          ],
                          "properties": {
                            "operatingSystems": {
                              "type": "object",
                              "properties": {
                                "android": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "apple-ios": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "linux-64": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "mac-intel": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "win": {
                                  "title": "Firewall By Operating System",
                                  "description": "Firewall By Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyIsFirewallEnabled"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifyIsFirewallEnabled": {
                                      "title": "Verify Firewall Enabled",
                                      "description": "Verify if the firewall was enabled on the client machine.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organizations/{organizationId}/endpointPosture/diskEncryption": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "operationId": "getDiskEncryptionPostures",
        "description": "Get a list of disk encryption posture configurations in the organization.",
        "tags": [
          "Posture profile",
          "Disk Encryption"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Resource Model",
                      "description": "base template for Unified Policy API resources",
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Disk Encryption Posture Resource",
                            "description": "umbrella.endpoint.posture.diskencryption",
                            "allOf": [
                              {
                                "title": "Resource Instance",
                                "description": "base template for single instance of a Unified Policy API resource",
                                "type": "object",
                                "required": [
                                  "resourceInstanceName"
                                ],
                                "properties": {
                                  "createdAt": {
                                    "title": "Date/Time",
                                    "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2021-01-19T00:18:07+00:00"
                                  },
                                  "modifiedAt": {
                                    "title": "Date/Time",
                                    "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2021-01-19T00:18:07+00:00"
                                  },
                                  "modifiedBy": {
                                    "title": "Modified By Id",
                                    "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "org/2/user/3855475"
                                  },
                                  "organizationId": {
                                    "title": "Umbrella Org Id",
                                    "description": "Unique identifier for the org.",
                                    "type": "number",
                                    "readOnly": true,
                                    "example": 2345
                                  },
                                  "resourceInstanceId": {
                                    "title": "Generic Id",
                                    "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                    "type": "integer",
                                    "readOnly": true,
                                    "example": "2345"
                                  },
                                  "resourceInstanceName": {
                                    "description": "Name for specific instance of resource",
                                    "type": "string",
                                    "example": "My favorite posture configuration"
                                  },
                                  "resourceName": {
                                    "title": "Resource Name",
                                    "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "diskEncryptionPosture"
                                ],
                                "properties": {
                                  "diskEncryptionPosture": {
                                    "title": "DE Posture",
                                    "type": "object",
                                    "required": [
                                      "operatingSystems"
                                    ],
                                    "properties": {
                                      "operatingSystems": {
                                        "type": "object",
                                        "properties": {
                                          "android": {
                                            "title": "Disk Encryption By Operating System",
                                            "description": "Disk Encryption Requirements by Operating System.",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifySystemDrivesForDiskEncryption"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyExternalDrivesForDiskEncryption"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifySystemDrivesForDiskEncryption": {
                                                "title": "Verify System Drives For Disk Encryption",
                                                "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                                "type": "boolean"
                                              },
                                              "verifyExternalDrivesForDiskEncryption": {
                                                "title": "Verify External Drives For Disk Encryption",
                                                "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "apple-ios": {
                                            "title": "Disk Encryption By Operating System",
                                            "description": "Disk Encryption Requirements by Operating System.",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifySystemDrivesForDiskEncryption"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyExternalDrivesForDiskEncryption"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifySystemDrivesForDiskEncryption": {
                                                "title": "Verify System Drives For Disk Encryption",
                                                "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                                "type": "boolean"
                                              },
                                              "verifyExternalDrivesForDiskEncryption": {
                                                "title": "Verify External Drives For Disk Encryption",
                                                "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "linux-64": {
                                            "title": "Disk Encryption By Operating System",
                                            "description": "Disk Encryption Requirements by Operating System.",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifySystemDrivesForDiskEncryption"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyExternalDrivesForDiskEncryption"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifySystemDrivesForDiskEncryption": {
                                                "title": "Verify System Drives For Disk Encryption",
                                                "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                                "type": "boolean"
                                              },
                                              "verifyExternalDrivesForDiskEncryption": {
                                                "title": "Verify External Drives For Disk Encryption",
                                                "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "mac-intel": {
                                            "title": "Disk Encryption By Operating System",
                                            "description": "Disk Encryption Requirements by Operating System.",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifySystemDrivesForDiskEncryption"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyExternalDrivesForDiskEncryption"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifySystemDrivesForDiskEncryption": {
                                                "title": "Verify System Drives For Disk Encryption",
                                                "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                                "type": "boolean"
                                              },
                                              "verifyExternalDrivesForDiskEncryption": {
                                                "title": "Verify External Drives For Disk Encryption",
                                                "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                                "type": "boolean"
                                              }
                                            }
                                          },
                                          "win": {
                                            "title": "Disk Encryption By Operating System",
                                            "description": "Disk Encryption Requirements by Operating System.",
                                            "type": "object",
                                            "oneOf": [
                                              {
                                                "required": [
                                                  "productName"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "productId"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifySystemDrivesForDiskEncryption"
                                                ]
                                              },
                                              {
                                                "required": [
                                                  "verifyExternalDrivesForDiskEncryption"
                                                ]
                                              }
                                            ],
                                            "properties": {
                                              "productName": {
                                                "title": "Provider Product Name",
                                                "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                                "type": "string"
                                              },
                                              "productId": {
                                                "title": "Provider Product ID",
                                                "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                              },
                                              "verifySystemDrivesForDiskEncryption": {
                                                "title": "Verify System Drives For Disk Encryption",
                                                "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                                "type": "boolean"
                                              },
                                              "verifyExternalDrivesForDiskEncryption": {
                                                "title": "Verify External Drives For Disk Encryption",
                                                "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                                "type": "boolean"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "createDiskEncryptionPosture",
        "description": "Create a new Disk Encryption posture configuration for the organization.",
        "tags": [
          "Posture profile",
          "Disk Encryption"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Disk Encryption Posture Resource",
                "description": "umbrella.endpoint.posture.diskencryption",
                "allOf": [
                  {
                    "title": "Resource Instance",
                    "description": "base template for single instance of a Unified Policy API resource",
                    "type": "object",
                    "required": [
                      "resourceInstanceName"
                    ],
                    "properties": {
                      "createdAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedBy": {
                        "title": "Modified By Id",
                        "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                        "type": "string",
                        "readOnly": true,
                        "example": "org/2/user/3855475"
                      },
                      "organizationId": {
                        "title": "Umbrella Org Id",
                        "description": "Unique identifier for the org.",
                        "type": "number",
                        "readOnly": true,
                        "example": 2345
                      },
                      "resourceInstanceId": {
                        "title": "Generic Id",
                        "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                        "type": "integer",
                        "readOnly": true,
                        "example": "2345"
                      },
                      "resourceInstanceName": {
                        "description": "Name for specific instance of resource",
                        "type": "string",
                        "example": "My favorite posture configuration"
                      },
                      "resourceName": {
                        "title": "Resource Name",
                        "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                        "type": "string",
                        "readOnly": true,
                        "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "diskEncryptionPosture"
                    ],
                    "properties": {
                      "diskEncryptionPosture": {
                        "title": "DE Posture",
                        "type": "object",
                        "required": [
                          "operatingSystems"
                        ],
                        "properties": {
                          "operatingSystems": {
                            "type": "object",
                            "properties": {
                              "android": {
                                "title": "Disk Encryption By Operating System",
                                "description": "Disk Encryption Requirements by Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySystemDrivesForDiskEncryption"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyExternalDrivesForDiskEncryption"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifySystemDrivesForDiskEncryption": {
                                    "title": "Verify System Drives For Disk Encryption",
                                    "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  },
                                  "verifyExternalDrivesForDiskEncryption": {
                                    "title": "Verify External Drives For Disk Encryption",
                                    "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "apple-ios": {
                                "title": "Disk Encryption By Operating System",
                                "description": "Disk Encryption Requirements by Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySystemDrivesForDiskEncryption"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyExternalDrivesForDiskEncryption"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifySystemDrivesForDiskEncryption": {
                                    "title": "Verify System Drives For Disk Encryption",
                                    "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  },
                                  "verifyExternalDrivesForDiskEncryption": {
                                    "title": "Verify External Drives For Disk Encryption",
                                    "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "linux-64": {
                                "title": "Disk Encryption By Operating System",
                                "description": "Disk Encryption Requirements by Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySystemDrivesForDiskEncryption"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyExternalDrivesForDiskEncryption"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifySystemDrivesForDiskEncryption": {
                                    "title": "Verify System Drives For Disk Encryption",
                                    "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  },
                                  "verifyExternalDrivesForDiskEncryption": {
                                    "title": "Verify External Drives For Disk Encryption",
                                    "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "mac-intel": {
                                "title": "Disk Encryption By Operating System",
                                "description": "Disk Encryption Requirements by Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySystemDrivesForDiskEncryption"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyExternalDrivesForDiskEncryption"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifySystemDrivesForDiskEncryption": {
                                    "title": "Verify System Drives For Disk Encryption",
                                    "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  },
                                  "verifyExternalDrivesForDiskEncryption": {
                                    "title": "Verify External Drives For Disk Encryption",
                                    "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "win": {
                                "title": "Disk Encryption By Operating System",
                                "description": "Disk Encryption Requirements by Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySystemDrivesForDiskEncryption"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyExternalDrivesForDiskEncryption"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifySystemDrivesForDiskEncryption": {
                                    "title": "Verify System Drives For Disk Encryption",
                                    "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  },
                                  "verifyExternalDrivesForDiskEncryption": {
                                    "title": "Verify External Drives For Disk Encryption",
                                    "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Disk Encryption Posture Resource",
                  "description": "umbrella.endpoint.posture.diskencryption",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "diskEncryptionPosture"
                      ],
                      "properties": {
                        "diskEncryptionPosture": {
                          "title": "DE Posture",
                          "type": "object",
                          "required": [
                            "operatingSystems"
                          ],
                          "properties": {
                            "operatingSystems": {
                              "type": "object",
                              "properties": {
                                "android": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "apple-ios": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "linux-64": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "mac-intel": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "win": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organizations/{organizationId}/endpointPosture/diskEncryption/{id}": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "title": "Generic Id",
            "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
            "type": "integer",
            "readOnly": true,
            "example": "2345"
          }
        }
      ],
      "get": {
        "operationId": "getDiskEncryptionPosture",
        "description": "Get an Disk Encryption posture configuration by id.",
        "tags": [
          "Posture profile",
          "Disk Encryption"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Disk Encryption Posture Resource",
                  "description": "umbrella.endpoint.posture.diskencryption",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "diskEncryptionPosture"
                      ],
                      "properties": {
                        "diskEncryptionPosture": {
                          "title": "DE Posture",
                          "type": "object",
                          "required": [
                            "operatingSystems"
                          ],
                          "properties": {
                            "operatingSystems": {
                              "type": "object",
                              "properties": {
                                "android": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "apple-ios": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "linux-64": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "mac-intel": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "win": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "diskEncryptionPosture",
        "description": "Delete an Disk Encryption posture configuration by id.",
        "tags": [
          "Posture profile",
          "Disk Encryption"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Resource Model",
                      "description": "base template for Unified Policy API resources",
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          },
                          "example": [

                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "updateDiskEncryptionPosture",
        "description": "Update an Disk Encryption posture configuration by id.",
        "tags": [
          "Posture profile",
          "Disk Encryption"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Disk Encryption Posture Resource",
                "description": "umbrella.endpoint.posture.diskencryption",
                "allOf": [
                  {
                    "title": "Resource Instance",
                    "description": "base template for single instance of a Unified Policy API resource",
                    "type": "object",
                    "required": [
                      "resourceInstanceName"
                    ],
                    "properties": {
                      "createdAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedBy": {
                        "title": "Modified By Id",
                        "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                        "type": "string",
                        "readOnly": true,
                        "example": "org/2/user/3855475"
                      },
                      "organizationId": {
                        "title": "Umbrella Org Id",
                        "description": "Unique identifier for the org.",
                        "type": "number",
                        "readOnly": true,
                        "example": 2345
                      },
                      "resourceInstanceId": {
                        "title": "Generic Id",
                        "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                        "type": "integer",
                        "readOnly": true,
                        "example": "2345"
                      },
                      "resourceInstanceName": {
                        "description": "Name for specific instance of resource",
                        "type": "string",
                        "example": "My favorite posture configuration"
                      },
                      "resourceName": {
                        "title": "Resource Name",
                        "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                        "type": "string",
                        "readOnly": true,
                        "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "diskEncryptionPosture"
                    ],
                    "properties": {
                      "diskEncryptionPosture": {
                        "title": "DE Posture",
                        "type": "object",
                        "required": [
                          "operatingSystems"
                        ],
                        "properties": {
                          "operatingSystems": {
                            "type": "object",
                            "properties": {
                              "android": {
                                "title": "Disk Encryption By Operating System",
                                "description": "Disk Encryption Requirements by Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySystemDrivesForDiskEncryption"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyExternalDrivesForDiskEncryption"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifySystemDrivesForDiskEncryption": {
                                    "title": "Verify System Drives For Disk Encryption",
                                    "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  },
                                  "verifyExternalDrivesForDiskEncryption": {
                                    "title": "Verify External Drives For Disk Encryption",
                                    "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "apple-ios": {
                                "title": "Disk Encryption By Operating System",
                                "description": "Disk Encryption Requirements by Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySystemDrivesForDiskEncryption"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyExternalDrivesForDiskEncryption"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifySystemDrivesForDiskEncryption": {
                                    "title": "Verify System Drives For Disk Encryption",
                                    "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  },
                                  "verifyExternalDrivesForDiskEncryption": {
                                    "title": "Verify External Drives For Disk Encryption",
                                    "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "linux-64": {
                                "title": "Disk Encryption By Operating System",
                                "description": "Disk Encryption Requirements by Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySystemDrivesForDiskEncryption"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyExternalDrivesForDiskEncryption"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifySystemDrivesForDiskEncryption": {
                                    "title": "Verify System Drives For Disk Encryption",
                                    "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  },
                                  "verifyExternalDrivesForDiskEncryption": {
                                    "title": "Verify External Drives For Disk Encryption",
                                    "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "mac-intel": {
                                "title": "Disk Encryption By Operating System",
                                "description": "Disk Encryption Requirements by Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySystemDrivesForDiskEncryption"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyExternalDrivesForDiskEncryption"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifySystemDrivesForDiskEncryption": {
                                    "title": "Verify System Drives For Disk Encryption",
                                    "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  },
                                  "verifyExternalDrivesForDiskEncryption": {
                                    "title": "Verify External Drives For Disk Encryption",
                                    "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  }
                                }
                              },
                              "win": {
                                "title": "Disk Encryption By Operating System",
                                "description": "Disk Encryption Requirements by Operating System.",
                                "type": "object",
                                "oneOf": [
                                  {
                                    "required": [
                                      "productName"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "productId"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifySystemDrivesForDiskEncryption"
                                    ]
                                  },
                                  {
                                    "required": [
                                      "verifyExternalDrivesForDiskEncryption"
                                    ]
                                  }
                                ],
                                "properties": {
                                  "productName": {
                                    "title": "Provider Product Name",
                                    "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                    "type": "string"
                                  },
                                  "productId": {
                                    "title": "Provider Product ID",
                                    "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                  },
                                  "verifySystemDrivesForDiskEncryption": {
                                    "title": "Verify System Drives For Disk Encryption",
                                    "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  },
                                  "verifyExternalDrivesForDiskEncryption": {
                                    "title": "Verify External Drives For Disk Encryption",
                                    "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Disk Encryption Posture Resource",
                  "description": "umbrella.endpoint.posture.diskencryption",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "diskEncryptionPosture"
                      ],
                      "properties": {
                        "diskEncryptionPosture": {
                          "title": "DE Posture",
                          "type": "object",
                          "required": [
                            "operatingSystems"
                          ],
                          "properties": {
                            "operatingSystems": {
                              "type": "object",
                              "properties": {
                                "android": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "apple-ios": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "linux-64": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "mac-intel": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "win": {
                                  "title": "Disk Encryption By Operating System",
                                  "description": "Disk Encryption Requirements by Operating System.",
                                  "type": "object",
                                  "oneOf": [
                                    {
                                      "required": [
                                        "productName"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "productId"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifySystemDrivesForDiskEncryption"
                                      ]
                                    },
                                    {
                                      "required": [
                                        "verifyExternalDrivesForDiskEncryption"
                                      ]
                                    }
                                  ],
                                  "properties": {
                                    "productName": {
                                      "title": "Provider Product Name",
                                      "description": "Name of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API.",
                                      "type": "string"
                                    },
                                    "productId": {
                                      "title": "Provider Product ID",
                                      "description": "Product ID of the Anti-Malware/Firewall/Disk Encryption provider for an operating system that come form Catalog API."
                                    },
                                    "verifySystemDrivesForDiskEncryption": {
                                      "title": "Verify System Drives For Disk Encryption",
                                      "description": "Verify if the system drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    },
                                    "verifyExternalDrivesForDiskEncryption": {
                                      "title": "Verify External Drives For Disk Encryption",
                                      "description": "Verify if the external drives on the client machine are enabled to perform disk encryption.",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organizations/{organizationId}/endpointPosture/profile": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "operationId": "getPostureProfiles",
        "description": "Get a list of posture profiles in the organization.",
        "tags": [
          "Posture profile",
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Resource Model",
                      "description": "base template for Unified Policy API resources",
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Posture Profile Resource",
                            "description": "umbrella.endpoint.posture.profile",
                            "allOf": [
                              {
                                "title": "Resource Instance",
                                "description": "base template for single instance of a Unified Policy API resource",
                                "type": "object",
                                "required": [
                                  "resourceInstanceName"
                                ],
                                "properties": {
                                  "createdAt": {
                                    "title": "Date/Time",
                                    "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2021-01-19T00:18:07+00:00"
                                  },
                                  "modifiedAt": {
                                    "title": "Date/Time",
                                    "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                    "type": "string",
                                    "format": "date-time",
                                    "readOnly": true,
                                    "example": "2021-01-19T00:18:07+00:00"
                                  },
                                  "modifiedBy": {
                                    "title": "Modified By Id",
                                    "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "org/2/user/3855475"
                                  },
                                  "organizationId": {
                                    "title": "Umbrella Org Id",
                                    "description": "Unique identifier for the org.",
                                    "type": "number",
                                    "readOnly": true,
                                    "example": 2345
                                  },
                                  "resourceInstanceId": {
                                    "title": "Generic Id",
                                    "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                    "type": "integer",
                                    "readOnly": true,
                                    "example": "2345"
                                  },
                                  "resourceInstanceName": {
                                    "description": "Name for specific instance of resource",
                                    "type": "string",
                                    "example": "My favorite posture configuration"
                                  },
                                  "resourceName": {
                                    "title": "Resource Name",
                                    "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                    "type": "string",
                                    "readOnly": true,
                                    "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "required": [
                                  "postureProfile"
                                ],
                                "properties": {
                                  "postureProfile": {
                                    "title": "Posture Profile",
                                    "type": "object",
                                    "minProperties": 1,
                                    "properties": {
                                      "browserPostureInstanceId": {
                                        "type": "integer",
                                        "description": "ID of umbrella.endpoint.posture.browser instance"
                                      },
                                      "geolocationPostureInstanceId": {
                                        "type": "integer",
                                        "description": "ID of umbrella.endpoint.posture.geolocation instance"
                                      },
                                      "osPostureInstanceId": {
                                        "type": "integer",
                                        "description": "ID of umbrella.endpoint.posture.os instance"
                                      },
                                      "antiMalwarePostureInstanceId": {
                                        "type": "integer",
                                        "description": "ID of umbrella.endpoint.posture.antimalware instance"
                                      },
                                      "firewallPostureInstanceId": {
                                        "type": "integer",
                                        "description": "ID of umbrella.endpoint.posture.firewall instance"
                                      },
                                      "diskEncryptionPostureInstanceId": {
                                        "type": "integer",
                                        "description": "ID of umbrella.endpoint.posture.diskencryption instance"
                                      },
                                      "certPolicyInstanceId": {
                                        "type": "integer",
                                        "description": "ID of umbrella.latitude.certificate_policy instance"
                                      },
                                      "services": {
                                        "description": "List of services using this profile",
                                        "type": "array",
                                        "items": {
                                          "type": "string"
                                        },
                                        "uniqueItems": true,
                                        "example": [
                                          "latitude"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "operationId": "createPostureProfile",
        "description": "Create a new posture profile for use in policy.",
        "tags": [
          "Posture profile",
          "Profile"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Posture Profile Resource",
                "description": "umbrella.endpoint.posture.profile",
                "allOf": [
                  {
                    "title": "Resource Instance",
                    "description": "base template for single instance of a Unified Policy API resource",
                    "type": "object",
                    "required": [
                      "resourceInstanceName"
                    ],
                    "properties": {
                      "createdAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedBy": {
                        "title": "Modified By Id",
                        "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                        "type": "string",
                        "readOnly": true,
                        "example": "org/2/user/3855475"
                      },
                      "organizationId": {
                        "title": "Umbrella Org Id",
                        "description": "Unique identifier for the org.",
                        "type": "number",
                        "readOnly": true,
                        "example": 2345
                      },
                      "resourceInstanceId": {
                        "title": "Generic Id",
                        "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                        "type": "integer",
                        "readOnly": true,
                        "example": "2345"
                      },
                      "resourceInstanceName": {
                        "description": "Name for specific instance of resource",
                        "type": "string",
                        "example": "My favorite posture configuration"
                      },
                      "resourceName": {
                        "title": "Resource Name",
                        "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                        "type": "string",
                        "readOnly": true,
                        "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "postureProfile"
                    ],
                    "properties": {
                      "postureProfile": {
                        "title": "Posture Profile",
                        "type": "object",
                        "minProperties": 1,
                        "properties": {
                          "browserPostureInstanceId": {
                            "type": "integer",
                            "description": "ID of umbrella.endpoint.posture.browser instance"
                          },
                          "geolocationPostureInstanceId": {
                            "type": "integer",
                            "description": "ID of umbrella.endpoint.posture.geolocation instance"
                          },
                          "osPostureInstanceId": {
                            "type": "integer",
                            "description": "ID of umbrella.endpoint.posture.os instance"
                          },
                          "antiMalwarePostureInstanceId": {
                            "type": "integer",
                            "description": "ID of umbrella.endpoint.posture.antimalware instance"
                          },
                          "firewallPostureInstanceId": {
                            "type": "integer",
                            "description": "ID of umbrella.endpoint.posture.firewall instance"
                          },
                          "diskEncryptionPostureInstanceId": {
                            "type": "integer",
                            "description": "ID of umbrella.endpoint.posture.diskencryption instance"
                          },
                          "certPolicyInstanceId": {
                            "type": "integer",
                            "description": "ID of umbrella.latitude.certificate_policy instance"
                          },
                          "services": {
                            "description": "List of services using this profile",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "uniqueItems": true,
                            "example": [
                              "latitude"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Posture Profile Resource",
                  "description": "umbrella.endpoint.posture.profile",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "postureProfile"
                      ],
                      "properties": {
                        "postureProfile": {
                          "title": "Posture Profile",
                          "type": "object",
                          "minProperties": 1,
                          "properties": {
                            "browserPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.browser instance"
                            },
                            "geolocationPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.geolocation instance"
                            },
                            "osPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.os instance"
                            },
                            "antiMalwarePostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.antimalware instance"
                            },
                            "firewallPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.firewall instance"
                            },
                            "diskEncryptionPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.diskencryption instance"
                            },
                            "certPolicyInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.latitude.certificate_policy instance"
                            },
                            "services": {
                              "description": "List of services using this profile",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "uniqueItems": true,
                              "example": [
                                "latitude"
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organizations/{organizationId}/endpointPosture/profile/{id}": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "title": "Generic Id",
            "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
            "type": "integer",
            "readOnly": true,
            "example": "2345"
          }
        }
      ],
      "get": {
        "operationId": "getPostureProfile",
        "description": "Get a posture profile by id.",
        "tags": [
          "Posture profile",
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Posture Profile Resource",
                  "description": "umbrella.endpoint.posture.profile",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "postureProfile"
                      ],
                      "properties": {
                        "postureProfile": {
                          "title": "Posture Profile",
                          "type": "object",
                          "minProperties": 1,
                          "properties": {
                            "browserPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.browser instance"
                            },
                            "geolocationPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.geolocation instance"
                            },
                            "osPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.os instance"
                            },
                            "antiMalwarePostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.antimalware instance"
                            },
                            "firewallPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.firewall instance"
                            },
                            "diskEncryptionPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.diskencryption instance"
                            },
                            "certPolicyInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.latitude.certificate_policy instance"
                            },
                            "services": {
                              "description": "List of services using this profile",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "uniqueItems": true,
                              "example": [
                                "latitude"
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "operationId": "deletePostureProfile",
        "tags": [
          "Posture profile",
          "Profile"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "title": "Resource Model",
                      "description": "base template for Unified Policy API resources",
                      "type": "object",
                      "properties": {
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        },
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          }
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "resources": {
                          "type": "array",
                          "items": {
                            "title": "Resource Instance",
                            "description": "base template for single instance of a Unified Policy API resource",
                            "type": "object",
                            "required": [
                              "resourceInstanceName"
                            ],
                            "properties": {
                              "createdAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedAt": {
                                "title": "Date/Time",
                                "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true,
                                "example": "2021-01-19T00:18:07+00:00"
                              },
                              "modifiedBy": {
                                "title": "Modified By Id",
                                "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                                "type": "string",
                                "readOnly": true,
                                "example": "org/2/user/3855475"
                              },
                              "organizationId": {
                                "title": "Umbrella Org Id",
                                "description": "Unique identifier for the org.",
                                "type": "number",
                                "readOnly": true,
                                "example": 2345
                              },
                              "resourceInstanceId": {
                                "title": "Generic Id",
                                "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                                "type": "integer",
                                "readOnly": true,
                                "example": "2345"
                              },
                              "resourceInstanceName": {
                                "description": "Name for specific instance of resource",
                                "type": "string",
                                "example": "My favorite posture configuration"
                              },
                              "resourceName": {
                                "title": "Resource Name",
                                "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                                "type": "string",
                                "readOnly": true,
                                "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                              }
                            }
                          },
                          "example": [

                          ]
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "operationId": "updatePostureProfile",
        "description": "Update a posture profile by id.",
        "tags": [
          "Posture profile",
          "Profile"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "title": "Posture Profile Resource",
                "description": "umbrella.endpoint.posture.profile",
                "allOf": [
                  {
                    "title": "Resource Instance",
                    "description": "base template for single instance of a Unified Policy API resource",
                    "type": "object",
                    "required": [
                      "resourceInstanceName"
                    ],
                    "properties": {
                      "createdAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedAt": {
                        "title": "Date/Time",
                        "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "example": "2021-01-19T00:18:07+00:00"
                      },
                      "modifiedBy": {
                        "title": "Modified By Id",
                        "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                        "type": "string",
                        "readOnly": true,
                        "example": "org/2/user/3855475"
                      },
                      "organizationId": {
                        "title": "Umbrella Org Id",
                        "description": "Unique identifier for the org.",
                        "type": "number",
                        "readOnly": true,
                        "example": 2345
                      },
                      "resourceInstanceId": {
                        "title": "Generic Id",
                        "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                        "type": "integer",
                        "readOnly": true,
                        "example": "2345"
                      },
                      "resourceInstanceName": {
                        "description": "Name for specific instance of resource",
                        "type": "string",
                        "example": "My favorite posture configuration"
                      },
                      "resourceName": {
                        "title": "Resource Name",
                        "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                        "type": "string",
                        "readOnly": true,
                        "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                      }
                    }
                  },
                  {
                    "type": "object",
                    "required": [
                      "postureProfile"
                    ],
                    "properties": {
                      "postureProfile": {
                        "title": "Posture Profile",
                        "type": "object",
                        "minProperties": 1,
                        "properties": {
                          "browserPostureInstanceId": {
                            "type": "integer",
                            "description": "ID of umbrella.endpoint.posture.browser instance"
                          },
                          "geolocationPostureInstanceId": {
                            "type": "integer",
                            "description": "ID of umbrella.endpoint.posture.geolocation instance"
                          },
                          "osPostureInstanceId": {
                            "type": "integer",
                            "description": "ID of umbrella.endpoint.posture.os instance"
                          },
                          "antiMalwarePostureInstanceId": {
                            "type": "integer",
                            "description": "ID of umbrella.endpoint.posture.antimalware instance"
                          },
                          "firewallPostureInstanceId": {
                            "type": "integer",
                            "description": "ID of umbrella.endpoint.posture.firewall instance"
                          },
                          "diskEncryptionPostureInstanceId": {
                            "type": "integer",
                            "description": "ID of umbrella.endpoint.posture.diskencryption instance"
                          },
                          "certPolicyInstanceId": {
                            "type": "integer",
                            "description": "ID of umbrella.latitude.certificate_policy instance"
                          },
                          "services": {
                            "description": "List of services using this profile",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "uniqueItems": true,
                            "example": [
                              "latitude"
                            ]
                          }
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Posture Profile Resource",
                  "description": "umbrella.endpoint.posture.profile",
                  "allOf": [
                    {
                      "title": "Resource Instance",
                      "description": "base template for single instance of a Unified Policy API resource",
                      "type": "object",
                      "required": [
                        "resourceInstanceName"
                      ],
                      "properties": {
                        "createdAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedAt": {
                          "title": "Date/Time",
                          "description": "datetime string with format YYYY-MM-DDTHH:MM:SS+timezone",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true,
                          "example": "2021-01-19T00:18:07+00:00"
                        },
                        "modifiedBy": {
                          "title": "Modified By Id",
                          "description": "encoding of the user who changed something with format org/organizationId/user/USERID",
                          "type": "string",
                          "readOnly": true,
                          "example": "org/2/user/3855475"
                        },
                        "organizationId": {
                          "title": "Umbrella Org Id",
                          "description": "Unique identifier for the org.",
                          "type": "number",
                          "readOnly": true,
                          "example": 2345
                        },
                        "resourceInstanceId": {
                          "title": "Generic Id",
                          "description": "Unique identifier for the resource. Auto-incrementing MySQL key",
                          "type": "integer",
                          "readOnly": true,
                          "example": "2345"
                        },
                        "resourceInstanceName": {
                          "description": "Name for specific instance of resource",
                          "type": "string",
                          "example": "My favorite posture configuration"
                        },
                        "resourceName": {
                          "title": "Resource Name",
                          "description": "Resource Name which determines endpoint and Brain resources. This has the same name as the path, i.e., umbrella.endpoint.posture.os",
                          "type": "string",
                          "readOnly": true,
                          "example": "umbrella.optional_namespace.optional_subnamespace.resource_name"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "required": [
                        "postureProfile"
                      ],
                      "properties": {
                        "postureProfile": {
                          "title": "Posture Profile",
                          "type": "object",
                          "minProperties": 1,
                          "properties": {
                            "browserPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.browser instance"
                            },
                            "geolocationPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.geolocation instance"
                            },
                            "osPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.os instance"
                            },
                            "antiMalwarePostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.antimalware instance"
                            },
                            "firewallPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.firewall instance"
                            },
                            "diskEncryptionPostureInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.endpoint.posture.diskencryption instance"
                            },
                            "certPolicyInstanceId": {
                              "type": "integer",
                              "description": "ID of umbrella.latitude.certificate_policy instance"
                            },
                            "services": {
                              "description": "List of services using this profile",
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "uniqueItems": true,
                              "example": [
                                "latitude"
                              ]
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/organizations/{organizationId}/policy/rulesets": {
      "x-apigw-path": "/rulesets",
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "get rulesets for a organization",
        "description": "Get multiple rulesets for a given organization.\nIt's possible to filter by `attribute_name`, `attribute_value` and `offset`.\nThere are global limits for the number of rulesets to should be returned for each organization,\ntherefore this endpoint won't return all organization's rulesets.\n",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Apix_integrated_policy_apis_v1"
        ]
      },
      "post": {
        "summary": "create a ruleset for an organization",
        "description": "Takes ruleset as json in a POST request and saves it to db.\nAny primary ids in payload (ruleset_id, rule_id etc) are ignored and new ones are generated.\nOnce created, it returns the ruleset by reading it back from db.\n",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Apix_integrated_policy_apis_v1"
        ]
      }
    },
    "/organizations/{organizationId}/policy/rulesets/{rulesetId}": {
      "x-apigw-path": "/rulesets/{rulesetId}",
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "rulesetId",
          "in": "path",
          "description": "Umbrella Ruleset ID",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "Get a specific ruleset for a given organization id.",
        "description": "Get a specific ruleset for a given organization id.",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Apix_integrated_policy_apis_v1"
        ]
      },
      "delete": {
        "summary": "Delete ruleset and all rules associated to it.",
        "description": "Delete ruleset and all rules associated to it.",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Apix_integrated_policy_apis_v1"
        ]
      }
    },
    "/organizations/{organizationId}/policy/rulesets/{rulesetId}/rules": {
      "x-apigw-path": "/rulesets/{rulesetId}/rules",
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "rulesetId",
          "in": "path",
          "description": "Umbrella Ruleset ID",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "post": {
        "summary": "create a rule with in ruleset for an organization",
        "description": "create a rule with in ruleset for an organization",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Apix_integrated_policy_apis_v1"
        ]
      }
    },
    "/organizations/{organizationId}/policy/rulesets/{rulesetId}/rules/{ruleId}": {
      "x-apigw-path": "/rulesets/{rulesetId}/rules/{ruleId}",
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "rulesetId",
          "in": "path",
          "description": "Umbrella Ruleset ID",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "ruleId",
          "in": "path",
          "description": "Umbrella Rule ID",
          "required": true,
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "summary": "get a single rule",
        "description": "get a single rule",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Apix_integrated_policy_apis_v1"
        ]
      },
      "delete": {
        "summary": "delete a rule",
        "description": "delete a rule",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Apix_integrated_policy_apis_v1"
        ]
      }
    },
    "/organizations/{organizationId}/policy/rulesets/byType/{rulesetType}": {
      "x-apigw-path": "/rulesets/type/{rulesetType}",
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "rulesetType",
          "in": "path",
          "description": "Umbrella ruleset type",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get the rulesets based on type.",
        "description": "Get multiple rulesets for a given organization for a given ruleset type.\nIt's possible to filter by `attribute_name`, `attribute_value` and `offset`.\nThere are global limits for the number of rulesets to should be returned for each organization,\ntherefore this endpoint won't return all organization's rulesets.\n",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "tags": [
          "Apix_integrated_policy_apis_v1"
        ]
      }
    },
    "/organizations/{organizationId}/vpnaas/datacenters": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "orgId",
          "in": "path",
          "required": true,
          "schema": {
          }
        }
      ],
      "get": {
        "tags": [
          "Openapi",
          "Multi-DC"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "datacenter": {
                        "type": "string"
                      },
                      "humanReadableName": {
                        "type": "string"
                      },
                      "region": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "datacenter": "pao1",
                      "humanReadableName": "Palo Alto, CA",
                      "region": "northAmerica"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/vpnaas/vpntunnels": {
      "get": {
        "tags": [
          "Openapi",
          "VPN Tunnels"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Openapi",
          "VPN Tunnels"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "orgId",
          "in": "path",
          "required": true,
          "schema": {
          }
        }
      ]
    },
    "/organizations/{organizationId}/vpnaas/vpntunnels/{recordKey}": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "orgId",
          "in": "path",
          "required": true,
          "schema": {
          }
        },
        {
          "name": "recordKey",
          "in": "path",
          "required": true,
          "schema": {
          }
        }
      ],
      "get": {
        "tags": [
          "Openapi",
          "VPN Tunnels"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Openapi",
          "VPN Tunnels"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/vpnaas/users": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "orgId",
          "in": "path",
          "required": true,
          "schema": {
          }
        }
      ],
      "get": {
        "tags": [
          "Openapi",
          "Users"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "anyconnectType": {
                        "type": "string"
                      },
                      "anyconnectVersion": {
                        "type": "string"
                      },
                      "clientOs": {
                        "type": "string"
                      },
                      "osVersion": {
                        "type": "string"
                      },
                      "privateIp": {
                        "type": "string"
                      },
                      "publicIp": {
                        "type": "string"
                      },
                      "userName": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "userName": "bob",
                      "clientOs": "apple-ios",
                      "osVersion": "13.3.1",
                      "anyconnectType": "4.8.02050",
                      "anyconnectVersion": "4.8.02050",
                      "publicIp": "173.183.80.189",
                      "privateIp": "10.10.2.2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/vpnaas/regions": {
      "parameters": [
        {
          "name": "organizationId",
          "in": "path",
          "description": "Organization ID associated with this resource.",
          "required": true,
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "orgId",
          "in": "path",
          "required": true,
          "schema": {
          }
        }
      ],
      "get": {
        "tags": [
          "Openapi",
          "Multi-DC"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "humanReadableName": {
                        "type": "string"
                      },
                      "locations": {
                        "type": "string"
                      },
                      "region": {
                        "type": "string"
                      }
                    },
                    "example": {
                      "humanReadableName": "North America",
                      "locations": "Palo Alto, New York, Los Angeles, Ashburn",
                      "region": "northAmerica"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "error": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "success": false,
                    "error": "some error message"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "meraki_api_key": {
        "type": "apiKey",
        "name": "X-Cisco-Meraki-API-Key",
        "in": "header"
      },
      "bearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Reports"
    },
    {
      "name": "Activity"
    },
    {
      "name": "Top Categories"
    },
    {
      "name": "Organization Requests by Timerange and Category"
    },
    {
      "name": "Total Requests"
    },
    {
      "name": "Summary"
    },
    {
      "name": "Remote Access"
    },
    {
      "name": "Deployments"
    },
    {
      "name": "Data Center"
    },
    {
      "name": "Network Devices"
    },
    {
      "name": "Organization Tunnel"
    },
    {
      "name": "Posture profile"
    },
    {
      "name": "Browser"
    },
    {
      "name": "Geolocation"
    },
    {
      "name": "Operating System"
    },
    {
      "name": "Anti-Malware"
    },
    {
      "name": "Firewall"
    },
    {
      "name": "Disk Encryption"
    },
    {
      "name": "Profile"
    },
    {
      "name": "Apix_integrated_policy_apis_v1"
    },
    {
      "name": "Openapi"
    },
    {
      "name": "Multi-DC"
    },
    {
      "name": "VPN Tunnels"
    },
    {
      "name": "Users"
    }
  ],
  "servers": [
    {
      "url": "https://api.meraki.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "api/secureConnect/v1"
        }
      }
    }
  ],
  "security": [
    {
      "meraki_api_key": [

      ]
    },
    {
      "bearerAuth": [

      ]
    }
  ]
}