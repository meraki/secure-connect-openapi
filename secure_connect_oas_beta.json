{
  "openapi": "3.0.0",
  "info": {
    "title": "Meraki Integrated API for Secure Connect",
    "description": "The Cisco Meraki Integrated API for Secure Connect is a modern REST API based on the OpenAPI specification.\n  ---\n\n  [API Documentation](https://meraki.io/api)\n\n  [Meraki Homepage](https://www.meraki.com)\n",
    "version": "1.0.0",
    "contact": {
      "name": "Meraki Developer Community",
      "url": "https://meraki.io/community"
    }
  },
  "paths": {
    "/organizations/{organizationId}/reports/activity": {
      "get": {
        "tags": [
          "Reports",
          "Activity"
        ],
        "summary": "Get Activities (all)",
        "description": "List all activities (dns/proxy/firewall/intrusion) within the timeframe.\nNote: The IP activity report is not available.",
        "operationId": "getActivities",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "A number that represents an index into the collection.",
            "schema": {
              "type": "number"
            },
            "example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return from the collection.",
            "required": true,
            "schema": {
              "type": "number"
            },
            "example": 100
          },
          {
            "name": "domains",
            "in": "query",
            "description": "A domain name or comma-delimited list of domain name.",
            "schema": {
              "type": "string"
            },
            "example": "cisco.com,nasa.gov"
          },
          {
            "name": "urls",
            "in": "query",
            "description": "A URL or comma-delimited list of URL.",
            "schema": {
              "type": "string"
            },
            "example": "https://google.com,facebook.com/help"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.",
            "schema": {
              "type": "string"
            },
            "example": "148,151,66"
          },
          {
            "name": "policycategories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.\nFilter request by the categories that trigger a policy.",
            "schema": {
              "type": "string"
            },
            "example": "67,69"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "ports",
            "in": "query",
            "description": "A port number or comma-delimited list of port number.",
            "schema": {
              "type": "string"
            },
            "example": "7351,80"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "An application ID.",
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "verdict",
            "in": "query",
            "description": "A verdict string or comma-delimited list of verdict string.",
            "schema": {
              "type": "string"
            },
            "example": "allowed,blocked,proxied"
          },
          {
            "name": "ruleid",
            "in": "query",
            "description": "A firewall policy rule ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "filename",
            "in": "query",
            "description": "A string that identifies a filename. Filter request by the filename.\nSupports globbing or use of the wildcard character ('*'). The asterisk (*) matches\nzero or more occurrences of any character.",
            "schema": {
              "type": "string"
            },
            "example": "myfilename_*"
          },
          {
            "name": "securityoverridden",
            "in": "query",
            "description": "Specify whether to filter on requests that override security.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "A proxy bundle ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "threats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threattypes",
            "in": "query",
            "description": "A threat type or comma-delimited list of threat type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ampdisposition",
            "in": "query",
            "description": "An AMP disposition string or a comma-delimited list of AMP disposition string.",
            "schema": {
              "type": "string"
            },
            "example": "clean,malicious,unknown"
          },
          {
            "name": "antivirusthreats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            },
            "example": "Trojan.Linux.Generic.144075"
          },
          {
            "name": "x-traffic-type",
            "in": "header",
            "description": "A string or comma-delimited list of string that describes the type of traffic. Valid values are:\ndns, proxy, firewall, or ip. If the header is not set, the default value is 'all'.",
            "schema": {
              "type": "string"
            },
            "example": "dns,proxy,firewall,ip"
          },
          {
            "name": "isolatedstate",
            "in": "query",
            "description": "A string that describes the remote browser isolation\n(RBI) isolation type (for example: 'isolated' or 'not-isolated').",
            "schema": {
              "type": "string",
              "enum": [
                "isolated",
                "not-isolated"
              ]
            },
            "example": "isolated"
          },
          {
            "name": "isolatedFileAction",
            "in": "query",
            "description": "A string that describes the remote browser isolation (RBI) file action type\n(for example: 'viewed', 'downloaded-original-file', or 'downloaded-safe-pdf').",
            "schema": {
              "type": "string",
              "enum": [
                "viewed",
                "downloaded-original-file",
                "downloaded-safe-pdf"
              ]
            },
            "example": "downloaded-safe-pdf"
          },
          {
            "name": "datalosspreventionstate",
            "in": "query",
            "description": "A string that describes the status of a destination (for example: 'blocked').\nFilter data for requests that were blocked to protect data.",
            "schema": {
              "type": "string"
            },
            "example": "blocked"
          },
          {
            "name": "filternoisydomains",
            "in": "query",
            "description": "filter out domains that generate a lot of insignificant traffic (noise).",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "httperrors",
            "in": "query",
            "description": "Filter data for requests that resulted in a TLS error or a certificate error.\nValid values: 'certificateerror' or 'tlserror'.",
            "schema": {
              "type": "string",
              "enum": [
                "certificateerror",
                "tlserror"
              ]
            },
            "example": "certificateerror"
          },
          {
            "name": "exists",
            "in": "query",
            "description": "Specify a comma-separated list of attributes to filter the data. Valid values are: categories, policycategories, applicationid,\nnbarapplicationid, nbarapplicationtypeids, privateapplicationid, applicationgroupids, sha256, filename, threats, threattypes,\nantivirusthreats, destinationlistids, httperrors.",
            "schema": {
              "type": "string"
            },
            "example": "destinationlistids,threattypes"
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "Display the timestamp of the traffic events in the specified timezone.\nFor the timezone, provide a continent and city separated by an url-encoded forward slash ('/'), for example: timezone='ASIA%2fCALCUTTA'.",
            "schema": {
              "type": "string"
            },
            "example": "ASIA%2fCALCUTTA"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "anyOf": [
                          {
                            "type": "object",
                            "description": "The information about the DNS activity.",
                            "properties": {
                              "externalip": {
                                "type": "string",
                                "description": "external IP for entry"
                              },
                              "internalip": {
                                "type": "string",
                                "description": "internal IP for entry"
                              },
                              "policycategories": {
                                "type": "array",
                                "description": "array of policy categories",
                                "items": {
                                  "type": "object",
                                  "description": "The category object",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the category"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "the human readable label of the category"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "the type of category"
                                    },
                                    "integration": {
                                      "type": "boolean",
                                      "description": "if the category is an integration"
                                    },
                                    "deprecated": {
                                      "type": "boolean",
                                      "description": "if the category is a legacy category"
                                    }
                                  }
                                }
                              },
                              "categories": {
                                "type": "array",
                                "description": "array of categories",
                                "items": {
                                  "type": "object",
                                  "description": "The category object",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the category"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "the human readable label of the category"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "the type of category"
                                    },
                                    "integration": {
                                      "type": "boolean",
                                      "description": "if the category is an integration"
                                    },
                                    "deprecated": {
                                      "type": "boolean",
                                      "description": "if the category is a legacy category"
                                    }
                                  }
                                }
                              },
                              "verdict": {
                                "type": "string",
                                "description": "verdict for entry"
                              },
                              "domain": {
                                "type": "string",
                                "description": "domain for entry"
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "The timestamp represented in millseconds",
                                "example": 1594557263000
                              },
                              "identities": {
                                "type": "array",
                                "description": "array of identities for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the identity",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the identity"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label for the identity"
                                    },
                                    "type": {
                                      "type": "object",
                                      "description": "The information about the identity including the type",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "The ID of the origin type for the identity"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label of the origin type for the identity"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The name of the origin type for the identity"
                                        }
                                      }
                                    },
                                    "deleted": {
                                      "type": "boolean",
                                      "description": "Indicates whether the identity was deleted or not"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "label",
                                    "type",
                                    "deleted"
                                  ],
                                  "example": {
                                    "id": 1,
                                    "label": "Catch Rate Testing System",
                                    "type": {
                                      "id": 21,
                                      "label": "Sites",
                                      "type": "site"
                                    },
                                    "deleted": false
                                  }
                                }
                              },
                              "allapplications": {
                                "type": "array",
                                "description": "array of applications for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the application",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "id of the application"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "label of the application"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "type of the application, NBAR or AVC"
                                    },
                                    "category": {
                                      "type": "object",
                                      "description": "the category of the application",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "id of the application category"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "label of the application category"
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "id": 1,
                                    "label": "malware",
                                    "type": "avc",
                                    "category": {
                                      "id": 2,
                                      "label": "Education"
                                    }
                                  }
                                }
                              },
                              "threats": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the threat",
                                  "properties": {
                                    "label": {
                                      "type": "string",
                                      "description": "the threat name or label"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "the type of threat"
                                    }
                                  }
                                },
                                "description": "array of threats for entry"
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the request. A DNS request always has the type dns."
                              },
                              "querytype": {
                                "type": "string",
                                "description": "The type of DNS request that was made. For more information,\nsee Common DNS Request Types."
                              },
                              "date": {
                                "type": "string",
                                "description": "The date from the timestamp based on the timezone parameter",
                                "example": "2020-07-12"
                              },
                              "time": {
                                "type": "string",
                                "description": "The time in 24 hour format based on the timezone parameter",
                                "example": "12:34"
                              },
                              "returncode": {
                                "type": "number",
                                "description": "The DNS return code for this request.\nFor more information, see Common DNS return codes for any\nDNS service (and Umbrella)."
                              },
                              "allowedapplications": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the application",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "id of the application"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "label of the application"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "type of the application, NBAR or AVC"
                                    },
                                    "category": {
                                      "type": "object",
                                      "description": "the category of the application",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "id of the application category"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "label of the application category"
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "id": 1,
                                    "label": "malware",
                                    "type": "avc",
                                    "category": {
                                      "id": 2,
                                      "label": "Education"
                                    }
                                  }
                                }
                              },
                              "blockedapplications": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the application",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "id of the application"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "label of the application"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "type of the application, NBAR or AVC"
                                    },
                                    "category": {
                                      "type": "object",
                                      "description": "the category of the application",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "id of the application category"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "label of the application category"
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "id": 1,
                                    "label": "malware",
                                    "type": "avc",
                                    "category": {
                                      "id": 2,
                                      "label": "Education"
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "allapplications",
                              "allowedapplications",
                              "blockedapplications",
                              "categories",
                              "date",
                              "domain",
                              "externalip",
                              "identities",
                              "internalip",
                              "policycategories",
                              "querytype",
                              "returncode",
                              "threats",
                              "time",
                              "timestamp",
                              "type",
                              "verdict"
                            ],
                            "example": {
                              "externalip": "52.8.160.247",
                              "internalip": "52.8.160.247",
                              "policycategories": [
                                {
                                  "id": 66,
                                  "label": "Malware",
                                  "type": "security",
                                  "integration": true
                                }
                              ],
                              "categories": [
                                {
                                  "id": 66,
                                  "label": "Malware",
                                  "type": "security",
                                  "integration": true
                                }
                              ],
                              "verdict": "allowed",
                              "domain": "google.com",
                              "timestamp": 1548311506,
                              "time": "06:31:46",
                              "date": "2019-01-24",
                              "identities": [
                                {
                                  "id": 1,
                                  "label": "Catch Rate Testing System",
                                  "type": {
                                    "id": 21,
                                    "label": "Sites",
                                    "type": "site"
                                  },
                                  "deleted": true
                                }
                              ],
                              "threats": [
                                {
                                  "label": "Wannacry",
                                  "type": "Ransomware"
                                }
                              ],
                              "allapplications": [
                                {
                                  "id": 1,
                                  "label": "label",
                                  "type": "NBAR",
                                  "category": {
                                    "id": 1,
                                    "label": "category"
                                  }
                                }
                              ],
                              "allowedapplications": [
                                {
                                  "id": 1,
                                  "label": "label",
                                  "type": "NBAR",
                                  "category": {
                                    "id": 1,
                                    "label": "category"
                                  }
                                }
                              ],
                              "querytype": "MX",
                              "returncode": 2,
                              "blockedapplications": [

                              ],
                              "type": "dns"
                            }
                          },
                          {
                            "type": "object",
                            "description": "The information about the firewall activity",
                            "properties": {
                              "date": {
                                "type": "string",
                                "description": "The date from the timestamp based on the timezone parameter",
                                "example": "2020-07-12"
                              },
                              "destinationip": {
                                "type": "string",
                                "description": "destination IP for entry",
                                "example": "12.10.10.10"
                              },
                              "sourceip": {
                                "type": "string",
                                "description": "source IP for entry",
                                "example": "10.11.10.10"
                              },
                              "sourceport": {
                                "type": "number",
                                "description": "source port for entry",
                                "example": 3000
                              },
                              "destinationport": {
                                "type": "number",
                                "description": "destination port for entry",
                                "example": 89
                              },
                              "verdict": {
                                "type": "string",
                                "description": "verdict for entry"
                              },
                              "time": {
                                "type": "string",
                                "description": "The time in 24 hour format based on the timezone parameter",
                                "example": "12:34"
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "The timestamp represented in millseconds",
                                "example": 1594557263000
                              },
                              "identities": {
                                "type": "array",
                                "description": "array of identities for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the identity",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the identity"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label for the identity"
                                    },
                                    "type": {
                                      "type": "object",
                                      "description": "The information about the identity including the type",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "The ID of the origin type for the identity"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label of the origin type for the identity"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The name of the origin type for the identity"
                                        }
                                      }
                                    },
                                    "deleted": {
                                      "type": "boolean",
                                      "description": "Indicates whether the identity was deleted or not"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "label",
                                    "type",
                                    "deleted"
                                  ],
                                  "example": {
                                    "id": 1,
                                    "label": "Catch Rate Testing System",
                                    "type": {
                                      "id": 21,
                                      "label": "Sites",
                                      "type": "site"
                                    },
                                    "deleted": false
                                  }
                                }
                              },
                              "protocol": {
                                "type": "object",
                                "description": "IP protocol",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "description": "The ID of protocol"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The name of the protocol"
                                  }
                                },
                                "required": [
                                  "id",
                                  "label"
                                ]
                              },
                              "rule": {
                                "type": "object",
                                "description": "The firewall rule",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "description": "The ID of the rule"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The name of the rule"
                                  },
                                  "privateapplicationgroup": {
                                    "type": "object",
                                    "description": "The private application group",
                                    "properties": {
                                      "id": {
                                        "nullable": true,
                                        "type": "number",
                                        "description": "The ID of application group"
                                      },
                                      "label": {
                                        "nullable": true,
                                        "type": "string",
                                        "description": "The name of the application group"
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "id",
                                  "label"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the request. A firewall request always has type firewall."
                              },
                              "allapplications": {
                                "type": "array",
                                "description": "A list of firewall applications",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the applications managed by the firewall",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "application/protocol id"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "application/protocol label"
                                    },
                                    "app": {
                                      "type": "string",
                                      "description": "type: \"IT Service Management\" (string) - application/protocol type"
                                    }
                                  }
                                }
                              },
                              "applicationprotocols": {
                                "type": "array",
                                "description": "A list of firewall application protocols.",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the applications managed by the firewall",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "application/protocol id"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "application/protocol label"
                                    },
                                    "app": {
                                      "type": "string",
                                      "description": "type: \"IT Service Management\" (string) - application/protocol type"
                                    }
                                  }
                                }
                              },
                              "direction": {
                                "type": "string",
                                "description": "The direction of the packet. It is destined either towards the internet or to the customer's network."
                              },
                              "packetsize": {
                                "type": "number",
                                "description": "The size of the packet that Umbrella CDFW received."
                              }
                            },
                            "required": [
                              "allapplications",
                              "applicationprotocols",
                              "date",
                              "destinationip",
                              "destinationport",
                              "direction",
                              "identities",
                              "packetsize",
                              "protocol",
                              "rule",
                              "sourceip",
                              "sourceport",
                              "time",
                              "timestamp",
                              "type",
                              "verdict"
                            ],
                            "example": {
                              "date": "",
                              "destinationip": "52.8.160.247",
                              "sourceip": "192.168.0.1",
                              "sourceport": 0,
                              "destinationport": 0,
                              "direction": "toward",
                              "verdict": "allowed",
                              "time": "12:34",
                              "timestamp": 1548311506,
                              "packetsize": 32,
                              "identities": [
                                {
                                  "id": 1,
                                  "label": "Catch Rate Testing System",
                                  "type": {
                                    "id": 21,
                                    "label": "Sites",
                                    "type": "site"
                                  },
                                  "deleted": false
                                }
                              ],
                              "protocol": {
                                "id": 17,
                                "label": "UDP"
                              },
                              "rule": {
                                "id": 1,
                                "label": "Default Rule"
                              },
                              "type": "firewall",
                              "allapplications": [
                                {
                                  "id": 72,
                                  "label": "dns IT Service Management",
                                  "app": ""
                                }
                              ],
                              "applicationprotocols": [
                                {
                                  "id": 72,
                                  "label": "dns IT Service Management",
                                  "app": ""
                                }
                              ]
                            }
                          },
                          {
                            "type": "object",
                            "description": "The information about the intrusion activity",
                            "properties": {
                              "classification": {
                                "type": "string",
                                "description": "The category of attack detected by a rule that is part of a more general type of attack class, such as trojan-activity, attempted-user, and unknown.",
                                "example": "trojan-activity"
                              },
                              "date": {
                                "type": "string",
                                "description": "The date from the timestamp based on the timezone parameter",
                                "example": "2020-07-12"
                              },
                              "destinationip": {
                                "type": "string",
                                "description": "destination IP for entry",
                                "example": "12.10.10.10"
                              },
                              "destinationport": {
                                "type": "number",
                                "description": "destination port for entry",
                                "example": 89
                              },
                              "identities": {
                                "type": "array",
                                "description": "array of identities for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the identity",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the identity"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label for the identity"
                                    },
                                    "type": {
                                      "type": "object",
                                      "description": "The information about the identity including the type",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "The ID of the origin type for the identity"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label of the origin type for the identity"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The name of the origin type for the identity"
                                        }
                                      }
                                    },
                                    "deleted": {
                                      "type": "boolean",
                                      "description": "Indicates whether the identity was deleted or not"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "label",
                                    "type",
                                    "deleted"
                                  ],
                                  "example": {
                                    "id": 1,
                                    "label": "Catch Rate Testing System",
                                    "type": {
                                      "id": 21,
                                      "label": "Sites",
                                      "type": "site"
                                    },
                                    "deleted": false
                                  }
                                }
                              },
                              "protocol": {
                                "type": "object",
                                "description": "IP protocol",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "description": "The ID of protocol"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "The name of the protocol"
                                  }
                                },
                                "required": [
                                  "id",
                                  "label"
                                ]
                              },
                              "sessionid": {
                                "type": "number",
                                "description": "The unique identifier of a session, which is used to group the correlated events between various services.",
                                "example": 7878797
                              },
                              "severity": {
                                "type": "string",
                                "description": "The severity level of the rule, such as High, Medium, Low, and Very Low.",
                                "example": "High"
                              },
                              "signature": {
                                "type": "object",
                                "properties": {
                                  "generatorid": {
                                    "type": "number",
                                    "description": "Unique id assigned to the part of the IPS which generated the event."
                                  },
                                  "id": {
                                    "type": "number",
                                    "description": "Used to uniquely identify signatures."
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "A brief description of the signature."
                                  },
                                  "cves": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": "An identifier for a known security vulnerability/exposure",
                                      "example": "cve-2015-0279"
                                    }
                                  }
                                },
                                "required": [
                                  "generatorid",
                                  "id",
                                  "label",
                                  "cves"
                                ],
                                "example": {
                                  "generatorid": 148,
                                  "id": 2,
                                  "label": "(cip) CIP data is non-conforming to ODVA standard",
                                  "cves": [
                                    "cve-2015-0279"
                                  ]
                                }
                              },
                              "signaturelist": {
                                "type": "object",
                                "description": "A list of signature ID",
                                "properties": {
                                  "id": {
                                    "type": "number",
                                    "description": "Unique id assigned to a Default or Custom Signature List."
                                  }
                                },
                                "required": [
                                  "id"
                                ],
                                "example": {
                                  "id": 1112
                                }
                              },
                              "sourceip": {
                                "type": "string",
                                "description": "source IP for entry",
                                "example": "10.11.10.10"
                              },
                              "sourceport": {
                                "type": "number",
                                "description": "source port for entry",
                                "example": 3000
                              },
                              "time": {
                                "type": "string",
                                "description": "The time in 24 hour format based on the timezone parameter",
                                "example": "12:34"
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "The timestamp represented in millseconds",
                                "example": 1594557263000
                              },
                              "type": {
                                "type": "string",
                                "description": "The type of the request. An intrusion request always has type intrusion."
                              },
                              "verdict": {
                                "type": "string",
                                "description": "verdict for entry"
                              }
                            },
                            "required": [
                              "classification",
                              "date",
                              "destinationip",
                              "destinationport",
                              "identities",
                              "protocol",
                              "sessionid",
                              "severity",
                              "signature",
                              "signaturelist",
                              "sourceip",
                              "sourceport",
                              "time",
                              "timestamp",
                              "type",
                              "verdict"
                            ],
                            "example": {
                              "type": "intrusion",
                              "date": "12-02-22",
                              "destinationip": "10.10.10.10",
                              "protocol": {
                                "id": 17,
                                "label": "UDP"
                              },
                              "sourceip": "10.10.10.10",
                              "signaturelist": {
                                "id": 1111
                              },
                              "classification": "malicious",
                              "sourceport": 22,
                              "sessionid": 190898098,
                              "verdict": "detected",
                              "destinationport": 33,
                              "timestamp": 1594557262000,
                              "time": "09:30",
                              "identities": [
                                {
                                  "id": 211034846,
                                  "type": {
                                    "id": 34,
                                    "type": "anyconnect",
                                    "label": "Anyconnect Roaming Client"
                                  },
                                  "label": "omerta",
                                  "deleted": false
                                }
                              ],
                              "severity": "HIGH",
                              "signature": {
                                "generatorid": 1,
                                "id": 47829,
                                "label": "SERVER-OTHER JBoss Richfaces expression language injection attempt",
                                "cves": [
                                  "cve-2015-0279",
                                  "cve-2018-12532"
                                ]
                              }
                            }
                          },
                          {
                            "type": "object",
                            "description": "The activity of the proxy",
                            "properties": {
                              "externalip": {
                                "type": "string",
                                "description": "external IP for entry"
                              },
                              "internalip": {
                                "type": "string",
                                "description": "internal IP for entry"
                              },
                              "policycategories": {
                                "type": "array",
                                "description": "array of policy categories",
                                "items": {
                                  "type": "object",
                                  "description": "The category object",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the category"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "the human readable label of the category"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "the type of category"
                                    },
                                    "integration": {
                                      "type": "boolean",
                                      "description": "if the category is an integration"
                                    },
                                    "deprecated": {
                                      "type": "boolean",
                                      "description": "if the category is a legacy category"
                                    }
                                  }
                                }
                              },
                              "categories": {
                                "type": "array",
                                "description": "array of categories",
                                "items": {
                                  "type": "object",
                                  "description": "The category object",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the category"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "the human readable label of the category"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "the type of category"
                                    },
                                    "integration": {
                                      "type": "boolean",
                                      "description": "if the category is an integration"
                                    },
                                    "deprecated": {
                                      "type": "boolean",
                                      "description": "if the category is a legacy category"
                                    }
                                  }
                                }
                              },
                              "verdict": {
                                "type": "string",
                                "description": "verdict for entry"
                              },
                              "timestamp": {
                                "type": "number",
                                "description": "The timestamp represented in millseconds",
                                "example": 1594557263000
                              },
                              "identities": {
                                "type": "array",
                                "description": "array of identities for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the identity",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the identity"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label for the identity"
                                    },
                                    "type": {
                                      "type": "object",
                                      "description": "The information about the identity including the type",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "The ID of the origin type for the identity"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "The label of the origin type for the identity"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The name of the origin type for the identity"
                                        }
                                      }
                                    },
                                    "deleted": {
                                      "type": "boolean",
                                      "description": "Indicates whether the identity was deleted or not"
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "label",
                                    "type",
                                    "deleted"
                                  ],
                                  "example": {
                                    "id": 1,
                                    "label": "Catch Rate Testing System",
                                    "type": {
                                      "id": 21,
                                      "label": "Sites",
                                      "type": "site"
                                    },
                                    "deleted": false
                                  }
                                }
                              },
                              "allapplications": {
                                "type": "array",
                                "description": "array of applications for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the application",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "id of the application"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "label of the application"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "type of the application, NBAR or AVC"
                                    },
                                    "category": {
                                      "type": "object",
                                      "description": "the category of the application",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "id of the application category"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "label of the application category"
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "id": 1,
                                    "label": "malware",
                                    "type": "avc",
                                    "category": {
                                      "id": 2,
                                      "label": "Education"
                                    }
                                  }
                                }
                              },
                              "allowedapplications": {
                                "type": "array",
                                "description": "array of allowed applications for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the application",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "id of the application"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "label of the application"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "type of the application, NBAR or AVC"
                                    },
                                    "category": {
                                      "type": "object",
                                      "description": "the category of the application",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "id of the application category"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "label of the application category"
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "id": 1,
                                    "label": "malware",
                                    "type": "avc",
                                    "category": {
                                      "id": 2,
                                      "label": "Education"
                                    }
                                  }
                                }
                              },
                              "blockedapplications": {
                                "type": "array",
                                "description": "array of blocked applications for entry",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the application",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "id of the application"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "label of the application"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "type of the application, NBAR or AVC"
                                    },
                                    "category": {
                                      "type": "object",
                                      "description": "the category of the application",
                                      "properties": {
                                        "id": {
                                          "type": "number",
                                          "description": "id of the application category"
                                        },
                                        "label": {
                                          "type": "string",
                                          "description": "label of the application category"
                                        }
                                      }
                                    }
                                  },
                                  "example": {
                                    "id": 1,
                                    "label": "malware",
                                    "type": "avc",
                                    "category": {
                                      "id": 2,
                                      "label": "Education"
                                    }
                                  }
                                }
                              },
                              "responsefilename": {
                                "type": "string",
                                "description": "response filename for entry"
                              },
                              "blockedfiletype": {
                                "type": "string",
                                "description": "blocked file type for entry"
                              },
                              "bundleid": {
                                "type": "number",
                                "description": "The ID of the bundle"
                              },
                              "amp": {
                                "type": "object",
                                "description": "AMP disposition/score/malware",
                                "properties": {
                                  "score": {
                                    "type": "number",
                                    "description": "AMP score"
                                  },
                                  "disposition": {
                                    "type": "string",
                                    "description": "AMP disposition"
                                  },
                                  "malware": {
                                    "type": "string",
                                    "description": "AMP malware"
                                  }
                                },
                                "required": [
                                  "disposition",
                                  "malware",
                                  "score"
                                ]
                              },
                              "type": {
                                "type": "string",
                                "description": "type of the request. A proxy request is always of type 'proxy'."
                              },
                              "tenantcontrols": {
                                "type": "boolean",
                                "description": "if the request was part of a tenant control policy"
                              },
                              "port": {
                                "type": "number",
                                "description": "request port",
                                "nullable": true
                              },
                              "antivirusthreats": {
                                "type": "object",
                                "description": "The information about the antivirus threats",
                                "properties": {
                                  "puas": {
                                    "type": "array",
                                    "description": "Potentially unwanted applications",
                                    "items": {
                                      "type": "object"
                                    }
                                  },
                                  "viruses": {
                                    "type": "array",
                                    "description": "Viruses",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "others": {
                                    "type": "array",
                                    "description": "Other antivirus threats",
                                    "items": {
                                      "type": "object"
                                    }
                                  }
                                },
                                "required": [
                                  "others",
                                  "puas",
                                  "viruses"
                                ]
                              },
                              "policy": {
                                "type": "object",
                                "required": [
                                  "destinationlistids",
                                  "ruleid",
                                  "rulesetid",
                                  "timebasedrule"
                                ],
                                "properties": {
                                  "timebasedrule": {
                                    "type": "boolean",
                                    "description": "whether the policy triggered a time-of-day rule"
                                  },
                                  "destinationlistids": {
                                    "type": "array",
                                    "description": "the destination lists that the policy triggered",
                                    "items": {
                                      "type": "number"
                                    }
                                  },
                                  "ruleid": {
                                    "type": "number",
                                    "description": "the rule ID for the policy",
                                    "nullable": true
                                  },
                                  "rulesetid": {
                                    "type": "number",
                                    "description": "the rule set ID for the policy",
                                    "nullable": true
                                  }
                                }
                              },
                              "requestmethod": {
                                "type": "string",
                                "description": "The HTTP request method that was made.",
                                "example": "GET"
                              },
                              "responsesize": {
                                "type": "number",
                                "description": "Response size in bytes."
                              },
                              "requestsize": {
                                "type": "number",
                                "description": "Request size in bytes."
                              },
                              "statuscode": {
                                "type": "number",
                                "description": "The HTTP status code; should always be 200 or 201.",
                                "example": 200
                              },
                              "useragent": {
                                "type": "string",
                                "description": "The browser agent that made the request."
                              },
                              "referer": {
                                "type": "string",
                                "description": "The referring domain or URL."
                              },
                              "warnstatus": {
                                "type": "string",
                                "description": "The warning status."
                              },
                              "sha256": {
                                "type": "string",
                                "description": "The hex digest of the response content."
                              },
                              "isolated": {
                                "type": "object",
                                "properties": {
                                  "state": {
                                    "type": "string",
                                    "description": "The state of the isolated file"
                                  },
                                  "fileaction": {
                                    "type": "string",
                                    "description": "The action taken for the file"
                                  }
                                },
                                "required": [
                                  "state",
                                  "fileaction"
                                ],
                                "example": {
                                  "state": "not-isolated",
                                  "fileaction": ""
                                }
                              },
                              "datalossprevention": {
                                "type": "object",
                                "description": "The information about the Data Loss Prevention state",
                                "properties": {
                                  "state": {
                                    "type": "string",
                                    "description": "If the request was Blocked for DLP. Either 'blocked' or ''"
                                  }
                                },
                                "required": [
                                  "state"
                                ],
                                "example": {
                                  "state": "blocked"
                                }
                              },
                              "securityoverridden": {
                                "type": "boolean",
                                "description": "Specifies whether Umbrella has security overrides."
                              },
                              "contenttype": {
                                "type": "string",
                                "description": "The type of web content, typically text/html.",
                                "example": "text/html"
                              },
                              "forwardingmethod": {
                                "type": "string",
                                "description": "The request method (GET, POST, HEAD, etc.)",
                                "example": "GET"
                              },
                              "httperrors": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "type of the error `CertificateError` or `TLSError`"
                                    },
                                    "code": {
                                      "type": "number",
                                      "description": "the http error code"
                                    },
                                    "reason": {
                                      "type": "string",
                                      "description": "the name of the error"
                                    },
                                    "attributes": {
                                      "type": "object",
                                      "description": "map of additional information about the error"
                                    }
                                  }
                                },
                                "description": "Certificate & TLS Errors"
                              },
                              "threats": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The information about the threat",
                                  "properties": {
                                    "label": {
                                      "type": "string",
                                      "description": "the threat name or label"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "the type of threat"
                                    }
                                  }
                                }
                              },
                              "egress": {
                                "type": "object",
                                "description": "The information about the egress IP",
                                "properties": {
                                  "ip": {
                                    "type": "string",
                                    "description": "Egress IP"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Egress Type"
                                  }
                                },
                                "required": [
                                  "ip",
                                  "type"
                                ],
                                "example": {
                                  "ip": "155.190.3.8",
                                  "type": "shared"
                                }
                              },
                              "datacenter": {
                                "type": "object",
                                "description": "The information about the data center",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Unique ID for the data center"
                                  },
                                  "label": {
                                    "type": "string",
                                    "description": "Name of the data center"
                                  }
                                },
                                "required": [
                                  "id",
                                  "label"
                                ],
                                "example": {
                                  "id": "LAX",
                                  "label": "Los Angeles, US"
                                }
                              },
                              "date": {
                                "type": "string",
                                "description": "The date from the timestamp based on the timezone parameter",
                                "example": "2020-07-12"
                              },
                              "time": {
                                "type": "string",
                                "description": "The time in 24 hour format based on the timezone parameter",
                                "example": "12:34"
                              },
                              "destinationip": {
                                "type": "string",
                                "description": "destination IP for entry",
                                "example": "12.10.10.10"
                              },
                              "url": {
                                "type": "string",
                                "description": "The URL requested"
                              }
                            },
                            "required": [
                              "allapplications",
                              "allowedapplications",
                              "amp",
                              "antivirusthreats",
                              "blockedapplications",
                              "blockedfiletype",
                              "bundleid",
                              "categories",
                              "contenttype",
                              "datacenter",
                              "datalossprevention",
                              "date",
                              "destinationip",
                              "egress",
                              "externalip",
                              "forwardingmethod",
                              "httperrors",
                              "identities",
                              "internalip",
                              "isolated",
                              "policy",
                              "policycategories",
                              "port",
                              "referer",
                              "requestsize",
                              "responsefilename",
                              "responsesize",
                              "securityoverridden",
                              "sha256",
                              "statuscode",
                              "tenantcontrols",
                              "threats",
                              "time",
                              "timestamp",
                              "type",
                              "url",
                              "useragent",
                              "verdict",
                              "warnstatus"
                            ],
                            "example": {
                              "destinationip": "",
                              "externalip": "32.4.91.7",
                              "responsesize": 3329530,
                              "allapplications": [
                                {
                                  "id": 1313,
                                  "label": "Netflix",
                                  "category": {
                                    "id": 47,
                                    "label": "Media"
                                  }
                                }
                              ],
                              "date": "2022-02-18",
                              "datalossprevention": {
                                "state": ""
                              },
                              "antivirusthreats": {
                                "puas": [

                                ],
                                "viruses": [

                                ],
                                "others": [

                                ]
                              },
                              "internalip": "192.168.1.43",
                              "referer": "",
                              "contenttype": "",
                              "tenantcontrols": false,
                              "securityoverridden": false,
                              "useragent": "",
                              "time": "23:29:42",
                              "amp": {
                                "disposition": "",
                                "score": 0,
                                "malware": ""
                              },
                              "policycategories": [

                              ],
                              "type": "proxy",
                              "requestsize": 1996,
                              "port": 443,
                              "policy": {
                                "ruleid": 0,
                                "rulesetid": 0,
                                "destinationlistids": [

                                ],
                                "timebasedrule": false
                              },
                              "forwardingmethod": "",
                              "categories": [
                                {
                                  "id": 17,
                                  "type": "content",
                                  "label": "Movies",
                                  "integration": false,
                                  "deprecated": true
                                }
                              ],
                              "isolated": {
                                "state": "not-isolated",
                                "fileaction": ""
                              },
                              "statuscode": 200,
                              "egress": {
                                "ip": "155.190.3.8",
                                "type": "shared"
                              },
                              "blockedfiletype": "",
                              "url": "https://ipv4-lax2-ix.1.oca.anothervideo.net",
                              "verdict": "allowed",
                              "responsefilename": "",
                              "warnstatus": "",
                              "sha256": "",
                              "timestamp": 1645226982000,
                              "blockedapplications": [

                              ],
                              "allowedapplications": [

                              ],
                              "identities": [
                                {
                                  "id": 1,
                                  "type": {
                                    "id": 34,
                                    "type": "anyconnect",
                                    "label": "Anyconnect Roaming Client"
                                  },
                                  "label": "Vincent's Macbook",
                                  "deleted": false
                                }
                              ],
                              "datacenter": {
                                "label": "Atlanta, US",
                                "id": "ATL"
                              },
                              "threats": [

                              ],
                              "httperrors": [

                              ],
                              "bundleid": 3
                            }
                          }
                        ]
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "meta": {
                  },
                  "data": [
                    {
                      "externalip": "52.8.160.247",
                      "internalip": "52.8.160.247",
                      "policycategories": [
                        {
                          "id": 66,
                          "label": "Malware",
                          "type": "security",
                          "integration": true
                        }
                      ],
                      "categories": [
                        {
                          "id": 66,
                          "label": "Malware",
                          "type": "security",
                          "integration": true
                        }
                      ],
                      "verdict": "allowed",
                      "domain": "google.com",
                      "timestamp": 1548311506,
                      "time": "06:31:46",
                      "date": "2019-01-24",
                      "identities": [
                        {
                          "id": 1,
                          "label": "Catch Rate Testing System",
                          "type": {
                            "id": 21,
                            "label": "Sites",
                            "type": "site"
                          },
                          "deleted": true
                        }
                      ],
                      "threats": [
                        {
                          "label": "Wannacry",
                          "type": "Ransomware"
                        }
                      ],
                      "allapplications": [
                        {
                          "id": 1,
                          "label": "label",
                          "type": "NBAR",
                          "category": {
                            "id": 1,
                            "label": "category"
                          }
                        }
                      ],
                      "allowedapplications": [
                        {
                          "id": 1,
                          "label": "label",
                          "type": "NBAR",
                          "category": {
                            "id": 1,
                            "label": "category"
                          }
                        }
                      ],
                      "querytype": "MX",
                      "returncode": 2,
                      "blockedapplications": [

                      ],
                      "type": "dns"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/reports/topCategories": {
      "get": {
        "tags": [
          "Reports",
          "Top Categories"
        ],
        "summary": "Get Top Categories (all)",
        "description": "List the categories which received the greatest number of requests.\nOrder the number of requests in descending order.",
        "operationId": "getTopCategories",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return from the collection.",
            "required": true,
            "schema": {
              "type": "number"
            },
            "example": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "A number that represents an index into the collection.",
            "schema": {
              "type": "number"
            },
            "example": 0
          },
          {
            "name": "domains",
            "in": "query",
            "description": "A domain name or comma-delimited list of domain name.",
            "schema": {
              "type": "string"
            },
            "example": "cisco.com,nasa.gov"
          },
          {
            "name": "urls",
            "in": "query",
            "description": "A URL or comma-delimited list of URL.",
            "schema": {
              "type": "string"
            },
            "example": "https://google.com,facebook.com/help"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.",
            "schema": {
              "type": "string"
            },
            "example": "148,151,66"
          },
          {
            "name": "policycategories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.\nFilter request by the categories that trigger a policy.",
            "schema": {
              "type": "string"
            },
            "example": "67,69"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "An application ID.",
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "verdict",
            "in": "query",
            "description": "A verdict string or comma-delimited list of verdict string.",
            "schema": {
              "type": "string"
            },
            "example": "allowed,blocked,proxied"
          },
          {
            "name": "sha256",
            "in": "query",
            "description": "A SHA-256 hash",
            "schema": {
              "type": "string"
            },
            "example": "ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
          },
          {
            "name": "securityoverridden",
            "in": "query",
            "description": "Specify whether to filter on requests that override security.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "A proxy bundle ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "threats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threattypes",
            "in": "query",
            "description": "A threat type or comma-delimited list of threat type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ampdisposition",
            "in": "query",
            "description": "An AMP disposition string or a comma-delimited list of AMP disposition string.",
            "schema": {
              "type": "string"
            },
            "example": "clean,malicious,unknown"
          },
          {
            "name": "antivirusthreats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            },
            "example": "Trojan.Linux.Generic.144075"
          },
          {
            "name": "datalosspreventionstate",
            "in": "query",
            "description": "A string that describes the status of a destination (for example: 'blocked').\nFilter data for requests that were blocked to protect data.",
            "schema": {
              "type": "string"
            },
            "example": "blocked"
          },
          {
            "name": "filternoisydomains",
            "in": "query",
            "description": "filter out domains that generate a lot of insignificant traffic (noise).",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "Display the timestamp of the traffic events in the specified timezone.\nFor the timezone, provide a continent and city separated by an url-encoded forward slash ('/'), for example: timezone='ASIA%2fCALCUTTA'.",
            "schema": {
              "type": "string"
            },
            "example": "ASIA%2fCALCUTTA"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The information about the top category requests",
                        "properties": {
                          "rank": {
                            "type": "number",
                            "description": "the rank of the result based on the number of requests"
                          },
                          "category": {
                            "type": "object",
                            "description": "The category object",
                            "properties": {
                              "id": {
                                "type": "number",
                                "description": "The ID of the category"
                              },
                              "label": {
                                "type": "string",
                                "description": "the human readable label of the category"
                              },
                              "type": {
                                "type": "string",
                                "description": "the type of category"
                              },
                              "integration": {
                                "type": "boolean",
                                "description": "if the category is an integration"
                              },
                              "deprecated": {
                                "type": "boolean",
                                "description": "if the category is a legacy category"
                              }
                            }
                          },
                          "count": {
                            "type": "number",
                            "description": "number of requests made that match this category"
                          },
                          "bandwidth": {
                            "type": "number",
                            "nullable": true
                          }
                        },
                        "required": [
                          "category",
                          "count",
                          "rank"
                        ],
                        "example": {
                          "rank": 5,
                          "category": {
                            "id": 66,
                            "label": "Malware",
                            "type": "security",
                            "integration": true
                          },
                          "count": 3827
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "rank": 5,
                      "category": {
                        "id": 66,
                        "label": "Malware",
                        "typse": "security",
                        "integration": true
                      },
                      "count": 3827
                    }
                  ],
                  "meta": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/reports/categoriesByTimerange": {
      "get": {
        "tags": [
          "Reports",
          "Organization Requests by Timerange and Category"
        ],
        "summary": "Get Requests by Timerange and Category (ALL)",
        "description": "List the activity volume within the timeframe by category.",
        "operationId": "getRequestsByTimerangeAndCategory",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return from the collection.",
            "required": true,
            "schema": {
              "type": "number"
            },
            "example": 100
          },
          {
            "name": "offset",
            "in": "query",
            "description": "A number that represents an index into the collection.",
            "schema": {
              "type": "number"
            },
            "example": 0
          },
          {
            "name": "domains",
            "in": "query",
            "description": "A domain name or comma-delimited list of domain name.",
            "schema": {
              "type": "string"
            },
            "example": "cisco.com,nasa.gov"
          },
          {
            "name": "urls",
            "in": "query",
            "description": "A URL or comma-delimited list of URL.",
            "schema": {
              "type": "string"
            },
            "example": "https://google.com,facebook.com/help"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.",
            "schema": {
              "type": "string"
            },
            "example": "148,151,66"
          },
          {
            "name": "policycategories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.\nFilter request by the categories that trigger a policy.",
            "schema": {
              "type": "string"
            },
            "example": "67,69"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "An application ID.",
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "verdict",
            "in": "query",
            "description": "A verdict string or comma-delimited list of verdict string.",
            "schema": {
              "type": "string"
            },
            "example": "allowed,blocked,proxied"
          },
          {
            "name": "securityoverridden",
            "in": "query",
            "description": "Specify whether to filter on requests that override security.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "A proxy bundle ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "threats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threattypes",
            "in": "query",
            "description": "A threat type or comma-delimited list of threat type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ampdisposition",
            "in": "query",
            "description": "An AMP disposition string or a comma-delimited list of AMP disposition string.",
            "schema": {
              "type": "string"
            },
            "example": "clean,malicious,unknown"
          },
          {
            "name": "antivirusthreats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            },
            "example": "Trojan.Linux.Generic.144075"
          },
          {
            "name": "timerange",
            "in": "header",
            "description": "A string that represents a range of time (for example: 'minute', 'hour', or 'day').\nIf the header is not set, the header value defaults to 'hour'.",
            "schema": {
              "type": "string"
            },
            "example": "minute"
          },
          {
            "name": "datalosspreventionstate",
            "in": "query",
            "description": "A string that describes the status of a destination (for example: 'blocked').\nFilter data for requests that were blocked to protect data.",
            "schema": {
              "type": "string"
            },
            "example": "blocked"
          },
          {
            "name": "filternoisydomains",
            "in": "query",
            "description": "filter out domains that generate a lot of insignificant traffic (noise).",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "Display the timestamp of the traffic events in the specified timezone.\nFor the timezone, provide a continent and city separated by an url-encoded forward slash ('/'), for example: timezone='ASIA%2fCALCUTTA'.",
            "schema": {
              "type": "string"
            },
            "example": "ASIA%2fCALCUTTA"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "required": [
                          "counts",
                          "date",
                          "time",
                          "timestamp"
                        ],
                        "type": "object",
                        "description": "The information about the categories seen by hour",
                        "properties": {
                          "timestamp": {
                            "type": "number",
                            "description": "The timestamp represented in milliseconds for this bucket",
                            "example": 1594557263000
                          },
                          "date": {
                            "type": "string",
                            "description": "The date from the timestamp based on the timezone parameter",
                            "example": "2020-07-12"
                          },
                          "time": {
                            "type": "string",
                            "description": "The time in 24 hour format based on the timezone parameter",
                            "example": "12:34"
                          },
                          "counts": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The information about the category counts",
                              "properties": {
                                "category": {
                                  "type": "object",
                                  "description": "The category object",
                                  "properties": {
                                    "id": {
                                      "type": "number",
                                      "description": "The ID of the category"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "the human readable label of the category"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "the type of category"
                                    },
                                    "integration": {
                                      "type": "boolean",
                                      "description": "if the category is an integration"
                                    },
                                    "deprecated": {
                                      "type": "boolean",
                                      "description": "if the category is a legacy category"
                                    }
                                  }
                                },
                                "requests": {
                                  "type": "number",
                                  "description": "total number of requests for category"
                                }
                              },
                              "required": [
                                "category",
                                "requests"
                              ],
                              "example": {
                                "category": {
                                },
                                "requests": 24
                              }
                            }
                          }
                        },
                        "example": {
                          "timestamp": 1559836800000,
                          "date": "2019",
                          "time": "16:00:00",
                          "counts": [
                            {
                              "category": {
                                "id": 66,
                                "label": "Malware",
                                "type": "security",
                                "integration": true
                              },
                              "requests": 123
                            }
                          ]
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "timestamp": 1559836800000,
                      "date": "2019",
                      "time": "16:00:00",
                      "counts": [
                        {
                          "category": {
                            "id": 66,
                            "label": "Malware",
                            "type": "security",
                            "integration": true
                          },
                          "requests": 123
                        }
                      ]
                    }
                  ],
                  "meta": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/reports/totalRequests": {
      "get": {
        "tags": [
          "Reports",
          "Total Requests"
        ],
        "summary": "Get Total Requests (All)",
        "description": "List the count of total requests for the given filters.",
        "operationId": "getTotalRequests",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "domains",
            "in": "query",
            "description": "A domain name or comma-delimited list of domain name.",
            "schema": {
              "type": "string"
            },
            "example": "cisco.com,nasa.gov"
          },
          {
            "name": "urls",
            "in": "query",
            "description": "A URL or comma-delimited list of URL.",
            "schema": {
              "type": "string"
            },
            "example": "https://google.com,facebook.com/help"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.",
            "schema": {
              "type": "string"
            },
            "example": "148,151,66"
          },
          {
            "name": "policycategories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.\nFilter request by the categories that trigger a policy.",
            "schema": {
              "type": "string"
            },
            "example": "67,69"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "ports",
            "in": "query",
            "description": "A port number or comma-delimited list of port number.",
            "schema": {
              "type": "string"
            },
            "example": "7351,80"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "An application ID.",
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "verdict",
            "in": "query",
            "description": "A verdict string or comma-delimited list of verdict string.",
            "schema": {
              "type": "string"
            },
            "example": "allowed,blocked,proxied"
          },
          {
            "name": "ruleid",
            "in": "query",
            "description": "A firewall policy rule ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "sha256",
            "in": "query",
            "description": "A SHA-256 hash",
            "schema": {
              "type": "string"
            },
            "example": "ba7816bf8f01cfea414140de5dae2223b00361a396177a9cb410ff61f20015ad"
          },
          {
            "name": "securityoverridden",
            "in": "query",
            "description": "Specify whether to filter on requests that override security.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "A proxy bundle ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "threats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threattypes",
            "in": "query",
            "description": "A threat type or comma-delimited list of threat type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ampdisposition",
            "in": "query",
            "description": "An AMP disposition string or a comma-delimited list of AMP disposition string.",
            "schema": {
              "type": "string"
            },
            "example": "clean,malicious,unknown"
          },
          {
            "name": "antivirusthreats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            },
            "example": "Trojan.Linux.Generic.144075"
          },
          {
            "name": "datalosspreventionstate",
            "in": "query",
            "description": "A string that describes the status of a destination (for example: 'blocked').\nFilter data for requests that were blocked to protect data.",
            "schema": {
              "type": "string"
            },
            "example": "blocked"
          },
          {
            "name": "filternoisydomains",
            "in": "query",
            "description": "filter out domains that generate a lot of insignificant traffic (noise).",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "Display the timestamp of the traffic events in the specified timezone.\nFor the timezone, provide a continent and city separated by an url-encoded forward slash ('/'), for example: timezone='ASIA%2fCALCUTTA'.",
            "schema": {
              "type": "string"
            },
            "example": "ASIA%2fCALCUTTA"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "description": "The total number of requests"
                        }
                      },
                      "required": [
                        "count"
                      ],
                      "example": {
                        "count": 42
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "data": {
                    "count": 42
                  },
                  "meta": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/reports/totalRequests/{type}": {
      "get": {
        "tags": [
          "Reports",
          "Total Requests"
        ],
        "summary": "Get Total Requests (By Type)",
        "description": "Get the count of total requests for the given filters.",
        "operationId": "getTotalRequestsByType",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Specify the type of traffic. Valid values: dns, proxy, firewall, or ip.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "firewall"
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "domains",
            "in": "query",
            "description": "A domain name or comma-delimited list of domain name.",
            "schema": {
              "type": "string"
            },
            "example": "cisco.com,nasa.gov"
          },
          {
            "name": "urls",
            "in": "query",
            "description": "A URL or comma-delimited list of URL.",
            "schema": {
              "type": "string"
            },
            "example": "https://google.com,facebook.com/help"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.",
            "schema": {
              "type": "string"
            },
            "example": "148,151,66"
          },
          {
            "name": "policycategories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.\nFilter request by the categories that trigger a policy.",
            "schema": {
              "type": "string"
            },
            "example": "67,69"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "ports",
            "in": "query",
            "description": "A port number or comma-delimited list of port number.",
            "schema": {
              "type": "string"
            },
            "example": "7351,80"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "An application ID.",
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "ruleid",
            "in": "query",
            "description": "A firewall policy rule ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "verdict",
            "in": "query",
            "description": "A verdict string or comma-delimited list of verdict string.",
            "schema": {
              "type": "string"
            },
            "example": "allowed,blocked,proxied"
          },
          {
            "name": "securityoverridden",
            "in": "query",
            "description": "Specify whether to filter on requests that override security.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "A proxy bundle ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "threats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threattypes",
            "in": "query",
            "description": "A threat type or comma-delimited list of threat type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ampdisposition",
            "in": "query",
            "description": "An AMP disposition string or a comma-delimited list of AMP disposition string.",
            "schema": {
              "type": "string"
            },
            "example": "clean,malicious,unknown"
          },
          {
            "name": "antivirusthreats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            },
            "example": "Trojan.Linux.Generic.144075"
          },
          {
            "name": "datalosspreventionstate",
            "in": "query",
            "description": "A string that describes the status of a destination (for example: 'blocked').\nFilter data for requests that were blocked to protect data.",
            "schema": {
              "type": "string"
            },
            "example": "blocked"
          },
          {
            "name": "filternoisydomains",
            "in": "query",
            "description": "filter out domains that generate a lot of insignificant traffic (noise).",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "timezone",
            "in": "query",
            "description": "Display the timestamp of the traffic events in the specified timezone.\nFor the timezone, provide a continent and city separated by an url-encoded forward slash ('/'), for example: timezone='ASIA%2fCALCUTTA'.",
            "schema": {
              "type": "string"
            },
            "example": "ASIA%2fCALCUTTA"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "properties": {
                        "count": {
                          "type": "number",
                          "description": "The total number of requests"
                        }
                      },
                      "required": [
                        "count"
                      ],
                      "example": {
                        "count": 42
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "data": {
                    "count": 42
                  },
                  "meta": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/reports/summary": {
      "get": {
        "tags": [
          "Reports",
          "Summary"
        ],
        "summary": "Get Summary (All)",
        "description": "Get the summary report",
        "operationId": "getSummary",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "A number that represents an index into the collection.",
            "schema": {
              "type": "number"
            },
            "example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return from the collection.",
            "required": true,
            "schema": {
              "type": "number"
            },
            "example": 100
          },
          {
            "name": "domains",
            "in": "query",
            "description": "A domain name or comma-delimited list of domain name.",
            "schema": {
              "type": "string"
            },
            "example": "cisco.com,nasa.gov"
          },
          {
            "name": "urls",
            "in": "query",
            "description": "A URL or comma-delimited list of URL.",
            "schema": {
              "type": "string"
            },
            "example": "https://google.com,facebook.com/help"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.",
            "schema": {
              "type": "string"
            },
            "example": "148,151,66"
          },
          {
            "name": "policycategories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.\nFilter request by the categories that trigger a policy.",
            "schema": {
              "type": "string"
            },
            "example": "67,69"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "ports",
            "in": "query",
            "description": "A port number or comma-delimited list of port number.",
            "schema": {
              "type": "string"
            },
            "example": "7351,80"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "An application ID.",
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "verdict",
            "in": "query",
            "description": "A verdict string or comma-delimited list of verdict string.",
            "schema": {
              "type": "string"
            },
            "example": "allowed,blocked,proxied"
          },
          {
            "name": "ruleid",
            "in": "query",
            "description": "A firewall policy rule ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "filename",
            "in": "query",
            "description": "A string that identifies a filename. Filter request by the filename.\nSupports globbing or use of the wildcard character ('*'). The asterisk (*) matches\nzero or more occurrences of any character.",
            "schema": {
              "type": "string"
            },
            "example": "myfilename_*"
          },
          {
            "name": "securityoverridden",
            "in": "query",
            "description": "Specify whether to filter on requests that override security.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "A proxy bundle ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "threats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threattypes",
            "in": "query",
            "description": "A threat type or comma-delimited list of threat type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ampdisposition",
            "in": "query",
            "description": "An AMP disposition string or a comma-delimited list of AMP disposition string.",
            "schema": {
              "type": "string"
            },
            "example": "clean,malicious,unknown"
          },
          {
            "name": "antivirusthreats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            },
            "example": "Trojan.Linux.Generic.144075"
          },
          {
            "name": "datalosspreventionstate",
            "in": "query",
            "description": "A string that describes the status of a destination (for example: 'blocked').\nFilter data for requests that were blocked to protect data.",
            "schema": {
              "type": "string"
            },
            "example": "blocked"
          },
          {
            "name": "filternoisydomains",
            "in": "query",
            "description": "filter out domains that generate a lot of insignificant traffic (noise).",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "The summary information about the requests",
                      "properties": {
                        "applications": {
                          "type": "number",
                          "description": "total number of applications (avc or total)"
                        },
                        "domains": {
                          "type": "number",
                          "description": "total number of domains"
                        },
                        "requestsblocked": {
                          "type": "number",
                          "description": "total number of blocked requests"
                        },
                        "filetypes": {
                          "type": "number",
                          "description": "total number of file types"
                        },
                        "policycategories": {
                          "type": "number",
                          "description": "total number of blocked categories"
                        },
                        "policyrequests": {
                          "type": "number",
                          "description": "total number of policy requests"
                        },
                        "requests": {
                          "type": "number",
                          "description": "total number of requests"
                        },
                        "requestsallowed": {
                          "type": "number",
                          "description": "total number of allowed requests"
                        },
                        "categories": {
                          "type": "number",
                          "description": "total number of categories"
                        },
                        "identitytypes": {
                          "type": "number",
                          "description": "total number of identity types"
                        },
                        "applicationsblocked": {
                          "type": "number",
                          "description": "total number of blocked applications"
                        },
                        "files": {
                          "type": "number",
                          "description": "total number of files"
                        },
                        "identities": {
                          "type": "number",
                          "description": "total number of identities"
                        },
                        "applicationsallowed": {
                          "type": "number",
                          "description": "total number of allowed applications"
                        }
                      },
                      "required": [
                        "applications",
                        "applicationsallowed",
                        "applicationsblocked",
                        "categories",
                        "domains",
                        "files",
                        "filetypes",
                        "identities",
                        "identitytypes",
                        "policycategories",
                        "policyrequests",
                        "requests",
                        "requestsallowed",
                        "requestsblocked"
                      ],
                      "example": {
                        "applications": 123,
                        "domains": 82,
                        "requestsblocked": 189,
                        "filetypes": 0,
                        "policycategories": 2,
                        "policyrequests": 2,
                        "requests": 189,
                        "requestsallowed": 10,
                        "categories": 11,
                        "identitytypes": 1,
                        "applicationsblocked": 2,
                        "files": 5,
                        "identities": 1,
                        "applicationsallowed": 2
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "data": {
                    "applications": 123,
                    "domains": 82,
                    "requestsblocked": 189,
                    "filetypes": 0,
                    "policycategories": 2,
                    "policyrequests": 2,
                    "requests": 189,
                    "requestsallowed": 10,
                    "categories": 11,
                    "identitytypes": 1,
                    "applicationsblocked": 2,
                    "files": 5,
                    "identities": 1,
                    "applicationsallowed": 2
                  },
                  "meta": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/reports/summary/{type}": {
      "get": {
        "tags": [
          "Reports",
          "Summary"
        ],
        "summary": "Get Summary By Type",
        "description": "List the summary by traffic type.",
        "operationId": "getSummaryByType",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Specify the type of traffic. Valid values: dns, proxy, firewall, or ip.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "firewall"
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "A number that represents an index into the collection.",
            "schema": {
              "type": "number"
            },
            "example": 0
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return from the collection.",
            "required": true,
            "schema": {
              "type": "number"
            },
            "example": 100
          },
          {
            "name": "domains",
            "in": "query",
            "description": "A domain name or comma-delimited list of domain name.",
            "schema": {
              "type": "string"
            },
            "example": "cisco.com,nasa.gov"
          },
          {
            "name": "urls",
            "in": "query",
            "description": "A URL or comma-delimited list of URL.",
            "schema": {
              "type": "string"
            },
            "example": "https://google.com,facebook.com/help"
          },
          {
            "name": "categories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.",
            "schema": {
              "type": "string"
            },
            "example": "148,151,66"
          },
          {
            "name": "policycategories",
            "in": "query",
            "description": "A category ID or comma-delimited list of category ID.\nFilter request by the categories that trigger a policy.",
            "schema": {
              "type": "string"
            },
            "example": "67,69"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "ports",
            "in": "query",
            "description": "A port number or comma-delimited list of port number.",
            "schema": {
              "type": "string"
            },
            "example": "7351,80"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "applicationid",
            "in": "query",
            "description": "An application ID.",
            "schema": {
              "type": "string"
            },
            "example": "1"
          },
          {
            "name": "verdict",
            "in": "query",
            "description": "A verdict string or comma-delimited list of verdict string.",
            "schema": {
              "type": "string"
            },
            "example": "allowed,blocked,proxied"
          },
          {
            "name": "ruleid",
            "in": "query",
            "description": "A firewall policy rule ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "filename",
            "in": "query",
            "description": "A string that identifies a filename. Filter request by the filename.\nSupports globbing or use of the wildcard character ('*'). The asterisk (*) matches\nzero or more occurrences of any character.",
            "schema": {
              "type": "string"
            },
            "example": "myfilename_*"
          },
          {
            "name": "securityoverridden",
            "in": "query",
            "description": "Specify whether to filter on requests that override security.",
            "schema": {
              "type": "boolean"
            },
            "example": true
          },
          {
            "name": "bundleid",
            "in": "query",
            "description": "A proxy bundle ID.",
            "schema": {
              "type": "number"
            },
            "example": 1
          },
          {
            "name": "threats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "threattypes",
            "in": "query",
            "description": "A threat type or comma-delimited list of threat type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ampdisposition",
            "in": "query",
            "description": "An AMP disposition string or a comma-delimited list of AMP disposition string.",
            "schema": {
              "type": "string"
            },
            "example": "clean,malicious,unknown"
          },
          {
            "name": "antivirusthreats",
            "in": "query",
            "description": "A threat name or comma-delimited list of threat name.",
            "schema": {
              "type": "string"
            },
            "example": "Trojan.Linux.Generic.144075"
          },
          {
            "name": "datalosspreventionstate",
            "in": "query",
            "description": "A string that describes the status of a destination (for example: 'blocked').\nFilter data for requests that were blocked to protect data.",
            "schema": {
              "type": "string"
            },
            "example": "blocked"
          },
          {
            "name": "filternoisydomains",
            "in": "query",
            "description": "filter out domains that generate a lot of insignificant traffic (noise).",
            "schema": {
              "type": "boolean"
            },
            "example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "object",
                      "description": "The summary information about the requests",
                      "properties": {
                        "applications": {
                          "type": "number",
                          "description": "total number of applications (avc or total)"
                        },
                        "domains": {
                          "type": "number",
                          "description": "total number of domains"
                        },
                        "requestsblocked": {
                          "type": "number",
                          "description": "total number of blocked requests"
                        },
                        "filetypes": {
                          "type": "number",
                          "description": "total number of file types"
                        },
                        "policycategories": {
                          "type": "number",
                          "description": "total number of blocked categories"
                        },
                        "policyrequests": {
                          "type": "number",
                          "description": "total number of policy requests"
                        },
                        "requests": {
                          "type": "number",
                          "description": "total number of requests"
                        },
                        "requestsallowed": {
                          "type": "number",
                          "description": "total number of allowed requests"
                        },
                        "categories": {
                          "type": "number",
                          "description": "total number of categories"
                        },
                        "identitytypes": {
                          "type": "number",
                          "description": "total number of identity types"
                        },
                        "applicationsblocked": {
                          "type": "number",
                          "description": "total number of blocked applications"
                        },
                        "files": {
                          "type": "number",
                          "description": "total number of files"
                        },
                        "identities": {
                          "type": "number",
                          "description": "total number of identities"
                        },
                        "applicationsallowed": {
                          "type": "number",
                          "description": "total number of allowed applications"
                        }
                      },
                      "required": [
                        "applications",
                        "applicationsallowed",
                        "applicationsblocked",
                        "categories",
                        "domains",
                        "files",
                        "filetypes",
                        "identities",
                        "identitytypes",
                        "policycategories",
                        "policyrequests",
                        "requests",
                        "requestsallowed",
                        "requestsblocked"
                      ],
                      "example": {
                        "applications": 123,
                        "domains": 82,
                        "requestsblocked": 189,
                        "filetypes": 0,
                        "policycategories": 2,
                        "policyrequests": 2,
                        "requests": 189,
                        "requestsallowed": 10,
                        "categories": 11,
                        "identitytypes": 1,
                        "applicationsblocked": 2,
                        "files": 5,
                        "identities": 1,
                        "applicationsallowed": 2
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "data": {
                    "applications": 123,
                    "domains": 82,
                    "requestsblocked": 189,
                    "filetypes": 0,
                    "policycategories": 2,
                    "requests": 189,
                    "requestsallowed": 10,
                    "categories": 11,
                    "identitytypes": 1,
                    "applicationsblocked": 2,
                    "files": 5,
                    "identities": 1,
                    "applicationsallowed": 2,
                    "policyrequests": 3
                  },
                  "meta": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/reports/remoteAccessEvents": {
      "get": {
        "tags": [
          "Reports",
          "Remote Access"
        ],
        "summary": "Get Remote Access Events",
        "description": "List the events logged by remote access.",
        "operationId": "getRemoteAccessEvents",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "A timestamp or relative time string (for example: '-1days').\nFilter for data that appears after this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1639146300000"
          },
          {
            "name": "to",
            "in": "query",
            "description": "A timestamp or relative time string (for example: 'now').\nFilter for data that appears before this time.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "1640010300000"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of records to return from the collection.",
            "required": true,
            "schema": {
              "type": "number"
            },
            "example": 100
          },
          {
            "name": "ip",
            "in": "query",
            "description": "An IP address",
            "schema": {
              "type": "string"
            },
            "example": "10.10.10.10"
          },
          {
            "name": "identityids",
            "in": "query",
            "description": "An identity ID or comma-delimited list of identity ID.",
            "schema": {
              "type": "string"
            },
            "example": "1,2,3"
          },
          {
            "name": "identitytypes",
            "in": "query",
            "description": "An identity type or comma-delimited list of identity type.",
            "schema": {
              "type": "string"
            },
            "example": "network,roaming"
          },
          {
            "name": "connectionevent",
            "in": "query",
            "description": "Specify the type of connection event.",
            "schema": {
              "type": "string",
              "enum": [
                "connected",
                "disconnected",
                "failed"
              ]
            },
            "example": "connected"
          },
          {
            "name": "anyconnectversions",
            "in": "query",
            "description": "Specify a comma-separated list of AnyConnect Roaming Security module\nversions to filter the data.",
            "schema": {
              "type": "string"
            },
            "example": "4.10.05095"
          },
          {
            "name": "osversions",
            "in": "query",
            "description": "Specify a comma-separated list of OS versions to filter the data.",
            "schema": {
              "type": "string"
            },
            "example": "linux-64-Ubuntu 20.04.5 LTS (Focal Fossa)"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "osversion",
                          "internalip",
                          "connecttimestamp",
                          "reason",
                          "failedreasons",
                          "connectionevent",
                          "anyconnectversion",
                          "timestamp",
                          "identities"
                        ],
                        "properties": {
                          "osversion": {
                            "type": "string",
                            "description": "The OS version of the host",
                            "example": "linux-64-Ubuntu 20.04.5 LTS (Focal Fossa)"
                          },
                          "internalip": {
                            "type": "string",
                            "description": "The internal IP address of the host",
                            "example": "10.0.1.5"
                          },
                          "connecttimestamp": {
                            "type": "number",
                            "description": "The time and date when the host connected, expressed in milliseconds",
                            "example": 1667252442
                          },
                          "reason": {
                            "type": "string",
                            "description": "The reason the event occurred for the remote access endpoint",
                            "example": "ACCT_DISC_USER_REQ"
                          },
                          "failedreasons": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A list of messages that describe the remote access error",
                            "example": [

                            ]
                          },
                          "connectionevent": {
                            "type": "string",
                            "description": "The type of event associated with the remote connection",
                            "example": "disconnected"
                          },
                          "anyconnectversion": {
                            "type": "string",
                            "description": "The version of the AnyConnect Roaming Security module",
                            "example": "4.10.05095"
                          },
                          "timestamp": {
                            "type": "number",
                            "description": "The time and date of the event, expressed in milliseconds",
                            "example": 1667252458
                          },
                          "identities": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "The id of the remote access endpoint",
                                  "example": 1173502975
                                },
                                "type": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "integer",
                                      "description": "The ID of the type",
                                      "example": 7
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The descriptive type",
                                      "example": "directory_user"
                                    },
                                    "label": {
                                      "type": "string",
                                      "description": "The label for the type",
                                      "example": "AD Users"
                                    }
                                  }
                                },
                                "label": {
                                  "type": "string",
                                  "description": "The label for the remote access identity",
                                  "example": "sample-endpoint@cisco.com"
                                },
                                "deleted": {
                                  "type": "boolean",
                                  "description": "Specifies whether the identity is available",
                                  "example": false
                                }
                              }
                            }
                          }
                        },
                        "example": {
                          "osversion": "linux-64-Ubuntu 20.04.5 LTS (Focal Fossa)",
                          "internalip": "10.0.1.5",
                          "connecttimestamp": 1667252442,
                          "reason": "ACCT_DISC_USER_REQ",
                          "failedreasons": [

                          ],
                          "connectionevent": "disconnected",
                          "anyconnectversion": "4.10.05095",
                          "timestamp": 1667252458,
                          "identities": [
                            {
                              "id": 1173502975,
                              "type": {
                                "id": 7,
                                "type": "directory_user",
                                "label": "AD Users"
                              },
                              "label": "sample-remote-access@cisco.com",
                              "deleted": false
                            }
                          ]
                        }
                      }
                    },
                    "meta": {
                      "type": "object",
                      "description": "Meta data",
                      "example": {
                      }
                    }
                  },
                  "required": [
                    "data",
                    "meta"
                  ]
                },
                "example": {
                  "data": [
                    {
                      "osversion": "linux-64-Ubuntu 20.04.5 LTS (Focal Fossa)",
                      "internalip": "10.0.1.5",
                      "connecttimestamp": 1667252442,
                      "reason": "ACCT_DISC_USER_REQ",
                      "failedreasons": [

                      ],
                      "connectionevent": "disconnected",
                      "anyconnectversion": "4.10.05095",
                      "timestamp": 1667252458,
                      "identities": [
                        {
                          "id": 1173502975,
                          "type": {
                            "id": 7,
                            "type": "directory_user",
                            "label": "AD Users"
                          },
                          "label": "sample-remote-access@cisco.com",
                          "deleted": false
                        }
                      ]
                    }
                  ],
                  "meta": {
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Invalid request"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Unauthorized request"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Not Found"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  },
                  "example": {
                    "message": "Server error"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationId}/datacenters": {
      "get": {
        "summary": "List Data Centers",
        "operationId": "getDatacenters",
        "security": [
          {
            "meraki_api_key": [

            ]
          }
        ],
        "description": "List the information about the IPsec-enabled data centers.\nThe data center information includes the IP address and location details.",
        "tags": [
          "Deployments",
          "Data Center"
        ],
        "responses": {
          "200": {
            "description": "List the data centers",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "continents": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cities": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "latitude": {
                                  "type": "string",
                                  "example": "52.354662"
                                },
                                "longitude": {
                                  "type": "string",
                                  "example": "4.955532"
                                },
                                "name": {
                                  "type": "string",
                                  "example": "Amsterdam"
                                },
                                "dc": {
                                  "type": "string",
                                  "example": "ams1.edc"
                                },
                                "range": {
                                  "type": "string",
                                  "example": "146.112.98.2/32"
                                },
                                "fqdn": {
                                  "type": "string",
                                  "example": "eu2-b.vpn.sig.umbrella.com",
                                  "description": "The FQDN associated with the city. Returns the FQDN if available."
                                }
                              }
                            }
                          },
                          "name": {
                            "type": "string",
                            "example": "Europe"
                          }
                        }
                      }
                    }
                  }
                },
                "example": {
                  "continents": [
                    {
                      "cities": [
                        {
                          "latitude": "52.354662",
                          "longitude": "4.955532",
                          "name": "Amsterdam",
                          "dc": "ams1.edc",
                          "range": "146.112.98.2/32",
                          "fqdn": "eu2-b.vpn.sig.umbrella.com"
                        }
                      ],
                      "name": "Europe"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "minProperties": 3,
                  "required": [
                    "statusCode",
                    "error",
                    "txId"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 400,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Validation Error",
                      "description": "a brief description of the error"
                    },
                    "txId": {
                      "type": "string",
                      "example": "86e189a6-0124-47d3-a32c-25ff3f07deaf",
                      "description": "a unique hex number that can be used for debugging"
                    },
                    "validationErrors": {
                      "type": "object",
                      "properties": {
                        "someProperty": {
                          "type": "string",
                          "example": "must not be empty",
                          "description": "the name of the property failing validation."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized request",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Unauthorized- The authorization header is missing or the token is unauthorized",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 401,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Unauthorized",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Forbidden- The token is invalid",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 403,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Forbidden, Invalid authentication credentials",
                      "description": "a brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Not Found- A resource specified in the URL was not found",
                  "type": "object",
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 404,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Not Found",
                      "description": "A brief description of the error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Detailed error message"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Error- This request could not be processed by the server",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "minProperties": 3,
                  "required": [
                    "statusCode",
                    "error",
                    "txId"
                  ],
                  "properties": {
                    "statusCode": {
                      "type": "integer",
                      "example": 500,
                      "description": "HTTP status code"
                    },
                    "error": {
                      "type": "string",
                      "example": "Internal Server Error",
                      "description": "a brief description of the error"
                    },
                    "txId": {
                      "type": "string",
                      "example": "86e189a6-0124-47d3-a32c-25ff3f07deaf",
                      "description": "a unique hex number that can be used for debugging"
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "organizationId",
            "in": "path",
            "description": "Organization ID associated with this resource.",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "meraki_api_key": {
        "type": "apiKey",
        "name": "X-Cisco-Meraki-API-Key",
        "in": "header"
      },
      "bearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Reports"
    },
    {
      "name": "Activity"
    },
    {
      "name": "Top Categories"
    },
    {
      "name": "Organization Requests by Timerange and Category"
    },
    {
      "name": "Total Requests"
    },
    {
      "name": "Summary"
    },
    {
      "name": "Remote Access"
    },
    {
      "name": "Deployments"
    },
    {
      "name": "Data Center"
    }
  ],
  "servers": [
    {
      "url": "https://api.meraki.com/{basePath}",
      "variables": {
        "basePath": {
          "default": "api/secureConnect/v1"
        }
      }
    }
  ],
  "security": [
    {
      "meraki_api_key": [

      ]
    },
    {
      "bearerAuth": [

      ]
    }
  ]
}